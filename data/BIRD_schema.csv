db_id,schema_input1,schema_input2
european_football_1,"divisions : division (text), name (text), country (text) | matchs : Division (text), Date (text), HomeTeam (text), AwayTeam (text), Final-time Home-team Goals (number), Final-time Away-team Goals (number), Final-time Results (text), season (number)","CREATE TABLE divisions (
    division TEXT,
    name TEXT,
    country TEXT
);

CREATE TABLE matchs (
    Division TEXT,
    Date TEXT,
    HomeTeam TEXT,
    AwayTeam TEXT,
    Final-time Home-team Goals INT,
    Final-time Away-team Goals INT,
    Final-time Results TEXT,
    season INT
);"
sales_in_weather,"sales_in_weather : date (text), store number (number), item number (number), units (number) | weather : station number (number), date (text), temperature max (number), temperature min (number), temperature average (number), departure from normal (number), dew point (number), wet bulb (number), heat (number), cool (number), sunrise (text), sunset (text), code summarization (text), snowfall (text), preciptotal (text), station pressure (text), sea level (text), resultant speed (text), resultant direction (number), average speed (text) | relation : store number (number), station number (number)","CREATE TABLE sales_in_weather (
    date TEXT,
    store number INT,
    item number INT,
    units INT
);

CREATE TABLE weather (
    station number INT,
    date TEXT,
    temperature max INT,
    temperature min INT,
    temperature average INT,
    departure from normal INT,
    dew point INT,
    wet bulb INT,
    heat INT,
    cool INT,
    sunrise TEXT,
    sunset TEXT,
    code summarization TEXT,
    snowfall TEXT,
    preciptotal TEXT,
    station pressure TEXT,
    sea level TEXT,
    resultant speed TEXT,
    resultant direction INT,
    average speed TEXT
);

CREATE TABLE relation (
    store number INT,
    station number INT
);"
craftbeer,"Breweries : id (number), name (text), city (text), state (text) | Beers : id (number), brewery id (number), alcohol by volume (text), International Bitterness Units (text), name (text), style (text), ounces (text)","CREATE TABLE Breweries (
    id INT,
    name TEXT,
    city TEXT,
    state TEXT
);

CREATE TABLE Beers (
    id INT,
    brewery id INT,
    alcohol by volume TEXT,
    International Bitterness Units TEXT,
    name TEXT,
    style TEXT,
    ounces TEXT
);"
soccer_2016,"Batting_Style : batting id (number), batting hand (text) | Bowling_Style : bowling id (number), bowling skill (text) | City : city id (number), city name (text), country id (number) | Country : country id (number), country name (text) | Extra_Type : extra id (number), extra name (text) | Extra_Runs : match id (number), over id (number), ball id (number), extra type id (number), extra runs (number), innings number (number) | Out_Type : out id (number), out name (text) | Outcome : outcome id (number), outcome type (text) | Player : player id (number), player name (text), date of birth (text), batting hand (number), bowling skill (number), country name (number) | Rolee : role id (number), role description (text) | Season : season id (number), man of the series (number), orange cap (number), purple cap (number), season year (number) | Team : team id (number), team name (text) | Toss_Decision : toss id (number), toss name (text) | Umpire : umpire id (number), umpire name (text), umpire country (number) | Venue : venue id (number), venue name (text), city id (number) | Win_By : winning id (number), winning type (text) | Match : Match_Id (number), team 1 (number), team 2 (number), match date (text), season id (number), venue id (number), toss winner (number), toss decide (number), winning type (number), winning margin (number), outcome type (number), match winner (number), man of the match (number) | Ball_by_Ball : match id (number), over id (number), ball id (number), innings number (number), team batting (number), team bowling (number), striker batting position (number), Striker (number), non striker (number), Bowler (number) | Batsman_Scored : match id (number), over id (number), ball id (number), runs scored (number), innings number (number) | Player_Match : match id (number), player id (number), role id (number), team id (number) | Wicket_Taken : match id (number), over id (number), ball id (number), player out (number), kind out (number), Fielders (number), innings number (number)","CREATE TABLE Batting_Style (
    batting id INT,
    batting hand TEXT
);

CREATE TABLE Bowling_Style (
    bowling id INT,
    bowling skill TEXT
);

CREATE TABLE City (
    city id INT,
    city name TEXT,
    country id INT
);

CREATE TABLE Country (
    country id INT,
    country name TEXT
);

CREATE TABLE Extra_Type (
    extra id INT,
    extra name TEXT
);

CREATE TABLE Extra_Runs (
    match id INT,
    over id INT,
    ball id INT,
    extra type id INT,
    extra runs INT,
    innings number INT
);

CREATE TABLE Out_Type (
    out id INT,
    out name TEXT
);

CREATE TABLE Outcome (
    outcome id INT,
    outcome type TEXT
);

CREATE TABLE Player (
    player id INT,
    player name TEXT,
    date of birth TEXT,
    batting hand INT,
    bowling skill INT,
    country name INT
);

CREATE TABLE Rolee (
    role id INT,
    role description TEXT
);

CREATE TABLE Season (
    season id INT,
    man of the series INT,
    orange cap INT,
    purple cap INT,
    season year INT
);

CREATE TABLE Team (
    team id INT,
    team name TEXT
);

CREATE TABLE Toss_Decision (
    toss id INT,
    toss name TEXT
);

CREATE TABLE Umpire (
    umpire id INT,
    umpire name TEXT,
    umpire country INT
);

CREATE TABLE Venue (
    venue id INT,
    venue name TEXT,
    city id INT
);

CREATE TABLE Win_By (
    winning id INT,
    winning type TEXT
);

CREATE TABLE Match (
    Match_Id INT,
    team 1 INT,
    team 2 INT,
    match date TEXT,
    season id INT,
    venue id INT,
    toss winner INT,
    toss decide INT,
    winning type INT,
    winning margin INT,
    outcome type INT,
    match winner INT,
    man of the match INT
);

CREATE TABLE Ball_by_Ball (
    match id INT,
    over id INT,
    ball id INT,
    innings number INT,
    team batting INT,
    team bowling INT,
    striker batting position INT,
    Striker INT,
    non striker INT,
    Bowler INT
);

CREATE TABLE Batsman_Scored (
    match id INT,
    over id INT,
    ball id INT,
    runs scored INT,
    innings number INT
);

CREATE TABLE Player_Match (
    match id INT,
    player id INT,
    role id INT,
    team id INT
);

CREATE TABLE Wicket_Taken (
    match id INT,
    over id INT,
    ball id INT,
    player out INT,
    kind out INT,
    Fielders INT,
    innings number INT
);"
restaurant,"geographic : city (text), country (text), region (text) | generalinfo : id restaurant (number), label (text), food type (text), city (text), review (text) | location : id restaurant (number), street number (number), street name (text), city (text)","CREATE TABLE geographic (
    city TEXT,
    country TEXT,
    region TEXT
);

CREATE TABLE generalinfo (
    id restaurant INT,
    label TEXT,
    food type TEXT,
    city TEXT,
    review TEXT
);

CREATE TABLE location (
    id restaurant INT,
    street number INT,
    street name TEXT,
    city TEXT
);"
movie,"actor : actor id (number), Name (text), date of birth (text), birth city (text), birth country (text), height inches (number), Biography (text), Gender (text), Ethnicity (text), NetWorth (text) | movie : movie id (number), Title (text), motion picture association of america rating (text), Budget (number), Gross (number), Release Date (text), Genre (text), Runtime (number), Rating (text), rating count (number), Summary (text) | characters : movie id (number), actor id (number), character name (text), credit order (number), pay (text), screentime (text)","CREATE TABLE actor (
    actor id INT,
    Name TEXT,
    date of birth TEXT,
    birth city TEXT,
    birth country TEXT,
    height inches INT,
    Biography TEXT,
    Gender TEXT,
    Ethnicity TEXT,
    NetWorth TEXT
);

CREATE TABLE movie (
    movie id INT,
    Title TEXT,
    motion picture association of america rating TEXT,
    Budget INT,
    Gross INT,
    Release Date TEXT,
    Genre TEXT,
    Runtime INT,
    Rating TEXT,
    rating count INT,
    Summary TEXT
);

CREATE TABLE characters (
    movie id INT,
    actor id INT,
    character name TEXT,
    credit order INT,
    pay TEXT,
    screentime TEXT
);"
olympics,"city : id (number), city name (text) | games : id (number), games year (number), games name (text), season (text) | games_city : games id (number), city id (number) | medal : id (number), medal name (text) | noc_region : id (number), noc (text), region name (text) | person : id (number), full name (text), gender (text), height (number), weight (number) | games_competitor : id (number), games id (number), person id (number), age (number) | person_region : person_id (number), region_id (number) | sport : id (number), sport name (text) | event : id (number), sport id (number), event name (text) | competitor_event : event id (number), competitor id (number), medal id (number)","CREATE TABLE city (
    id INT,
    city name TEXT
);

CREATE TABLE games (
    id INT,
    games year INT,
    games name TEXT,
    season TEXT
);

CREATE TABLE games_city (
    games id INT,
    city id INT
);

CREATE TABLE medal (
    id INT,
    medal name TEXT
);

CREATE TABLE noc_region (
    id INT,
    noc TEXT,
    region name TEXT
);

CREATE TABLE person (
    id INT,
    full name TEXT,
    gender TEXT,
    height INT,
    weight INT
);

CREATE TABLE games_competitor (
    id INT,
    games id INT,
    person id INT,
    age INT
);

CREATE TABLE person_region (
    person_id INT,
    region_id INT
);

CREATE TABLE sport (
    id INT,
    sport name TEXT
);

CREATE TABLE event (
    id INT,
    sport id INT,
    event name TEXT
);

CREATE TABLE competitor_event (
    event id INT,
    competitor id INT,
    medal id INT
);"
language_corpus,"langs : language id (number), language (text), locale (text), pages (number), words (number) | pages : page id (number), language id (number), page (number), revision (number), title (text), words (number) | words : word id (number), word (text), occurrences (number) | langs_words : language id (number), word id (number), occurrences (number) | pages_words : page id (number), word id (number), occurrences (number) | biwords : language id (number), word id of the first word (number), word id of the second word (number), occurrences (number)","CREATE TABLE langs (
    language id INT,
    language TEXT,
    locale TEXT,
    pages INT,
    words INT
);

CREATE TABLE pages (
    page id INT,
    language id INT,
    page INT,
    revision INT,
    title TEXT,
    words INT
);

CREATE TABLE words (
    word id INT,
    word TEXT,
    occurrences INT
);

CREATE TABLE langs_words (
    language id INT,
    word id INT,
    occurrences INT
);

CREATE TABLE pages_words (
    page id INT,
    word id INT,
    occurrences INT
);

CREATE TABLE biwords (
    language id INT,
    word id of the first word INT,
    word id of the second word INT,
    occurrences INT
);"
app_store,"googleplaystore : App (text), Category (text), Rating (text), Reviews (number), Size (text), Installs (text), Type (text), Price (text), Content Rating (text), Genres (text) | googleplaystore_user_reviews : App (text), Translated_Review (text), Sentiment (text), Sentiment Polarity (text), Sentiment Subjectivity (text)","CREATE TABLE googleplaystore (
    App TEXT,
    Category TEXT,
    Rating TEXT,
    Reviews INT,
    Size TEXT,
    Installs TEXT,
    Type TEXT,
    Price TEXT,
    Content Rating TEXT,
    Genres TEXT
);

CREATE TABLE googleplaystore_user_reviews (
    App TEXT,
    Translated_Review TEXT,
    Sentiment TEXT,
    Sentiment Polarity TEXT,
    Sentiment Subjectivity TEXT
);"
sales,"Customers : Customer ID (number), First Name (text), Middle Initial (text), Last Name (text) | Employees : Employee ID (number), First Name (text), Middle Initial (text), Last Name (text) | Products : Product ID (number), Name (text), Price (text) | Sales : Sales ID (number), SalesPerson ID (number), Customer ID (number), Product ID (number), Quantity (number)","CREATE TABLE Customers (
    Customer ID INT,
    First Name TEXT,
    Middle Initial TEXT,
    Last Name TEXT
);

CREATE TABLE Employees (
    Employee ID INT,
    First Name TEXT,
    Middle Initial TEXT,
    Last Name TEXT
);

CREATE TABLE Products (
    Product ID INT,
    Name TEXT,
    Price TEXT
);

CREATE TABLE Sales (
    Sales ID INT,
    SalesPerson ID INT,
    Customer ID INT,
    Product ID INT,
    Quantity INT
);"
video_games,"genre : id (number), genre_name (text) | game : id (number), genre id (number), game name (text) | platform : id (number), platform_name (text) | publisher : id (number), publisher_name (text) | game_publisher : id (number), game id (number), publisher id (number) | game_platform : id (number), game publisher id (number), platform id (number), release year (number) | region : id (number), region_name (text) | region_sales : region_id (number), game platform id (number), number sales (text)","CREATE TABLE genre (
    id INT,
    genre_name TEXT
);

CREATE TABLE game (
    id INT,
    genre id INT,
    game name TEXT
);

CREATE TABLE platform (
    id INT,
    platform_name TEXT
);

CREATE TABLE publisher (
    id INT,
    publisher_name TEXT
);

CREATE TABLE game_publisher (
    id INT,
    game id INT,
    publisher id INT
);

CREATE TABLE game_platform (
    id INT,
    game publisher id INT,
    platform id INT,
    release year INT
);

CREATE TABLE region (
    id INT,
    region_name TEXT
);

CREATE TABLE region_sales (
    region_id INT,
    game platform id INT,
    number sales TEXT
);"
image_and_language,"ATT_CLASSES : ATTRIBUTE CLASS ID (number), ATTRIBUTE CLASS (text) | OBJ_CLASSES : OBJECT CLASS ID (number), OBJECT CLASS (text) | IMG_OBJ : IMAGE ID (number), OBJECT SAMPLE ID (number), OBJECT CLASS ID (number), X (number), Y (number), W (number), H (number) | IMG_OBJ_ATT : IMAGE ID (number), ATTRIBUTE CLASS ID (number), OBJECT SAMPLE ID (number) | PRED_CLASSES : PREDICTION CLASS ID (number), PREDICTION CLASS (text) | IMG_REL : IMAGE ID (number), PREDICTION CLASS ID (number), OBJECT1 SAMPLE ID (number), OBJECT2 SAMPLE ID (number)","CREATE TABLE ATT_CLASSES (
    ATTRIBUTE CLASS ID INT,
    ATTRIBUTE CLASS TEXT
);

CREATE TABLE OBJ_CLASSES (
    OBJECT CLASS ID INT,
    OBJECT CLASS TEXT
);

CREATE TABLE IMG_OBJ (
    IMAGE ID INT,
    OBJECT SAMPLE ID INT,
    OBJECT CLASS ID INT,
    X INT,
    Y INT,
    W INT,
    H INT
);

CREATE TABLE IMG_OBJ_ATT (
    IMAGE ID INT,
    ATTRIBUTE CLASS ID INT,
    OBJECT SAMPLE ID INT
);

CREATE TABLE PRED_CLASSES (
    PREDICTION CLASS ID INT,
    PREDICTION CLASS TEXT
);

CREATE TABLE IMG_REL (
    IMAGE ID INT,
    PREDICTION CLASS ID INT,
    OBJECT1 SAMPLE ID INT,
    OBJECT2 SAMPLE ID INT
);"
software_company,"Demog : GEOGRAPHIC ID (number), INHABITANTS (THOUSANDS) (text), INCOME (THOUSANDS) (text), A_VAR1 (text), A_VAR2 (text), A_VAR3 (text), A_VAR4 (text), A_VAR5 (text), A_VAR6 (text), A_VAR7 (text), A_VAR8 (text), A_VAR9 (text), A_VAR10 (text), A_VAR11 (text), A_VAR12 (text), A_VAR13 (text), A_VAR14 (text), A_VAR15 (text), A_VAR16 (text), A_VAR17 (text), A_VAR18 (text) | mailings3 : REFERENCE ID (number), REFERENCE DATE (text), RESPONSE (text) | Customers : ID (number), SEX (text), MARITAL STATUS (text), GEOGRAPHIC ID (number), EDUCATION NUMBER (number), OCCUPATION (text), age (number) | Mailings1_2 : REFERENCE ID (number), REFERENCE DATE (text), RESPONSE (text) | Sales : EVENT ID (number), REFERENCE ID (number), EVENT DATE (text), AMOUNT (text)","CREATE TABLE Demog (
    GEOGRAPHIC ID INT,
    INHABITANTS THOUSANDS) (text,
    INCOME THOUSANDS) (text,
    A_VAR1 TEXT,
    A_VAR2 TEXT,
    A_VAR3 TEXT,
    A_VAR4 TEXT,
    A_VAR5 TEXT,
    A_VAR6 TEXT,
    A_VAR7 TEXT,
    A_VAR8 TEXT,
    A_VAR9 TEXT,
    A_VAR10 TEXT,
    A_VAR11 TEXT,
    A_VAR12 TEXT,
    A_VAR13 TEXT,
    A_VAR14 TEXT,
    A_VAR15 TEXT,
    A_VAR16 TEXT,
    A_VAR17 TEXT,
    A_VAR18 TEXT
);

CREATE TABLE mailings3 (
    REFERENCE ID INT,
    REFERENCE DATE TEXT,
    RESPONSE TEXT
);

CREATE TABLE Customers (
    ID INT,
    SEX TEXT,
    MARITAL STATUS TEXT,
    GEOGRAPHIC ID INT,
    EDUCATION NUMBER INT,
    OCCUPATION TEXT,
    age INT
);

CREATE TABLE Mailings1_2 (
    REFERENCE ID INT,
    REFERENCE DATE TEXT,
    RESPONSE TEXT
);

CREATE TABLE Sales (
    EVENT ID INT,
    REFERENCE ID INT,
    EVENT DATE TEXT,
    AMOUNT TEXT
);"
authors,"Author : Id (number), Name (text), Affiliation (text) | Conference : Id (number), ShortName (text), FullName (text), HomePage (text) | Journal : Id (number), ShortName (text), FullName (text), HomePage (text) | Paper : Id (number), Title (text), Year (number), ConferenceId (number), JournalId (number), Keyword (text) | PaperAuthor : PaperId (number), AuthorId (number), Name (text), Affiliation (text)","CREATE TABLE Author (
    Id INT,
    Name TEXT,
    Affiliation TEXT
);

CREATE TABLE Conference (
    Id INT,
    ShortName TEXT,
    FullName TEXT,
    HomePage TEXT
);

CREATE TABLE Journal (
    Id INT,
    ShortName TEXT,
    FullName TEXT,
    HomePage TEXT
);

CREATE TABLE Paper (
    Id INT,
    Title TEXT,
    Year INT,
    ConferenceId INT,
    JournalId INT,
    Keyword TEXT
);

CREATE TABLE PaperAuthor (
    PaperId INT,
    AuthorId INT,
    Name TEXT,
    Affiliation TEXT
);"
movies_4,"country : country id (number), country iso code (text), country name (text) | department : department id (number), department name (text) | gender : gender id (number), gender (text) | genre : genre id (number), genre_name (text) | keyword : keyword id (number), keyword name (text) | language : language id (number), language code (text), language name (text) | language_role : role id (number), language role (text) | movie : movie id (number), title (text), budget (number), homepage (text), overview (text), popularity (text), release date (text), revenue (number), runtime (number), movie_status (text), tagline (text), vote average (text), vote count (number) | movie_genres : movie id (number), genre id (number) | movie_languages : movie id (number), language id (number), language role id (number) | person : person id (number), person name (text) | movie_crew : movie id (number), person id (number), department id (number), job (text) | production_company : company id (number), company name (text) | production_country : mivie id (number), country id (number) | movie_cast : movie id (number), person id (number), character name (text), gender id (number), cast order (number) | movie_keywords : movie id (number), keyword id (number) | movie_company : movie id (number), company id (number)","CREATE TABLE country (
    country id INT,
    country iso code TEXT,
    country name TEXT
);

CREATE TABLE department (
    department id INT,
    department name TEXT
);

CREATE TABLE gender (
    gender id INT,
    gender TEXT
);

CREATE TABLE genre (
    genre id INT,
    genre_name TEXT
);

CREATE TABLE keyword (
    keyword id INT,
    keyword name TEXT
);

CREATE TABLE language (
    language id INT,
    language code TEXT,
    language name TEXT
);

CREATE TABLE language_role (
    role id INT,
    language role TEXT
);

CREATE TABLE movie (
    movie id INT,
    title TEXT,
    budget INT,
    homepage TEXT,
    overview TEXT,
    popularity TEXT,
    release date TEXT,
    revenue INT,
    runtime INT,
    movie_status TEXT,
    tagline TEXT,
    vote average TEXT,
    vote count INT
);

CREATE TABLE movie_genres (
    movie id INT,
    genre id INT
);

CREATE TABLE movie_languages (
    movie id INT,
    language id INT,
    language role id INT
);

CREATE TABLE person (
    person id INT,
    person name TEXT
);

CREATE TABLE movie_crew (
    movie id INT,
    person id INT,
    department id INT,
    job TEXT
);

CREATE TABLE production_company (
    company id INT,
    company name TEXT
);

CREATE TABLE production_country (
    mivie id INT,
    country id INT
);

CREATE TABLE movie_cast (
    movie id INT,
    person id INT,
    character name TEXT,
    gender id INT,
    cast order INT
);

CREATE TABLE movie_keywords (
    movie id INT,
    keyword id INT
);

CREATE TABLE movie_company (
    movie id INT,
    company id INT
);"
social_media,"location : location id (number), Country (text), State (text), state code (text), City (text) | user : user id (text), Gender (text) | twitter : tweet id (text), Weekday (text), Hour (number), Day (number), language (text), is reshare (text), Reach (number), retweet count (number), Likes (number), Klout (number), Sentiment (text), text (text), location id (number), user id (text)","CREATE TABLE location (
    location id INT,
    Country TEXT,
    State TEXT,
    state code TEXT,
    City TEXT
);

CREATE TABLE user (
    user id TEXT,
    Gender TEXT
);

CREATE TABLE twitter (
    tweet id TEXT,
    Weekday TEXT,
    Hour INT,
    Day INT,
    language TEXT,
    is reshare TEXT,
    Reach INT,
    retweet count INT,
    Likes INT,
    Klout INT,
    Sentiment TEXT,
    text TEXT,
    location id INT,
    user id TEXT
);"
human_resources,"location : location id (number), location city (text), address (text), state (text), zip code (number), office phone (text) | position : position id (number), position title (text), education required (text), minimum salary (text), maximum salary (text) | employee : social security number (text), last name (text), first name (text), hire date (text), salary (text), gender (text), performance (text), position id (number), location id (number)","CREATE TABLE location (
    location id INT,
    location city TEXT,
    address TEXT,
    state TEXT,
    zip code INT,
    office phone TEXT
);

CREATE TABLE position (
    position id INT,
    position title TEXT,
    education required TEXT,
    minimum salary TEXT,
    maximum salary TEXT
);

CREATE TABLE employee (
    social security number TEXT,
    last name TEXT,
    first name TEXT,
    hire date TEXT,
    salary TEXT,
    gender TEXT,
    performance TEXT,
    position id INT,
    location id INT
);"
regional_sales,"Customers : customer id (number), customer names (text) | Products : product id (number), product name (text) | Regions : state code (text), State (text), Region (text) | Sales Team : SalesTeam ID (number), Sales Team (text), Region (text) | Store Locations : Store ID (number), City Name (text), County (text), State Code (text), State (text), Type (text), Latitude (text), Longitude (text), Area Code (number), Population (number), Household Income (number), Median Income (number), Land Area (number), Water Area (number), Time Zone (text) | Sales Orders : Order Number (text), Sales Channel (text), Warehouse Code (text), Procured Date (text), Order Date (text), Ship Date (text), Delivery Date (text), Currency Code (text), _Sales Team ID (number), _Customer ID (number), _Store ID (number), _Product ID (number), Order Quantity (number), Discount Applied (text), Unit Price (text), Unit Cost (text)","CREATE TABLE Customers (
    customer id INT,
    customer names TEXT
);

CREATE TABLE Products (
    product id INT,
    product name TEXT
);

CREATE TABLE Regions (
    state code TEXT,
    State TEXT,
    Region TEXT
);

CREATE TABLE Sales Team (
    SalesTeam ID INT,
    Sales Team TEXT,
    Region TEXT
);

CREATE TABLE Store Locations (
    Store ID INT,
    City Name TEXT,
    County TEXT,
    State Code TEXT,
    State TEXT,
    Type TEXT,
    Latitude TEXT,
    Longitude TEXT,
    Area Code INT,
    Population INT,
    Household Income INT,
    Median Income INT,
    Land Area INT,
    Water Area INT,
    Time Zone TEXT
);

CREATE TABLE Sales Orders (
    Order Number TEXT,
    Sales Channel TEXT,
    Warehouse Code TEXT,
    Procured Date TEXT,
    Order Date TEXT,
    Ship Date TEXT,
    Delivery Date TEXT,
    Currency Code TEXT,
    _Sales Team ID INT,
    _Customer ID INT,
    _Store ID INT,
    _Product ID INT,
    Order Quantity INT,
    Discount Applied TEXT,
    Unit Price TEXT,
    Unit Cost TEXT
);"
computer_student,"course : course id (number), course level (text) | person : person ID (number), professor (number), student (number), has position (text), in phase (text), years in program (text) | advisedBy : person id (number), person id dummy (number) | taughtBy : course ID (number), person ID (number)","CREATE TABLE course (
    course id INT,
    course level TEXT
);

CREATE TABLE person (
    person ID INT,
    professor INT,
    student INT,
    has position TEXT,
    in phase TEXT,
    years in program TEXT
);

CREATE TABLE advisedBy (
    person id INT,
    person id dummy INT
);

CREATE TABLE taughtBy (
    course ID INT,
    person ID INT
);"
works_cycles,"CountryRegion : Country Region Code (text), Name (text), modified date (text) | Culture : Culture ID (text), Name (text), modified date (text) | Currency : Currency Code (text), Name (text), modified date (text) | CountryRegionCurrency : Country Region Code (text), Currency Code (text), modified date (text) | Person : Business Entity ID (number), Person Type (text), Name Style (number), Title (text), First Name (text), Middle Name (text), Last Name (text), Suffix (text), Email Promotion (number), Additional Contact Info (text), Demographics (text), rowguid (text), modified date (text) | BusinessEntityContact : Business Entity ID (number), Person ID (number), Contact Type ID (number), rowguid (text), modified date (text) | EmailAddress : Business Entity ID (number), Email Address ID (number), Email Address (text), rowguid (text), modified date (text) | Employee : Business Entity ID (number), National ID Number (text), Login ID (text), Organization Node (text), Organization Level (number), Job Title (text), Birth Date (text), Marital Status (text), Gender (text), Hire Date (text), Salaried Flag (number), Vacation Hours (number), Sick Leave Hours (number), Current Flag (number), rowguid (text), modified date (text) | Password : Business Entity ID (number), Password Hash (text), Password Salt (text), rowguid (text), modified date (text) | PersonCreditCard : Business Entity ID (number), Credit Card ID (number), modified date (text) | ProductCategory : Product Category ID (number), Name (text), rowguid (text), modified date (text) | ProductDescription : Product Description ID (number), Description (text), rowguid (text), modified date (text) | ProductModel : Product Model ID (number), Name (text), Catalog Description (text), Instructions (text), rowguid (text), modified date (text) | ProductModelProductDescriptionCulture : Product Model ID (number), Product Description ID (number), Culture ID (text), modified date (text) | ProductPhoto : Product Photo ID (number), Thumb Nail Photo (text), Thumbnail Photo File Name (text), large photo (text), Large Photo File Name (text), Modified Date (text) | ProductSubcategory : Product Subcategory ID (number), Product Category ID (number), Name (text), rowguid (text), modified date (text) | SalesReason : SalesReasonID (number), Name (text), ReasonType (text), modified date (text) | SalesTerritory : TerritoryID (number), Name (text), Country Region Code (text), Group (text), Sales Year to Date (text), Sales Last Year (text), Cost Year to Date (text), Cost Last Year (text), rowguid (text), modified date (text) | SalesPerson : Business Entity ID (number), Territory ID (number), Sales Quota (text), Bonus (text), Commission percentage (text), sales year to date (text), Sales Last Year (text), rowguid (text), modified date (text) | SalesPersonQuotaHistory : Business Entity ID (number), Quota Date (text), Sales Quota (text), rowguid (text), modified date (text) | SalesTerritoryHistory : Business Entity ID (number), Territory ID (number), Start Date (text), End Date (text), rowguid (text), modified date (text) | ScrapReason : Scrap Reason ID (number), Name (text), modified date (text) | Shift : ShiftID (number), Name (text), Start Time (text), End Time (text), modified date (text) | ShipMethod : Ship Method ID (number), Name (text), Ship Base (text), Ship Rate (text), rowguid (text), modified date (text) | SpecialOffer : Special Offer ID (number), Description (text), Discount precentage (text), Type (text), Category (text), Start Date (text), End Date (text), Min Quality (number), Max Quality (number), rowguid (text), modified date (text) | BusinessEntityAddress : Business Entity ID (number), Address ID (number), Address Type ID (number), rowguid (text), modified date (text) | SalesTaxRate : Sales Tax Rate ID (number), State Province ID (number), Tax Type (number), Tax Rate (text), Name (text), rowguid (text), modified date (text) | Store : Business Entity ID (number), Name (text), Sales Person ID (number), Demographics (text), rowguid (text), modified date (text) | SalesOrderHeaderSalesReason : Sales Order ID (number), Sales Reason ID (number), modified date (text) | TransactionHistoryArchive : Transaction ID (number), Product ID (number), Reference Order ID (number), Reference Order Line ID (number), Transaction Date (text), Transaction Type (text), Quantity (number), Actual Cost (text), modified date (text) | UnitMeasure : Unit Measure Code (text), Name (text), modified date (text) | ProductCostHistory : Product ID (number), Start Date (text), End Date (text), Standard Cost (text), modified date (text) | ProductDocument : Product ID (number), Document Node (text), modified date (text) | ProductInventory : Product ID (number), Location ID (number), Shelf (text), Bin (number), Quantity (number), rowguid (text), modified date (text) | ProductProductPhoto : Product ID (number), Product Photo ID (number), Primary (number), Modified Date (text) | ProductReview : Product Review ID (number), Product ID (number), Reviewer Name (text), Review Date (text), Email Address (text), Rating (number), Comments (text), modified date (text) | ShoppingCartItem : Shopping CartItem ID (number), Shopping Cart ID (text), Quantity (number), Product ID (number), Date Created (text), modified date (text) | SpecialOfferProduct : Special Offer ID (number), Product ID (number), rowguid (text), modified date (text) | SalesOrderDetail : SalesOrderID (number), SalesOrderDetailID (number), CarrierTrackingNumber (text), OrderQty (number), ProductID (number), SpecialOfferID (number), UnitPrice (text), UnitPriceDiscount (text), LineTotal (text), rowguid (text), ModifiedDate (text) | TransactionHistory : Transaction ID (number), Product ID (number), Reference Order ID (number), Reference Order Line ID (number), Transaction Date (text), Transaction Type (text), Quantity (number), Actual Cost (text), modified date (text) | Vendor : BusinessEntityID (number), AccountNumber (text), Name (text), CreditRating (number), Preferred Vendor Status (number), Active Flag (number), PurchasingWebServiceURL (text), modified date (text) | ProductVendor : Product ID (number), Business Entity ID (number), Average Lead Time (number), Standard Price (text), Last Receipt Cost (text), Last Receipt Date (text), Min Order Quantity (number), Max Order Quantity (number), On Order Quantity (number), Unit Measure Code (text), modified date (text) | PurchaseOrderHeader : Purchase Order ID (number), Revision Number (number), Status (number), Employee ID (number), Vendor ID (number), Ship Method ID (number), Order Date (text), Ship Date (text), SubTotal (text), Tax Amount (text), Freight (text), Total Due (text), modified date (text) | PurchaseOrderDetail : Purchase Order ID (number), Purchase Orde rDetail ID (number), Due Date (text), Order Quantity (number), Product ID (number), Unit Price (text), Line Total (text), ReceivedQty (text), RejectedQty (text), StockedQty (text), ModifiedDate (text) | WorkOrder : Work Order ID (number), Product ID (number), Order Quantity (number), Stocked Quantity (number), Scrapped Quantity (number), Start Date (text), End Date (text), Due Date (text), Scrap Reason ID (number), modified date (text) | WorkOrderRouting : WorkOrderID (number), ProductID (number), Operation Sequence (number), Location ID (number), Scheduled Start Date (text), Scheduled End Date (text), Actual Start Date (text), ActualEndDate (text), Actual Resource Hours (text), Planned Cost (text), ActualCost (text), modified date (text) | Customer : Customer ID (number), Person ID (number), Store ID (number), Territory ID (number), Account Number (text), rowguid (text), modified date (text) | ProductListPriceHistory : Product ID (number), Start Date (text), End Date (text), ListPrice (text), modified date (text) | Address : address id (number), address line 1 (text), address line 2 (text), City (text), state province id (number), postal code (text), spatial location (text), rowguid (text), modified date (text) | AddressType : address type id (number), Name (text), rowguid (text), modified date (text) | BillOfMaterials : bill of materials id (number), product assembly id (number), component ID (number), start date (text), end date (text), unit measure code (text), bill of materials level (number), per assembly quantity (text), modified date (text) | BusinessEntity : business entity id (number), rowguid (text), modified date (text) | ContactType : Contact Type ID (number), Name (text), modified date (text) | CurrencyRate : Currency Rate ID (number), Currency Rate Date (text), From Currency Code (text), ToCurrencyCode (text), Average Rate (text), End Of Day Rate (text), modified date (text) | Department : Department ID (number), Name (text), Group Name (text), modified date (text) | EmployeeDepartmentHistory : Business Entity ID (number), DepartmentI D (number), Shift ID (number), Start Date (text), End Date (text), modified date (text) | EmployeePayHistory : Business Entity ID (number), Rate Change Date (text), Rate (text), Pay Frequency (number), modified date (text) | JobCandidate : Job Candidate ID (number), Business Entity ID (number), Resume (text), modified date (text) | Location : Location ID (number), Name (text), Cost Rate (text), Availability (text), modified date (text) | PhoneNumberType : Phone Number Type ID (number), Phone Number (text), modified date (text) | Product : Product ID (number), Name (text), Product Number (text), Make Flag (number), Finished Goods Flag (number), Color (text), Safety Stock Level (number), Reorder Point (number), Standard Cost (text), List Price (text), Size (text), Size Unit Measure Code (text), Weight Unit Measure Code (text), Weight (text), Days To Manufacture (number), Product Line (text), Class (text), Style (text), Product Subcategory ID (number), Product Model ID (number), Sell Start Date (text), Sell End Date (text), Discontinued Date (text), rowguid (text), modified date (text) | Document : Document Node (text), Document Level (number), Title (text), Owner (number), Folder Flag (number), File Name (text), File Extension (text), Revision (text), Change Number (number), Status (number), Document Summary (text), Document (text), rowguid (text), modified date (text) | StateProvince : State Province ID (number), State Province Code (text), Country Region Code (text), Is Only State Province Flag (number), Name (text), Territory ID (number), rowguid (text), modified date (text) | CreditCard : Credit Card ID (number), Card Type (text), Card Number (text), Expiration Month (number), Expiration Year (number), modified date (text) | SalesOrderHeader : Sales Order ID (number), RevisionNumber (number), Order Date (text), DueDate (text), Ship Date (text), Status (number), OnlineOrderFlag (number), SalesOrderNumber (text), PurchaseOrderNumber (text), AccountNumber (text), CustomerID (number), SalesPersonID (number), TerritoryID (number), BillToAddressID (number), ShipToAddressID (number), Ship Method ID (number), CreditCardID (number), CreditCardApprovalCode (text), CurrencyRateID (number), SubTotal (text), Tax Amount (text), Freight (text), Total Due (text), Comment (text), rowguid (text), modified date (text)","CREATE TABLE CountryRegion (
    Country Region Code TEXT,
    Name TEXT,
    modified date TEXT
);

CREATE TABLE Culture (
    Culture ID TEXT,
    Name TEXT,
    modified date TEXT
);

CREATE TABLE Currency (
    Currency Code TEXT,
    Name TEXT,
    modified date TEXT
);

CREATE TABLE CountryRegionCurrency (
    Country Region Code TEXT,
    Currency Code TEXT,
    modified date TEXT
);

CREATE TABLE Person (
    Business Entity ID INT,
    Person Type TEXT,
    Name Style INT,
    Title TEXT,
    First Name TEXT,
    Middle Name TEXT,
    Last Name TEXT,
    Suffix TEXT,
    Email Promotion INT,
    Additional Contact Info TEXT,
    Demographics TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE BusinessEntityContact (
    Business Entity ID INT,
    Person ID INT,
    Contact Type ID INT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE EmailAddress (
    Business Entity ID INT,
    Email Address ID INT,
    Email Address TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE Employee (
    Business Entity ID INT,
    National ID Number TEXT,
    Login ID TEXT,
    Organization Node TEXT,
    Organization Level INT,
    Job Title TEXT,
    Birth Date TEXT,
    Marital Status TEXT,
    Gender TEXT,
    Hire Date TEXT,
    Salaried Flag INT,
    Vacation Hours INT,
    Sick Leave Hours INT,
    Current Flag INT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE Password (
    Business Entity ID INT,
    Password Hash TEXT,
    Password Salt TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE PersonCreditCard (
    Business Entity ID INT,
    Credit Card ID INT,
    modified date TEXT
);

CREATE TABLE ProductCategory (
    Product Category ID INT,
    Name TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE ProductDescription (
    Product Description ID INT,
    Description TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE ProductModel (
    Product Model ID INT,
    Name TEXT,
    Catalog Description TEXT,
    Instructions TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE ProductModelProductDescriptionCulture (
    Product Model ID INT,
    Product Description ID INT,
    Culture ID TEXT,
    modified date TEXT
);

CREATE TABLE ProductPhoto (
    Product Photo ID INT,
    Thumb Nail Photo TEXT,
    Thumbnail Photo File Name TEXT,
    large photo TEXT,
    Large Photo File Name TEXT,
    Modified Date TEXT
);

CREATE TABLE ProductSubcategory (
    Product Subcategory ID INT,
    Product Category ID INT,
    Name TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE SalesReason (
    SalesReasonID INT,
    Name TEXT,
    ReasonType TEXT,
    modified date TEXT
);

CREATE TABLE SalesTerritory (
    TerritoryID INT,
    Name TEXT,
    Country Region Code TEXT,
    Group TEXT,
    Sales Year to Date TEXT,
    Sales Last Year TEXT,
    Cost Year to Date TEXT,
    Cost Last Year TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE SalesPerson (
    Business Entity ID INT,
    Territory ID INT,
    Sales Quota TEXT,
    Bonus TEXT,
    Commission percentage TEXT,
    sales year to date TEXT,
    Sales Last Year TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE SalesPersonQuotaHistory (
    Business Entity ID INT,
    Quota Date TEXT,
    Sales Quota TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE SalesTerritoryHistory (
    Business Entity ID INT,
    Territory ID INT,
    Start Date TEXT,
    End Date TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE ScrapReason (
    Scrap Reason ID INT,
    Name TEXT,
    modified date TEXT
);

CREATE TABLE Shift (
    ShiftID INT,
    Name TEXT,
    Start Time TEXT,
    End Time TEXT,
    modified date TEXT
);

CREATE TABLE ShipMethod (
    Ship Method ID INT,
    Name TEXT,
    Ship Base TEXT,
    Ship Rate TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE SpecialOffer (
    Special Offer ID INT,
    Description TEXT,
    Discount precentage TEXT,
    Type TEXT,
    Category TEXT,
    Start Date TEXT,
    End Date TEXT,
    Min Quality INT,
    Max Quality INT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE BusinessEntityAddress (
    Business Entity ID INT,
    Address ID INT,
    Address Type ID INT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE SalesTaxRate (
    Sales Tax Rate ID INT,
    State Province ID INT,
    Tax Type INT,
    Tax Rate TEXT,
    Name TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE Store (
    Business Entity ID INT,
    Name TEXT,
    Sales Person ID INT,
    Demographics TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE SalesOrderHeaderSalesReason (
    Sales Order ID INT,
    Sales Reason ID INT,
    modified date TEXT
);

CREATE TABLE TransactionHistoryArchive (
    Transaction ID INT,
    Product ID INT,
    Reference Order ID INT,
    Reference Order Line ID INT,
    Transaction Date TEXT,
    Transaction Type TEXT,
    Quantity INT,
    Actual Cost TEXT,
    modified date TEXT
);

CREATE TABLE UnitMeasure (
    Unit Measure Code TEXT,
    Name TEXT,
    modified date TEXT
);

CREATE TABLE ProductCostHistory (
    Product ID INT,
    Start Date TEXT,
    End Date TEXT,
    Standard Cost TEXT,
    modified date TEXT
);

CREATE TABLE ProductDocument (
    Product ID INT,
    Document Node TEXT,
    modified date TEXT
);

CREATE TABLE ProductInventory (
    Product ID INT,
    Location ID INT,
    Shelf TEXT,
    Bin INT,
    Quantity INT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE ProductProductPhoto (
    Product ID INT,
    Product Photo ID INT,
    Primary INT,
    Modified Date TEXT
);

CREATE TABLE ProductReview (
    Product Review ID INT,
    Product ID INT,
    Reviewer Name TEXT,
    Review Date TEXT,
    Email Address TEXT,
    Rating INT,
    Comments TEXT,
    modified date TEXT
);

CREATE TABLE ShoppingCartItem (
    Shopping CartItem ID INT,
    Shopping Cart ID TEXT,
    Quantity INT,
    Product ID INT,
    Date Created TEXT,
    modified date TEXT
);

CREATE TABLE SpecialOfferProduct (
    Special Offer ID INT,
    Product ID INT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE SalesOrderDetail (
    SalesOrderID INT,
    SalesOrderDetailID INT,
    CarrierTrackingNumber TEXT,
    OrderQty INT,
    ProductID INT,
    SpecialOfferID INT,
    UnitPrice TEXT,
    UnitPriceDiscount TEXT,
    LineTotal TEXT,
    rowguid TEXT,
    ModifiedDate TEXT
);

CREATE TABLE TransactionHistory (
    Transaction ID INT,
    Product ID INT,
    Reference Order ID INT,
    Reference Order Line ID INT,
    Transaction Date TEXT,
    Transaction Type TEXT,
    Quantity INT,
    Actual Cost TEXT,
    modified date TEXT
);

CREATE TABLE Vendor (
    BusinessEntityID INT,
    AccountNumber TEXT,
    Name TEXT,
    CreditRating INT,
    Preferred Vendor Status INT,
    Active Flag INT,
    PurchasingWebServiceURL TEXT,
    modified date TEXT
);

CREATE TABLE ProductVendor (
    Product ID INT,
    Business Entity ID INT,
    Average Lead Time INT,
    Standard Price TEXT,
    Last Receipt Cost TEXT,
    Last Receipt Date TEXT,
    Min Order Quantity INT,
    Max Order Quantity INT,
    On Order Quantity INT,
    Unit Measure Code TEXT,
    modified date TEXT
);

CREATE TABLE PurchaseOrderHeader (
    Purchase Order ID INT,
    Revision Number INT,
    Status INT,
    Employee ID INT,
    Vendor ID INT,
    Ship Method ID INT,
    Order Date TEXT,
    Ship Date TEXT,
    SubTotal TEXT,
    Tax Amount TEXT,
    Freight TEXT,
    Total Due TEXT,
    modified date TEXT
);

CREATE TABLE PurchaseOrderDetail (
    Purchase Order ID INT,
    Purchase Orde rDetail ID INT,
    Due Date TEXT,
    Order Quantity INT,
    Product ID INT,
    Unit Price TEXT,
    Line Total TEXT,
    ReceivedQty TEXT,
    RejectedQty TEXT,
    StockedQty TEXT,
    ModifiedDate TEXT
);

CREATE TABLE WorkOrder (
    Work Order ID INT,
    Product ID INT,
    Order Quantity INT,
    Stocked Quantity INT,
    Scrapped Quantity INT,
    Start Date TEXT,
    End Date TEXT,
    Due Date TEXT,
    Scrap Reason ID INT,
    modified date TEXT
);

CREATE TABLE WorkOrderRouting (
    WorkOrderID INT,
    ProductID INT,
    Operation Sequence INT,
    Location ID INT,
    Scheduled Start Date TEXT,
    Scheduled End Date TEXT,
    Actual Start Date TEXT,
    ActualEndDate TEXT,
    Actual Resource Hours TEXT,
    Planned Cost TEXT,
    ActualCost TEXT,
    modified date TEXT
);

CREATE TABLE Customer (
    Customer ID INT,
    Person ID INT,
    Store ID INT,
    Territory ID INT,
    Account Number TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE ProductListPriceHistory (
    Product ID INT,
    Start Date TEXT,
    End Date TEXT,
    ListPrice TEXT,
    modified date TEXT
);

CREATE TABLE Address (
    address id INT,
    address line 1 TEXT,
    address line 2 TEXT,
    City TEXT,
    state province id INT,
    postal code TEXT,
    spatial location TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE AddressType (
    address type id INT,
    Name TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE BillOfMaterials (
    bill of materials id INT,
    product assembly id INT,
    component ID INT,
    start date TEXT,
    end date TEXT,
    unit measure code TEXT,
    bill of materials level INT,
    per assembly quantity TEXT,
    modified date TEXT
);

CREATE TABLE BusinessEntity (
    business entity id INT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE ContactType (
    Contact Type ID INT,
    Name TEXT,
    modified date TEXT
);

CREATE TABLE CurrencyRate (
    Currency Rate ID INT,
    Currency Rate Date TEXT,
    From Currency Code TEXT,
    ToCurrencyCode TEXT,
    Average Rate TEXT,
    End Of Day Rate TEXT,
    modified date TEXT
);

CREATE TABLE Department (
    Department ID INT,
    Name TEXT,
    Group Name TEXT,
    modified date TEXT
);

CREATE TABLE EmployeeDepartmentHistory (
    Business Entity ID INT,
    DepartmentI D INT,
    Shift ID INT,
    Start Date TEXT,
    End Date TEXT,
    modified date TEXT
);

CREATE TABLE EmployeePayHistory (
    Business Entity ID INT,
    Rate Change Date TEXT,
    Rate TEXT,
    Pay Frequency INT,
    modified date TEXT
);

CREATE TABLE JobCandidate (
    Job Candidate ID INT,
    Business Entity ID INT,
    Resume TEXT,
    modified date TEXT
);

CREATE TABLE Location (
    Location ID INT,
    Name TEXT,
    Cost Rate TEXT,
    Availability TEXT,
    modified date TEXT
);

CREATE TABLE PhoneNumberType (
    Phone Number Type ID INT,
    Phone Number TEXT,
    modified date TEXT
);

CREATE TABLE Product (
    Product ID INT,
    Name TEXT,
    Product Number TEXT,
    Make Flag INT,
    Finished Goods Flag INT,
    Color TEXT,
    Safety Stock Level INT,
    Reorder Point INT,
    Standard Cost TEXT,
    List Price TEXT,
    Size TEXT,
    Size Unit Measure Code TEXT,
    Weight Unit Measure Code TEXT,
    Weight TEXT,
    Days To Manufacture INT,
    Product Line TEXT,
    Class TEXT,
    Style TEXT,
    Product Subcategory ID INT,
    Product Model ID INT,
    Sell Start Date TEXT,
    Sell End Date TEXT,
    Discontinued Date TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE Document (
    Document Node TEXT,
    Document Level INT,
    Title TEXT,
    Owner INT,
    Folder Flag INT,
    File Name TEXT,
    File Extension TEXT,
    Revision TEXT,
    Change Number INT,
    Status INT,
    Document Summary TEXT,
    Document TEXT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE StateProvince (
    State Province ID INT,
    State Province Code TEXT,
    Country Region Code TEXT,
    Is Only State Province Flag INT,
    Name TEXT,
    Territory ID INT,
    rowguid TEXT,
    modified date TEXT
);

CREATE TABLE CreditCard (
    Credit Card ID INT,
    Card Type TEXT,
    Card Number TEXT,
    Expiration Month INT,
    Expiration Year INT,
    modified date TEXT
);

CREATE TABLE SalesOrderHeader (
    Sales Order ID INT,
    RevisionNumber INT,
    Order Date TEXT,
    DueDate TEXT,
    Ship Date TEXT,
    Status INT,
    OnlineOrderFlag INT,
    SalesOrderNumber TEXT,
    PurchaseOrderNumber TEXT,
    AccountNumber TEXT,
    CustomerID INT,
    SalesPersonID INT,
    TerritoryID INT,
    BillToAddressID INT,
    ShipToAddressID INT,
    Ship Method ID INT,
    CreditCardID INT,
    CreditCardApprovalCode TEXT,
    CurrencyRateID INT,
    SubTotal TEXT,
    Tax Amount TEXT,
    Freight TEXT,
    Total Due TEXT,
    Comment TEXT,
    rowguid TEXT,
    modified date TEXT
);"
food_inspection_2,"employee : employee id (number), first name (text), last name (text), address (text), city (text), state (text), zip (number), phone (text), title (text), salary (number), supervisor (number) | establishment : license number (number), doing business as name (text), as know as name (text), facility type (text), risk level (number), address (text), city (text), state (text), zip (number), latitude (text), longitude (text), ward (number) | inspection : inspection id (number), inspection date (text), inspection type (text), results (text), employee id (number), license number (number), followup to (number) | inspection_point : point id (number), Description (text), category (text), code (text), fine (number), point_level (text) | violation : inspection id (number), point id (number), fine (number), inspector_comment (text)","CREATE TABLE employee (
    employee id INT,
    first name TEXT,
    last name TEXT,
    address TEXT,
    city TEXT,
    state TEXT,
    zip INT,
    phone TEXT,
    title TEXT,
    salary INT,
    supervisor INT
);

CREATE TABLE establishment (
    license number INT,
    doing business as name TEXT,
    as know as name TEXT,
    facility type TEXT,
    risk level INT,
    address TEXT,
    city TEXT,
    state TEXT,
    zip INT,
    latitude TEXT,
    longitude TEXT,
    ward INT
);

CREATE TABLE inspection (
    inspection id INT,
    inspection date TEXT,
    inspection type TEXT,
    results TEXT,
    employee id INT,
    license number INT,
    followup to INT
);

CREATE TABLE inspection_point (
    point id INT,
    Description TEXT,
    category TEXT,
    code TEXT,
    fine INT,
    point_level TEXT
);

CREATE TABLE violation (
    inspection id INT,
    point id INT,
    fine INT,
    inspector_comment TEXT
);"
citeseer,"cites : cited_paper_id (text), citing_paper_id (text) | paper : paper id (text), class label (text) | content : paper id (text), word cited id (text)","CREATE TABLE cites (
    cited_paper_id TEXT,
    citing_paper_id TEXT
);

CREATE TABLE paper (
    paper id TEXT,
    class label TEXT
);

CREATE TABLE content (
    paper id TEXT,
    word cited id TEXT
);"
bike_share_1,"station : id (number), name (text), latitude (text), longitude (text), dock count (number), city (text), installation date (text) | status : station id (number), bikes_available (number), docks_available (number), time (text) | trip : id (number), duration (number), start date (text), start station name (text), start station id (number), end date (text), end station name (text), end station id (number), bike id (number), subscription type (text), zip code (number) | weather : date (text), max temperature in Fahrenheit degree (number), mean temperature in Fahrenheit degree (number), min temperature in Fahrenheit degree (number), max dew point in Fahrenheit degree (number), mean dew point in Fahrenheit degree (number), min dew point in Fahrenheit degree (number), max humidity (number), mean humidity (number), min humidity (number), max sea level pressure in inches (text), mean sea level pressure in inches (text), min sea level pressure in inches (text), max visibility in miles (number), mean visibility in miles (number), min visibility in miles (number), max wind Speed in mph (number), mean wind Speed in mph (number), max gust Speed in mph (number), precipitation in inches (text), cloud cover (number), events (text), wind direction degrees (number), zip code (text)","CREATE TABLE station (
    id INT,
    name TEXT,
    latitude TEXT,
    longitude TEXT,
    dock count INT,
    city TEXT,
    installation date TEXT
);

CREATE TABLE status (
    station id INT,
    bikes_available INT,
    docks_available INT,
    time TEXT
);

CREATE TABLE trip (
    id INT,
    duration INT,
    start date TEXT,
    start station name TEXT,
    start station id INT,
    end date TEXT,
    end station name TEXT,
    end station id INT,
    bike id INT,
    subscription type TEXT,
    zip code INT
);

CREATE TABLE weather (
    date TEXT,
    max temperature in Fahrenheit degree INT,
    mean temperature in Fahrenheit degree INT,
    min temperature in Fahrenheit degree INT,
    max dew point in Fahrenheit degree INT,
    mean dew point in Fahrenheit degree INT,
    min dew point in Fahrenheit degree INT,
    max humidity INT,
    mean humidity INT,
    min humidity INT,
    max sea level pressure in inches TEXT,
    mean sea level pressure in inches TEXT,
    min sea level pressure in inches TEXT,
    max visibility in miles INT,
    mean visibility in miles INT,
    min visibility in miles INT,
    max wind Speed in mph INT,
    mean wind Speed in mph INT,
    max gust Speed in mph INT,
    precipitation in inches TEXT,
    cloud cover INT,
    events TEXT,
    wind direction degrees INT,
    zip code TEXT
);"
law_episode,"Episode : episode id (text), series (text), season (number), episode (number), number in series (number), title (text), summary (text), air date (text), episode image (text), rating (text), votes (number) | Keyword : episode id (text), keyword (text) | Person : person id (text), name (text), birth date (text), birth name (text), birth place (text), birth region (text), birth country (text), height meters (text), nickname (text) | Award : award id (number), organization (text), year (number), award category (text), award (text), series (text), episode id (text), person_id (text), role (text), result (text) | Credit : episode id (text), person id (text), category (text), role (text), credited (text) | Vote : episode id (text), stars (number), votes (number), percent (text)","CREATE TABLE Episode (
    episode id TEXT,
    series TEXT,
    season INT,
    episode INT,
    number in series INT,
    title TEXT,
    summary TEXT,
    air date TEXT,
    episode image TEXT,
    rating TEXT,
    votes INT
);

CREATE TABLE Keyword (
    episode id TEXT,
    keyword TEXT
);

CREATE TABLE Person (
    person id TEXT,
    name TEXT,
    birth date TEXT,
    birth name TEXT,
    birth place TEXT,
    birth region TEXT,
    birth country TEXT,
    height meters TEXT,
    nickname TEXT
);

CREATE TABLE Award (
    award id INT,
    organization TEXT,
    year INT,
    award category TEXT,
    award TEXT,
    series TEXT,
    episode id TEXT,
    person_id TEXT,
    role TEXT,
    result TEXT
);

CREATE TABLE Credit (
    episode id TEXT,
    person id TEXT,
    category TEXT,
    role TEXT,
    credited TEXT
);

CREATE TABLE Vote (
    episode id TEXT,
    stars INT,
    votes INT,
    percent TEXT
);"
cs_semester,"course : course id (number), name (text), credit (number), difficulty (number) | prof : professor id (number), gender (text), first name (text), last name (text), email (text), popularity (number), teaching ability (number), graduate from (text) | RA : student id (number), capability (number), professor id (number), salary (text) | registration : course id (number), student id (number), grade (text), satisfying degree (number) | student : student id (number), first name (text), last name (text), phone number (text), email (text), intelligence (number), graduate point average (text), type (text)","CREATE TABLE course (
    course id INT,
    name TEXT,
    credit INT,
    difficulty INT
);

CREATE TABLE prof (
    professor id INT,
    gender TEXT,
    first name TEXT,
    last name TEXT,
    email TEXT,
    popularity INT,
    teaching ability INT,
    graduate from TEXT
);

CREATE TABLE RA (
    student id INT,
    capability INT,
    professor id INT,
    salary TEXT
);

CREATE TABLE registration (
    course id INT,
    student id INT,
    grade TEXT,
    satisfying degree INT
);

CREATE TABLE student (
    student id INT,
    first name TEXT,
    last name TEXT,
    phone number TEXT,
    email TEXT,
    intelligence INT,
    graduate point average TEXT,
    type TEXT
);"
legislator,"current : ballotpedia id (text), bioguide id (text), birthday bio (text), cspan id (text), fec id (text), first name (text), gender bio (text), google entity id (text), govtrack id (number), house history id (text), interuniversity consortium for political and social research id (text), last name (text), legislator id (text), maplight id (text), middle name (text), nickname (text), official full name (text), opensecrets id (text), religion bio (text), suffix name (text), thomas id (number), votesmart id (text), wikidata id (text), wikipedia id (text) | current-terms : address (text), bioguide id (text), caucus (text), chamber (text), class (text), contact_form (text), district (text), end (text), fax (text), last (text), name (text), office (text), party (text), party affiliations (text), phone (text), relation (text), Really Simple Syndication URL (text), start (text), state (text), state_rank (text), title (text), type (text), url (text) | historical : ballotpedia id (text), bioguide id (text), bioguide previous id (text), birthday bio (text), cspan id (text), fec id (text), first name (text), gender bio (text), google entity id (text), govtrack id (number), house history alternate id (text), house history id (text), interuniversity consortium for political and social research id (text), last name (text), legislator id (text), maplight id (text), middle name (text), nickname (text), official full name (text), opensecrets id (text), religion bio (text), suffix name (text), thomas id (text), votesmart id (text), wikidata id (text), wikipedia id (text) | historical-terms : address (text), bioguide id (text), chamber (text), class (text), contact_form (text), district (text), end (text), fax (text), last (text), middle (text), name (text), office (text), party (text), party affiliations (text), phone (text), relation (text), Really Simple Syndication URL (text), start (text), state (text), state_rank (text), title (text), type (text), url (text) | social-media : bioguide (text), facebook (text), facebook_id (text), govtrack (text), instagram (text), instagram_id (text), thomas (number), twitter (text), twitter_id (text), youtube (text), youtube_id (text)","CREATE TABLE current (
    ballotpedia id TEXT,
    bioguide id TEXT,
    birthday bio TEXT,
    cspan id TEXT,
    fec id TEXT,
    first name TEXT,
    gender bio TEXT,
    google entity id TEXT,
    govtrack id INT,
    house history id TEXT,
    interuniversity consortium for political and social research id TEXT,
    last name TEXT,
    legislator id TEXT,
    maplight id TEXT,
    middle name TEXT,
    nickname TEXT,
    official full name TEXT,
    opensecrets id TEXT,
    religion bio TEXT,
    suffix name TEXT,
    thomas id INT,
    votesmart id TEXT,
    wikidata id TEXT,
    wikipedia id TEXT
);

CREATE TABLE current-terms (
    address TEXT,
    bioguide id TEXT,
    caucus TEXT,
    chamber TEXT,
    class TEXT,
    contact_form TEXT,
    district TEXT,
    end TEXT,
    fax TEXT,
    last TEXT,
    name TEXT,
    office TEXT,
    party TEXT,
    party affiliations TEXT,
    phone TEXT,
    relation TEXT,
    Really Simple Syndication URL TEXT,
    start TEXT,
    state TEXT,
    state_rank TEXT,
    title TEXT,
    type TEXT,
    url TEXT
);

CREATE TABLE historical (
    ballotpedia id TEXT,
    bioguide id TEXT,
    bioguide previous id TEXT,
    birthday bio TEXT,
    cspan id TEXT,
    fec id TEXT,
    first name TEXT,
    gender bio TEXT,
    google entity id TEXT,
    govtrack id INT,
    house history alternate id TEXT,
    house history id TEXT,
    interuniversity consortium for political and social research id TEXT,
    last name TEXT,
    legislator id TEXT,
    maplight id TEXT,
    middle name TEXT,
    nickname TEXT,
    official full name TEXT,
    opensecrets id TEXT,
    religion bio TEXT,
    suffix name TEXT,
    thomas id TEXT,
    votesmart id TEXT,
    wikidata id TEXT,
    wikipedia id TEXT
);

CREATE TABLE historical-terms (
    address TEXT,
    bioguide id TEXT,
    chamber TEXT,
    class TEXT,
    contact_form TEXT,
    district TEXT,
    end TEXT,
    fax TEXT,
    last TEXT,
    middle TEXT,
    name TEXT,
    office TEXT,
    party TEXT,
    party affiliations TEXT,
    phone TEXT,
    relation TEXT,
    Really Simple Syndication URL TEXT,
    start TEXT,
    state TEXT,
    state_rank TEXT,
    title TEXT,
    type TEXT,
    url TEXT
);

CREATE TABLE social-media (
    bioguide TEXT,
    facebook TEXT,
    facebook_id TEXT,
    govtrack TEXT,
    instagram TEXT,
    instagram_id TEXT,
    thomas INT,
    twitter TEXT,
    twitter_id TEXT,
    youtube TEXT,
    youtube_id TEXT
);"
world,"City : ID (number), Name (text), Country Code (text), District (text), Population (number) | Country : Code (text), Name (text), Continent (text), Region (text), Surface Area (text), Independence Year (number), Population (number), Life Expectancy (text), Gross National Product (text), Gross National Product Old (text), Local Name (text), Government Form (text), Head Of State (text), Capital (number), Code2 (text) | CountryLanguage : Country Code (text), Language (text), Is Official (text), Percentage (text)","CREATE TABLE City (
    ID INT,
    Name TEXT,
    Country Code TEXT,
    District TEXT,
    Population INT
);

CREATE TABLE Country (
    Code TEXT,
    Name TEXT,
    Continent TEXT,
    Region TEXT,
    Surface Area TEXT,
    Independence Year INT,
    Population INT,
    Life Expectancy TEXT,
    Gross National Product TEXT,
    Gross National Product Old TEXT,
    Local Name TEXT,
    Government Form TEXT,
    Head Of State TEXT,
    Capital INT,
    Code2 TEXT
);

CREATE TABLE CountryLanguage (
    Country Code TEXT,
    Language TEXT,
    Is Official TEXT,
    Percentage TEXT
);"
cookbook,"Ingredient : ingredient id (number), category (text), name (text), plural (text) | Recipe : recipe id (number), title (text), subtitle (text), servings (number), yield unit (text), preparation minute (number), cooked minute (number), stand minute (number), source (text), introduction (text), directions (text) | Nutrition : recipe id (number), protein (text), carbo (text), alcohol (text), total fat (text), saturated fat (text), cholesterol (text), sodium (text), iron (text), vitamin c (text), vitamin a (text), fiber (text), percentage calculation carbo (text), percentage calculation fat (text), percentage calculation protein (text), calories (text) | Quantity : quantity id (number), recipe id (number), ingredient id (number), maximum quantity (text), minimum quantity (text), unit (text), preparation (text), optional (text)","CREATE TABLE Ingredient (
    ingredient id INT,
    category TEXT,
    name TEXT,
    plural TEXT
);

CREATE TABLE Recipe (
    recipe id INT,
    title TEXT,
    subtitle TEXT,
    servings INT,
    yield unit TEXT,
    preparation minute INT,
    cooked minute INT,
    stand minute INT,
    source TEXT,
    introduction TEXT,
    directions TEXT
);

CREATE TABLE Nutrition (
    recipe id INT,
    protein TEXT,
    carbo TEXT,
    alcohol TEXT,
    total fat TEXT,
    saturated fat TEXT,
    cholesterol TEXT,
    sodium TEXT,
    iron TEXT,
    vitamin c TEXT,
    vitamin a TEXT,
    fiber TEXT,
    percentage calculation carbo TEXT,
    percentage calculation fat TEXT,
    percentage calculation protein TEXT,
    calories TEXT
);

CREATE TABLE Quantity (
    quantity id INT,
    recipe id INT,
    ingredient id INT,
    maximum quantity TEXT,
    minimum quantity TEXT,
    unit TEXT,
    preparation TEXT,
    optional TEXT
);"
university,"country : id (number), country name (text) | ranking_system : id (number), system name (text) | ranking_criteria : id (number), ranking system id (number), criteria name (text) | university : id (number), country id (number), university name (text) | university_ranking_year : university id (number), ranking criteria id (number), year (number), score (number) | university_year : university id (number), year (number), number of students (number), student staff ratio (text), pct internation student (number), pct female students (number)","CREATE TABLE country (
    id INT,
    country name TEXT
);

CREATE TABLE ranking_system (
    id INT,
    system name TEXT
);

CREATE TABLE ranking_criteria (
    id INT,
    ranking system id INT,
    criteria name TEXT
);

CREATE TABLE university (
    id INT,
    country id INT,
    university name TEXT
);

CREATE TABLE university_ranking_year (
    university id INT,
    ranking criteria id INT,
    year INT,
    score INT
);

CREATE TABLE university_year (
    university id INT,
    year INT,
    number of students INT,
    student staff ratio TEXT,
    pct internation student INT,
    pct female students INT
);"
books,"address_status : status id (number), address status (text) | author : author id (number), author name (text) | book_language : language id (number), language code (text), language name (text) | country : country id (number), country name (text) | address : address id (number), street number (text), street name (text), city (text), country id (number) | customer : customer id (number), first name (text), last name (text), email (text) | customer_address : customer id (number), address id (number), status id (number) | order_status : status id (number), status value (text) | publisher : publisher id (number), publisher name (text) | book : book id (number), title (text), isbn13 (text), language id (number), number pages (number), publication date (text), publisher_id (number) | book_author : book id (number), author id (number) | shipping_method : method id (number), method name (text), cost (text) | cust_order : order id (number), order date (text), customer id (number), shipping method id (number), destination address id (number) | order_history : history id (number), order_id (number), status id (number), status date (text) | order_line : line id (number), order id (number), book id (number), price (text)","CREATE TABLE address_status (
    status id INT,
    address status TEXT
);

CREATE TABLE author (
    author id INT,
    author name TEXT
);

CREATE TABLE book_language (
    language id INT,
    language code TEXT,
    language name TEXT
);

CREATE TABLE country (
    country id INT,
    country name TEXT
);

CREATE TABLE address (
    address id INT,
    street number TEXT,
    street name TEXT,
    city TEXT,
    country id INT
);

CREATE TABLE customer (
    customer id INT,
    first name TEXT,
    last name TEXT,
    email TEXT
);

CREATE TABLE customer_address (
    customer id INT,
    address id INT,
    status id INT
);

CREATE TABLE order_status (
    status id INT,
    status value TEXT
);

CREATE TABLE publisher (
    publisher id INT,
    publisher name TEXT
);

CREATE TABLE book (
    book id INT,
    title TEXT,
    isbn13 TEXT,
    language id INT,
    number pages INT,
    publication date TEXT,
    publisher_id INT
);

CREATE TABLE book_author (
    book id INT,
    author id INT
);

CREATE TABLE shipping_method (
    method id INT,
    method name TEXT,
    cost TEXT
);

CREATE TABLE cust_order (
    order id INT,
    order date TEXT,
    customer id INT,
    shipping method id INT,
    destination address id INT
);

CREATE TABLE order_history (
    history id INT,
    order_id INT,
    status id INT,
    status date TEXT
);

CREATE TABLE order_line (
    line id INT,
    order id INT,
    book id INT,
    price TEXT
);"
shipping,"city : city id (number), city name (text), state (text), population (number), area (text) | customer : customer id (number), customer name (text), annual revenue (number), customer type (text), address (text), city (text), state (text), zip (text), phone (text) | driver : driver id (number), first name (text), last name (text), address (text), city (text), state (text), zip code (number), phone (text) | truck : truck id (number), make (text), model year (number) | shipment : ship id (number), customer id (number), weight (text), truck id (number), driver id (number), city id (number), ship date (text)","CREATE TABLE city (
    city id INT,
    city name TEXT,
    state TEXT,
    population INT,
    area TEXT
);

CREATE TABLE customer (
    customer id INT,
    customer name TEXT,
    annual revenue INT,
    customer type TEXT,
    address TEXT,
    city TEXT,
    state TEXT,
    zip TEXT,
    phone TEXT
);

CREATE TABLE driver (
    driver id INT,
    first name TEXT,
    last name TEXT,
    address TEXT,
    city TEXT,
    state TEXT,
    zip code INT,
    phone TEXT
);

CREATE TABLE truck (
    truck id INT,
    make TEXT,
    model year INT
);

CREATE TABLE shipment (
    ship id INT,
    customer id INT,
    weight TEXT,
    truck id INT,
    driver id INT,
    city id INT,
    ship date TEXT
);"
food_inspection,"businesses : business id (number), name (text), address (text), city (text), postal code (text), latitude (text), longitude (text), phone number (number), tax code (text), business certificate (number), application date (text), owner name (text), owner address (text), owner city (text), owner state (text), owner zip (text) | inspections : business id (number), score (number), date (text), type (text) | violations : business id (number), date (text), violation type id (text), risk category (text), description (text)","CREATE TABLE businesses (
    business id INT,
    name TEXT,
    address TEXT,
    city TEXT,
    postal code TEXT,
    latitude TEXT,
    longitude TEXT,
    phone number INT,
    tax code TEXT,
    business certificate INT,
    application date TEXT,
    owner name TEXT,
    owner address TEXT,
    owner city TEXT,
    owner state TEXT,
    owner zip TEXT
);

CREATE TABLE inspections (
    business id INT,
    score INT,
    date TEXT,
    type TEXT
);

CREATE TABLE violations (
    business id INT,
    date TEXT,
    violation type id TEXT,
    risk category TEXT,
    description TEXT
);"
movie_platform,"lists : user_id (number), list_id (number), list_title (text), list_movie_number (number), list_update_timestamp_utc (text), list_creation_timestamp_utc (text), list_followers (number), list_url (text), list_comments (number), list_description (text), list_cover_image_url (text), list_first_image_url (text), list_second_image_url (text), list_third_image_url (text) | movies : movie_id (number), movie_title (text), movie_release_year (number), movie_url (text), movie_title_language (text), movie_popularity (number), movie_image_url (text), director_id (text), director_name (text), director_url (text) | ratings_users : user_id (number), rating_date_utc (text), user_trialist (number), user_subscriber (number), user_avatar_image_url (text), user_cover_image_url (text), user_eligible_for_trial (number), user_has_payment_method (number) | lists_users : user_id (number), list_id (number), list_update_date_utc (text), list_creation_date_utc (text), user_trialist (number), user_subscriber (number), user_avatar_image_url (text), user_cover_image_url (text), user_eligible_for_trial (text), user_has_payment_method (text) | ratings : movie_id (number), rating_id (number), rating_url (text), rating_score (number), rating_timestamp_utc (text), critic (text), critic_likes (number), critic_comments (number), user_id (number), user_trialist (number), user_subscriber (number), user_eligible_for_trial (number), user_has_payment_method (number)","CREATE TABLE lists (
    user_id INT,
    list_id INT,
    list_title TEXT,
    list_movie_number INT,
    list_update_timestamp_utc TEXT,
    list_creation_timestamp_utc TEXT,
    list_followers INT,
    list_url TEXT,
    list_comments INT,
    list_description TEXT,
    list_cover_image_url TEXT,
    list_first_image_url TEXT,
    list_second_image_url TEXT,
    list_third_image_url TEXT
);

CREATE TABLE movies (
    movie_id INT,
    movie_title TEXT,
    movie_release_year INT,
    movie_url TEXT,
    movie_title_language TEXT,
    movie_popularity INT,
    movie_image_url TEXT,
    director_id TEXT,
    director_name TEXT,
    director_url TEXT
);

CREATE TABLE ratings_users (
    user_id INT,
    rating_date_utc TEXT,
    user_trialist INT,
    user_subscriber INT,
    user_avatar_image_url TEXT,
    user_cover_image_url TEXT,
    user_eligible_for_trial INT,
    user_has_payment_method INT
);

CREATE TABLE lists_users (
    user_id INT,
    list_id INT,
    list_update_date_utc TEXT,
    list_creation_date_utc TEXT,
    user_trialist INT,
    user_subscriber INT,
    user_avatar_image_url TEXT,
    user_cover_image_url TEXT,
    user_eligible_for_trial TEXT,
    user_has_payment_method TEXT
);

CREATE TABLE ratings (
    movie_id INT,
    rating_id INT,
    rating_url TEXT,
    rating_score INT,
    rating_timestamp_utc TEXT,
    critic TEXT,
    critic_likes INT,
    critic_comments INT,
    user_id INT,
    user_trialist INT,
    user_subscriber INT,
    user_eligible_for_trial INT,
    user_has_payment_method INT
);"
shakespeare,"chapters : id (number), Act (number), Scene (number), Description (text), work id (number) | characters : id (number), char name (text), abbreviation (text), Description (text) | paragraphs : id (number), paragraph number (number), Plain Text (text), character id (number), chapter id (number) | works : id (number), Title (text), Long Title (text), character id (number), genre type (text)","CREATE TABLE chapters (
    id INT,
    Act INT,
    Scene INT,
    Description TEXT,
    work id INT
);

CREATE TABLE characters (
    id INT,
    char name TEXT,
    abbreviation TEXT,
    Description TEXT
);

CREATE TABLE paragraphs (
    id INT,
    paragraph number INT,
    Plain Text TEXT,
    character id INT,
    chapter id INT
);

CREATE TABLE works (
    id INT,
    Title TEXT,
    Long Title TEXT,
    character id INT,
    genre type TEXT
);"
book_publishing_company,"authors : author id (text), author last name (text), author first name (text), phone (text), address (text), city (text), state (text), zip (text), contract (text) | jobs : job id (number), job description (text), min level (number), max level (number) | publishers : publisher id (text), publisher name (text), city (text), state (text), country (text) | employee : employee id (text), first name (text), minit (text), last name (text), job id (number), job level (number), publisher id (text), hire_date (text) | pub_info : publication id (text), logo (text), publisher's information (text) | stores : store id (text), store name (text), store address (text), city (text), state (text), zip (text) | discounts : discount type (text), store id (text), low quantity (number), high quantity (number), discount (text) | titles : title id (text), title (text), type (text), publisher id (text), price (text), advance (text), royalty (number), year to date sales (number), notes (text), publication date (text) | roysched : title_id (text), low range (number), high range (number), royalty (number) | sales : store id (text), order number (text), order date (text), quantity (number), payterms (text), title id (text) | titleauthor : author id (text), title id (text), author ordering (number), royaltyper (number)","CREATE TABLE authors (
    author id TEXT,
    author last name TEXT,
    author first name TEXT,
    phone TEXT,
    address TEXT,
    city TEXT,
    state TEXT,
    zip TEXT,
    contract TEXT
);

CREATE TABLE jobs (
    job id INT,
    job description TEXT,
    min level INT,
    max level INT
);

CREATE TABLE publishers (
    publisher id TEXT,
    publisher name TEXT,
    city TEXT,
    state TEXT,
    country TEXT
);

CREATE TABLE employee (
    employee id TEXT,
    first name TEXT,
    minit TEXT,
    last name TEXT,
    job id INT,
    job level INT,
    publisher id TEXT,
    hire_date TEXT
);

CREATE TABLE pub_info (
    publication id TEXT,
    logo TEXT,
    publisher's information TEXT
);

CREATE TABLE stores (
    store id TEXT,
    store name TEXT,
    store address TEXT,
    city TEXT,
    state TEXT,
    zip TEXT
);

CREATE TABLE discounts (
    discount type TEXT,
    store id TEXT,
    low quantity INT,
    high quantity INT,
    discount TEXT
);

CREATE TABLE titles (
    title id TEXT,
    title TEXT,
    type TEXT,
    publisher id TEXT,
    price TEXT,
    advance TEXT,
    royalty INT,
    year to date sales INT,
    notes TEXT,
    publication date TEXT
);

CREATE TABLE roysched (
    title_id TEXT,
    low range INT,
    high range INT,
    royalty INT
);

CREATE TABLE sales (
    store id TEXT,
    order number TEXT,
    order date TEXT,
    quantity INT,
    payterms TEXT,
    title id TEXT
);

CREATE TABLE titleauthor (
    author id TEXT,
    title id TEXT,
    author ordering INT,
    royaltyper INT
);"
car_retails,"offices : office code (text), city (text), phone (text), addressLine1 (text), addressLine2 (text), state (text), country (text), postalCode (text), territory (text) | employees : Employee Number (number), last name (text), first name (text), extension (text), email (text), office code (text), reports to (number), job title (text) | customers : customer number (number), customer name (text), contact last name (text), contact first name (text), phone (text), addressLine1 (text), addressLine2 (text), city (text), state (text), postalCode (text), country (text), sales representative employee number (number), credit limit (text) | orders : order number (number), order date (text), required Date (text), shipped date (text), status (text), comments (text), customer number (number) | payments : customer number (number), check Number (text), payment Date (text), amount (text) | productlines : product line (text), text description (text), html description (text), image (text) | products : product code (text), product name (text), product line (text), product scale (text), product vendor (text), product description (text), quantity in stock (number), buy price (text), Manufacturer Suggested Retail Price (text) | orderdetails : order number (number), product code (text), quantity ordered (number), price for each (text), order Line Number (number)","CREATE TABLE offices (
    office code TEXT,
    city TEXT,
    phone TEXT,
    addressLine1 TEXT,
    addressLine2 TEXT,
    state TEXT,
    country TEXT,
    postalCode TEXT,
    territory TEXT
);

CREATE TABLE employees (
    Employee Number INT,
    last name TEXT,
    first name TEXT,
    extension TEXT,
    email TEXT,
    office code TEXT,
    reports to INT,
    job title TEXT
);

CREATE TABLE customers (
    customer number INT,
    customer name TEXT,
    contact last name TEXT,
    contact first name TEXT,
    phone TEXT,
    addressLine1 TEXT,
    addressLine2 TEXT,
    city TEXT,
    state TEXT,
    postalCode TEXT,
    country TEXT,
    sales representative employee number INT,
    credit limit TEXT
);

CREATE TABLE orders (
    order number INT,
    order date TEXT,
    required Date TEXT,
    shipped date TEXT,
    status TEXT,
    comments TEXT,
    customer number INT
);

CREATE TABLE payments (
    customer number INT,
    check Number TEXT,
    payment Date TEXT,
    amount TEXT
);

CREATE TABLE productlines (
    product line TEXT,
    text description TEXT,
    html description TEXT,
    image TEXT
);

CREATE TABLE products (
    product code TEXT,
    product name TEXT,
    product line TEXT,
    product scale TEXT,
    product vendor TEXT,
    product description TEXT,
    quantity in stock INT,
    buy price TEXT,
    Manufacturer Suggested Retail Price TEXT
);

CREATE TABLE orderdetails (
    order number INT,
    product code TEXT,
    quantity ordered INT,
    price for each TEXT,
    order Line Number INT
);"
mental_health_survey,"Question : question text (text), question id (number) | Survey : Survey ID (number), Description (text) | Answer : Answer Text (text), Survey ID (number), User ID (number), Question ID (number)","CREATE TABLE Question (
    question text TEXT,
    question id INT
);

CREATE TABLE Survey (
    Survey ID INT,
    Description TEXT
);

CREATE TABLE Answer (
    Answer Text TEXT,
    Survey ID INT,
    User ID INT,
    Question ID INT
);"
hockey,"AwardsMisc : name (text), ID (text), award (text), year (number), league ID (text), note (text) | HOF : year (number), hall of fame id (text), name (text), category (text) | Teams : year (number), league ID (text), team ID (text), Franchise ID (text), Conference ID (text), Division ID (text), rank (number), playoff (text), games (number), wins (number), loses (number), ties (number), Overtime losses (text), points (number), Shootout wins (text), Shootout loses (text), Goals for (number), Goals against (number), Full team name (text), Penalty minutes (text), Bench minors (minutes) (text), Power play goals (text), Power play chances (text), Shorthanded goals against (text), Power play goals against (text), Penalty kill chances (text), Shorthanded goals for (text) | Coaches : coach ID (text), year (number), team ID (text), league ID (text), stint (number), notes (text), games (number), wins (number), loses (number), ties (number), post-season games (text), post-season wins (text), post-season loses (text), post-season ties (text) | AwardsCoaches : coach ID (text), award (text), year (number), league ID (text), note (text) | Master : playerID (text), coach ID (text), hofID (text), first name (text), last name (text), name note (text), name given (text), Nickname (text), height (text), weight (text), shoot catch (text), legends ID (text), Internet Hockey Database ID (text), Hockey-Reference.com ID (text), First NHL season (text), Last NHL season (text), First WHA season (text), Last WHA season (text), position (text), birth Year (text), birth Month (text), birth Day (text), birth Country (text), birth State (text), birth city (text), death year (text), death month (text), death day (text), death country (text), death state (text), death city (text) | AwardsPlayers : player id (text), award (text), year (number), league ID (text), note (text), position (text) | CombinedShutouts : year (number), month (number), date (number), team ID (text), opposite team ID (text), regular / postseason (text), ID of goalie 1 (text), ID of goalie 2 (text) | Goalies : playerID (text), year (number), stint (number), team ID (text), league ID (text), Games played (text), Minutes (text), wins (text), loses (text), Ties / overtime losses (text), Empty net goals (text), Shutouts (text), Goals against (text), Shots against (text), Postseason games played (text), Postseason minutes (text), Postseason wins (text), Postseason loses (text), Postseason ties (text), Postseason empty net goals (text), Postseason Shutouts (text), Postseason Goals against (text), Postseason Shots against (text) | GoaliesSC : playerID (text), year (number), team ID (text), league ID (text), Games played (number), Minutes (number), Wins (number), Loses (number), Ties (number), Shutouts (number), Goals against (number) | GoaliesShootout : playerID (text), year (number), stint (number), team ID (text), Wins (number), Loses (number), Shots against (number), Goals against (number) | Scoring : playerID (text), year (number), stint (number), team id (text), league id (text), position (text), game played (number), goals (number), assists (number), points (number), Penalty minutes (number), Plus / minus (text), Power play goals (text), Power play assists (text), Shorthanded goals (text), Shorthanded assists (text), Game-winning goals (text), Game-tying goals (text), Shots on goal (text), Postseason games played (text), Postseason goals (text), Postseason assists (text), Postseason points (text), Postseason penalty minutes (text), Postseason Plus / minus (text), Postseason power play goals (text), Postseason power play assists (text), Postseason Shorthanded goals (text), Postseason Shorthanded assists (text), Postseason game-winning goals (text), Postseason shots on goal (text) | ScoringSC : playerID (text), year (number), team ID (text), league ID (text), position (text), Games played (number), Goals (number), assists (number), points (number), Penalty minutes (number) | ScoringShootout : player id (text), year (number), stint (number), team ID (text), shots (number), goals (number), game deciding goals (number) | ScoringSup : player id (text), year (number), Power play assists (text), Shorthanded assists (text) | SeriesPost : year (number), round (text), series (text), Team ID of winner (text), League ID of winner (text), Team ID of loser (text), league id of loser (text), wins (number), loses (number), ties (number), goals for winner (number), goals for loser (number), note (text) | TeamSplits : year (number), league ID (text), team ID (text), home wins (number), home loses (number), home ties (number), Home overtime losses (text), Road wins (number), Road loses (number), Road ties (number), road overtime loses (text), September wins (text), September loses (text), September ties (text), September overtime loses (text), October wins (text), October loses (text), October ties (text), October overtime loses (text), November wins (text), November loses (text), November ties (text), November overtime loses (text), December wins (text), December loses (text), December ties (text), December overtime loses (text), January wins (number), January loses (number), January ties (number), January overtime loses (text), February wins (number), February loses (number), February ties (number), February overtime loses (text), March wins (text), March loses (text), March ties (text), March overtime loses (text), April wins (text), April loses (text), April ties (text), April overtime loses (text) | TeamVsTeam : year (number), league ID (text), team ID (text), opponent ID (text), wins (number), loses (number), ties (number), overtime loses (text) | TeamsHalf : year (number), league ID (text), team ID (text), half (number), rank (number), Games (number), wins (number), loses (number), ties (number), goals for (number), goals against (number) | TeamsPost : year (number), league ID (text), team ID (text), Games (number), wins (number), loses (number), ties (number), goals for (number), goals against (number), penalty minutes (text), Bench minors (minutes) (text), Power play goals (text), Power play chances (text), Shorthanded goals against (text), Power play goals against (text), Penalty kill chances (text), Shorthanded goals for (text) | TeamsSC : year (number), league ID (text), team ID (text), Games (number), wins (number), loses (number), ties (number), goals for (number), goals against (number), penalty minutes (text) | abbrev : Type (text), Code (text), Fullname (text)","CREATE TABLE AwardsMisc (
    name TEXT,
    ID TEXT,
    award TEXT,
    year INT,
    league ID TEXT,
    note TEXT
);

CREATE TABLE HOF (
    year INT,
    hall of fame id TEXT,
    name TEXT,
    category TEXT
);

CREATE TABLE Teams (
    year INT,
    league ID TEXT,
    team ID TEXT,
    Franchise ID TEXT,
    Conference ID TEXT,
    Division ID TEXT,
    rank INT,
    playoff TEXT,
    games INT,
    wins INT,
    loses INT,
    ties INT,
    Overtime losses TEXT,
    points INT,
    Shootout wins TEXT,
    Shootout loses TEXT,
    Goals for INT,
    Goals against INT,
    Full team name TEXT,
    Penalty minutes TEXT,
    Bench minors minutes) (text,
    Power play goals TEXT,
    Power play chances TEXT,
    Shorthanded goals against TEXT,
    Power play goals against TEXT,
    Penalty kill chances TEXT,
    Shorthanded goals for TEXT
);

CREATE TABLE Coaches (
    coach ID TEXT,
    year INT,
    team ID TEXT,
    league ID TEXT,
    stint INT,
    notes TEXT,
    games INT,
    wins INT,
    loses INT,
    ties INT,
    post-season games TEXT,
    post-season wins TEXT,
    post-season loses TEXT,
    post-season ties TEXT
);

CREATE TABLE AwardsCoaches (
    coach ID TEXT,
    award TEXT,
    year INT,
    league ID TEXT,
    note TEXT
);

CREATE TABLE Master (
    playerID TEXT,
    coach ID TEXT,
    hofID TEXT,
    first name TEXT,
    last name TEXT,
    name note TEXT,
    name given TEXT,
    Nickname TEXT,
    height TEXT,
    weight TEXT,
    shoot catch TEXT,
    legends ID TEXT,
    Internet Hockey Database ID TEXT,
    Hockey-Reference.com ID TEXT,
    First NHL season TEXT,
    Last NHL season TEXT,
    First WHA season TEXT,
    Last WHA season TEXT,
    position TEXT,
    birth Year TEXT,
    birth Month TEXT,
    birth Day TEXT,
    birth Country TEXT,
    birth State TEXT,
    birth city TEXT,
    death year TEXT,
    death month TEXT,
    death day TEXT,
    death country TEXT,
    death state TEXT,
    death city TEXT
);

CREATE TABLE AwardsPlayers (
    player id TEXT,
    award TEXT,
    year INT,
    league ID TEXT,
    note TEXT,
    position TEXT
);

CREATE TABLE CombinedShutouts (
    year INT,
    month INT,
    date INT,
    team ID TEXT,
    opposite team ID TEXT,
    regular / postseason TEXT,
    ID of goalie 1 TEXT,
    ID of goalie 2 TEXT
);

CREATE TABLE Goalies (
    playerID TEXT,
    year INT,
    stint INT,
    team ID TEXT,
    league ID TEXT,
    Games played TEXT,
    Minutes TEXT,
    wins TEXT,
    loses TEXT,
    Ties / overtime losses TEXT,
    Empty net goals TEXT,
    Shutouts TEXT,
    Goals against TEXT,
    Shots against TEXT,
    Postseason games played TEXT,
    Postseason minutes TEXT,
    Postseason wins TEXT,
    Postseason loses TEXT,
    Postseason ties TEXT,
    Postseason empty net goals TEXT,
    Postseason Shutouts TEXT,
    Postseason Goals against TEXT,
    Postseason Shots against TEXT
);

CREATE TABLE GoaliesSC (
    playerID TEXT,
    year INT,
    team ID TEXT,
    league ID TEXT,
    Games played INT,
    Minutes INT,
    Wins INT,
    Loses INT,
    Ties INT,
    Shutouts INT,
    Goals against INT
);

CREATE TABLE GoaliesShootout (
    playerID TEXT,
    year INT,
    stint INT,
    team ID TEXT,
    Wins INT,
    Loses INT,
    Shots against INT,
    Goals against INT
);

CREATE TABLE Scoring (
    playerID TEXT,
    year INT,
    stint INT,
    team id TEXT,
    league id TEXT,
    position TEXT,
    game played INT,
    goals INT,
    assists INT,
    points INT,
    Penalty minutes INT,
    Plus / minus TEXT,
    Power play goals TEXT,
    Power play assists TEXT,
    Shorthanded goals TEXT,
    Shorthanded assists TEXT,
    Game-winning goals TEXT,
    Game-tying goals TEXT,
    Shots on goal TEXT,
    Postseason games played TEXT,
    Postseason goals TEXT,
    Postseason assists TEXT,
    Postseason points TEXT,
    Postseason penalty minutes TEXT,
    Postseason Plus / minus TEXT,
    Postseason power play goals TEXT,
    Postseason power play assists TEXT,
    Postseason Shorthanded goals TEXT,
    Postseason Shorthanded assists TEXT,
    Postseason game-winning goals TEXT,
    Postseason shots on goal TEXT
);

CREATE TABLE ScoringSC (
    playerID TEXT,
    year INT,
    team ID TEXT,
    league ID TEXT,
    position TEXT,
    Games played INT,
    Goals INT,
    assists INT,
    points INT,
    Penalty minutes INT
);

CREATE TABLE ScoringShootout (
    player id TEXT,
    year INT,
    stint INT,
    team ID TEXT,
    shots INT,
    goals INT,
    game deciding goals INT
);

CREATE TABLE ScoringSup (
    player id TEXT,
    year INT,
    Power play assists TEXT,
    Shorthanded assists TEXT
);

CREATE TABLE SeriesPost (
    year INT,
    round TEXT,
    series TEXT,
    Team ID of winner TEXT,
    League ID of winner TEXT,
    Team ID of loser TEXT,
    league id of loser TEXT,
    wins INT,
    loses INT,
    ties INT,
    goals for winner INT,
    goals for loser INT,
    note TEXT
);

CREATE TABLE TeamSplits (
    year INT,
    league ID TEXT,
    team ID TEXT,
    home wins INT,
    home loses INT,
    home ties INT,
    Home overtime losses TEXT,
    Road wins INT,
    Road loses INT,
    Road ties INT,
    road overtime loses TEXT,
    September wins TEXT,
    September loses TEXT,
    September ties TEXT,
    September overtime loses TEXT,
    October wins TEXT,
    October loses TEXT,
    October ties TEXT,
    October overtime loses TEXT,
    November wins TEXT,
    November loses TEXT,
    November ties TEXT,
    November overtime loses TEXT,
    December wins TEXT,
    December loses TEXT,
    December ties TEXT,
    December overtime loses TEXT,
    January wins INT,
    January loses INT,
    January ties INT,
    January overtime loses TEXT,
    February wins INT,
    February loses INT,
    February ties INT,
    February overtime loses TEXT,
    March wins TEXT,
    March loses TEXT,
    March ties TEXT,
    March overtime loses TEXT,
    April wins TEXT,
    April loses TEXT,
    April ties TEXT,
    April overtime loses TEXT
);

CREATE TABLE TeamVsTeam (
    year INT,
    league ID TEXT,
    team ID TEXT,
    opponent ID TEXT,
    wins INT,
    loses INT,
    ties INT,
    overtime loses TEXT
);

CREATE TABLE TeamsHalf (
    year INT,
    league ID TEXT,
    team ID TEXT,
    half INT,
    rank INT,
    Games INT,
    wins INT,
    loses INT,
    ties INT,
    goals for INT,
    goals against INT
);

CREATE TABLE TeamsPost (
    year INT,
    league ID TEXT,
    team ID TEXT,
    Games INT,
    wins INT,
    loses INT,
    ties INT,
    goals for INT,
    goals against INT,
    penalty minutes TEXT,
    Bench minors minutes) (text,
    Power play goals TEXT,
    Power play chances TEXT,
    Shorthanded goals against TEXT,
    Power play goals against TEXT,
    Penalty kill chances TEXT,
    Shorthanded goals for TEXT
);

CREATE TABLE TeamsSC (
    year INT,
    league ID TEXT,
    team ID TEXT,
    Games INT,
    wins INT,
    loses INT,
    ties INT,
    goals for INT,
    goals against INT,
    penalty minutes TEXT
);

CREATE TABLE abbrev (
    Type TEXT,
    Code TEXT,
    Fullname TEXT
);"
music_platform_2,"runs : run at (text), max row id (number), reviews added (number) | podcasts : podcast id (text), itunes id (number), slug (text), itunes url (text), title (text) | reviews : podcast id (text), title (text), content (text), rating (number), author id (text), created at (text) | categories : podcast id (text), category (text)","CREATE TABLE runs (
    run at TEXT,
    max row id INT,
    reviews added INT
);

CREATE TABLE podcasts (
    podcast id TEXT,
    itunes id INT,
    slug TEXT,
    itunes url TEXT,
    title TEXT
);

CREATE TABLE reviews (
    podcast id TEXT,
    title TEXT,
    content TEXT,
    rating INT,
    author id TEXT,
    created at TEXT
);

CREATE TABLE categories (
    podcast id TEXT,
    category TEXT
);"
address,"CBSA : CBSA (number), cbsa name (text), cbsa type (text) | state : abbreviation (text), name (text) | congress : congress representative id (text), first name (text), last name (text), CID (text), party (text), state (text), abbreviation (text), House (text), District (number), land area (text) | zip_data : zip code (number), city (text), state (text), multi country (text), type (text), organization (text), time zone (text), daylight savings (text), latitude (text), longitude (text), elevation (number), state fips (number), country fips (number), region (text), division (text), population 2020 (number), population 2010 (number), households (number), average house value (number), average income per household (number), persons per household (text), white population (number), black population (number), Hispanic population (number), Asian population (number), American Indian population (number), Hawaiian population (number), other population (number), male population (number), female population (number), median age (text), male median age (text), female median age (text), residential mailboxes (number), business mailboxes (number), total delivery receptacles (number), businesses (number), 1st quarter payroll (number), annual payroll (number), employees (number), water area (text), land area (text), single-family delivery units (number), multi-family delivery units (number), total beneficiaries (number), retired workers (number), disable workers (number), parents and widowed (number), spouses (number), children (number), over 65 (number), monthly benefits all (number), monthly benefits retired workers (number), monthly benefits widowed (number), CBSA (number) | alias : zip code (number), alias (text) | area_code : zip code (number), area code (number) | avoid : zip code (number), bad alias (text) | country : zip code (number), country (text), state (text) | zip_congress : zip code (number), district (text)","CREATE TABLE CBSA (
    CBSA INT,
    cbsa name TEXT,
    cbsa type TEXT
);

CREATE TABLE state (
    abbreviation TEXT,
    name TEXT
);

CREATE TABLE congress (
    congress representative id TEXT,
    first name TEXT,
    last name TEXT,
    CID TEXT,
    party TEXT,
    state TEXT,
    abbreviation TEXT,
    House TEXT,
    District INT,
    land area TEXT
);

CREATE TABLE zip_data (
    zip code INT,
    city TEXT,
    state TEXT,
    multi country TEXT,
    type TEXT,
    organization TEXT,
    time zone TEXT,
    daylight savings TEXT,
    latitude TEXT,
    longitude TEXT,
    elevation INT,
    state fips INT,
    country fips INT,
    region TEXT,
    division TEXT,
    population 2020 INT,
    population 2010 INT,
    households INT,
    average house value INT,
    average income per household INT,
    persons per household TEXT,
    white population INT,
    black population INT,
    Hispanic population INT,
    Asian population INT,
    American Indian population INT,
    Hawaiian population INT,
    other population INT,
    male population INT,
    female population INT,
    median age TEXT,
    male median age TEXT,
    female median age TEXT,
    residential mailboxes INT,
    business mailboxes INT,
    total delivery receptacles INT,
    businesses INT,
    1st quarter payroll INT,
    annual payroll INT,
    employees INT,
    water area TEXT,
    land area TEXT,
    single-family delivery units INT,
    multi-family delivery units INT,
    total beneficiaries INT,
    retired workers INT,
    disable workers INT,
    parents and widowed INT,
    spouses INT,
    children INT,
    over 65 INT,
    monthly benefits all INT,
    monthly benefits retired workers INT,
    monthly benefits widowed INT,
    CBSA INT
);

CREATE TABLE alias (
    zip code INT,
    alias TEXT
);

CREATE TABLE area_code (
    zip code INT,
    area code INT
);

CREATE TABLE avoid (
    zip code INT,
    bad alias TEXT
);

CREATE TABLE country (
    zip code INT,
    country TEXT,
    state TEXT
);

CREATE TABLE zip_congress (
    zip code INT,
    district TEXT
);"
menu,"Dish : id (number), name (text), description (text), menus appeared (number), times appeared (number), first appeared (number), last appeared (number), lowest price (text), highest price (text) | Menu : id (number), name (text), sponsor (text), event (text), venue (text), place (text), physical description (text), occasion (text), notes (text), call_number (text), keywords (text), language (text), date (text), location (text), location_type (text), currency (text), currency_symbol (text), status (text), page count (number), dish count (number) | MenuPage : id (number), menu id (number), page number (number), image id (text), full height (number), full width (number), uuid (text) | MenuItem : id (number), menu_page_id (number), price (text), high price (text), dish_id (number), created at (text), updated at (text), x position (text), y position (text)","CREATE TABLE Dish (
    id INT,
    name TEXT,
    description TEXT,
    menus appeared INT,
    times appeared INT,
    first appeared INT,
    last appeared INT,
    lowest price TEXT,
    highest price TEXT
);

CREATE TABLE Menu (
    id INT,
    name TEXT,
    sponsor TEXT,
    event TEXT,
    venue TEXT,
    place TEXT,
    physical description TEXT,
    occasion TEXT,
    notes TEXT,
    call_number TEXT,
    keywords TEXT,
    language TEXT,
    date TEXT,
    location TEXT,
    location_type TEXT,
    currency TEXT,
    currency_symbol TEXT,
    status TEXT,
    page count INT,
    dish count INT
);

CREATE TABLE MenuPage (
    id INT,
    menu id INT,
    page number INT,
    image id TEXT,
    full height INT,
    full width INT,
    uuid TEXT
);

CREATE TABLE MenuItem (
    id INT,
    menu_page_id INT,
    price TEXT,
    high price TEXT,
    dish_id INT,
    created at TEXT,
    updated at TEXT,
    x position TEXT,
    y position TEXT
);"
professional_basketball,"awards_players : playerID (text), award (text), year (number), league ID (text), note (text), position (text) | coaches : coachID (text), year (number), team ID (text), league ID (text), stint (number), won (number), lost (number), post season wins (number), post season losses (number) | draft : id (number), draftYear (number), draftRound (number), league ID (number), draft overall rank (number), team ID (text), firstName (text), lastName (text), suffixName (text), playerID (text), draftFrom (text), league ID (text) | player_allstar : playerID (text), last_name (text), first_name (text), season_id (number), conference (text), league ID (text), games_played (number), minutes (number), points (number), offense rebounds (number), defense rebounds (number), rebounds (number), assistants (number), steals (number), blocks (number), turnovers (number), personal_fouls (number), field goal attempted (number), field goal made (number), free throw attempted (number), free throw made (number), three point attempted (number), three point made (number) | players : playerID (text), use first name (text), firstName (text), middleName (text), lastName (text), nameGiven (text), fullGivenName (text), nameSuffix (text), nick name (text), position (text), firstseason (number), lastseason (number), height (text), weight (number), college (text), collegeOther (text), birthDate (text), birthCity (text), birthState (text), birthCountry (text), highSchool (text), high school city (text), high school state (text), high school country (text), deathDate (text), race (text) | teams : year (number), league ID (text), team ID (text), franchID (text), confID (text), division ID (text), rank (number), confRank (number), playoff (text), name (text), offense field goal made (number), offense free throw made (number), offense points (number), defense points (number), home wins (number), home loses (number), away wins (number), away loses (number), won (number), lost (number), games (number), arena (text) | awards_coaches : id (number), year (number), coachID (text), award (text), league ID (text), note (text) | players_teams : id (number), playerID (text), year (number), stint (number), team ID (text), lgID (text), game presentatons (number), game starting (number), minutes (number), points (number), offense rebounds (number), defense rebounds (number), rebounds (number), assistants (number), steals (number), blocks (number), turnovers (number), personal fouls (number), field goal attempted (number), field goal made (number), free throw attempted (number), free throw made (number), three point attempted (number), three point made (number), post season game presentations (number), post season game starting (number), post season minutes (number), post season points (number), post season offense rebounds (number), post season defense rebounds (number), post season defense rebounds (number), post season assistants (number), post season steals (number), post season blocks (number), post season turnovers (number), post season personal fouls (number), post season field goal attempted (number), post season field goal made (number), post season field free throw attempted (number), post season free throw made (number), post season three point attempted (number), post season three point made (number), note (text) | series_post : id (number), year (number), round (text), series (text), team id winner (text), league id winner (text), team id loser (text), league id loser (text), wins (number), loses (number)","CREATE TABLE awards_players (
    playerID TEXT,
    award TEXT,
    year INT,
    league ID TEXT,
    note TEXT,
    position TEXT
);

CREATE TABLE coaches (
    coachID TEXT,
    year INT,
    team ID TEXT,
    league ID TEXT,
    stint INT,
    won INT,
    lost INT,
    post season wins INT,
    post season losses INT
);

CREATE TABLE draft (
    id INT,
    draftYear INT,
    draftRound INT,
    league ID INT,
    draft overall rank INT,
    team ID TEXT,
    firstName TEXT,
    lastName TEXT,
    suffixName TEXT,
    playerID TEXT,
    draftFrom TEXT,
    league ID TEXT
);

CREATE TABLE player_allstar (
    playerID TEXT,
    last_name TEXT,
    first_name TEXT,
    season_id INT,
    conference TEXT,
    league ID TEXT,
    games_played INT,
    minutes INT,
    points INT,
    offense rebounds INT,
    defense rebounds INT,
    rebounds INT,
    assistants INT,
    steals INT,
    blocks INT,
    turnovers INT,
    personal_fouls INT,
    field goal attempted INT,
    field goal made INT,
    free throw attempted INT,
    free throw made INT,
    three point attempted INT,
    three point made INT
);

CREATE TABLE players (
    playerID TEXT,
    use first name TEXT,
    firstName TEXT,
    middleName TEXT,
    lastName TEXT,
    nameGiven TEXT,
    fullGivenName TEXT,
    nameSuffix TEXT,
    nick name TEXT,
    position TEXT,
    firstseason INT,
    lastseason INT,
    height TEXT,
    weight INT,
    college TEXT,
    collegeOther TEXT,
    birthDate TEXT,
    birthCity TEXT,
    birthState TEXT,
    birthCountry TEXT,
    highSchool TEXT,
    high school city TEXT,
    high school state TEXT,
    high school country TEXT,
    deathDate TEXT,
    race TEXT
);

CREATE TABLE teams (
    year INT,
    league ID TEXT,
    team ID TEXT,
    franchID TEXT,
    confID TEXT,
    division ID TEXT,
    rank INT,
    confRank INT,
    playoff TEXT,
    name TEXT,
    offense field goal made INT,
    offense free throw made INT,
    offense points INT,
    defense points INT,
    home wins INT,
    home loses INT,
    away wins INT,
    away loses INT,
    won INT,
    lost INT,
    games INT,
    arena TEXT
);

CREATE TABLE awards_coaches (
    id INT,
    year INT,
    coachID TEXT,
    award TEXT,
    league ID TEXT,
    note TEXT
);

CREATE TABLE players_teams (
    id INT,
    playerID TEXT,
    year INT,
    stint INT,
    team ID TEXT,
    lgID TEXT,
    game presentatons INT,
    game starting INT,
    minutes INT,
    points INT,
    offense rebounds INT,
    defense rebounds INT,
    rebounds INT,
    assistants INT,
    steals INT,
    blocks INT,
    turnovers INT,
    personal fouls INT,
    field goal attempted INT,
    field goal made INT,
    free throw attempted INT,
    free throw made INT,
    three point attempted INT,
    three point made INT,
    post season game presentations INT,
    post season game starting INT,
    post season minutes INT,
    post season points INT,
    post season offense rebounds INT,
    post season defense rebounds INT,
    post season defense rebounds INT,
    post season assistants INT,
    post season steals INT,
    post season blocks INT,
    post season turnovers INT,
    post season personal fouls INT,
    post season field goal attempted INT,
    post season field goal made INT,
    post season field free throw attempted INT,
    post season free throw made INT,
    post season three point attempted INT,
    post season three point made INT,
    note TEXT
);

CREATE TABLE series_post (
    id INT,
    year INT,
    round TEXT,
    series TEXT,
    team id winner TEXT,
    league id winner TEXT,
    team id loser TEXT,
    league id loser TEXT,
    wins INT,
    loses INT
);"
cars,"country : origin (number), country (text) | price : ID (number), price (text) | data : ID (number), mileage per gallon (text), number of cylinders (number), displacement (text), horse power (number), weight (number), acceleration (text), model (number), car name (text) | production : ID (number), model year (number), country (number)","CREATE TABLE country (
    origin INT,
    country TEXT
);

CREATE TABLE price (
    ID INT,
    price TEXT
);

CREATE TABLE data (
    ID INT,
    mileage per gallon TEXT,
    number of cylinders INT,
    displacement TEXT,
    horse power INT,
    weight INT,
    acceleration TEXT,
    model INT,
    car name TEXT
);

CREATE TABLE production (
    ID INT,
    model year INT,
    country INT
);"
synthea,"all_prevalences : ITEM (text), population type (text), OCCURRENCES (number), population count (number), prevalence rate (text), prevalence percentage (text) | patients : patient (text), birth date (text), death date (text), social security number (text), drivers (text), passport (text), prefix (text), first (text), last (text), suffix (text), maiden (text), marital (text), race (text), ethnicity (text), gender (text), birth place (text), address (text) | encounters : ID (text), DATE (text), PATIENT (text), CODE (number), DESCRIPTION (text), REASONCODE (number), reason description (text) | allergies : START (text), STOP (text), PATIENT (text), ENCOUNTER (text), CODE (number), DESCRIPTION (text) | careplans : ID (text), START (text), STOP (text), PATIENT (text), ENCOUNTER (text), CODE (text), DESCRIPTION (text), REASONCODE (number), reason description (text) | conditions : START (text), STOP (text), PATIENT (text), ENCOUNTER (text), CODE (number), DESCRIPTION (text) | immunizations : DATE (text), PATIENT (text), ENCOUNTER (text), CODE (number), DESCRIPTION (text) | medications : START (text), STOP (text), PATIENT (text), ENCOUNTER (text), CODE (number), DESCRIPTION (text), REASONCODE (number), reason description (text) | observations : DATE (text), PATIENT (text), ENCOUNTER (text), CODE (text), DESCRIPTION (text), VALUE (text), UNITS (text) | procedures : DATE (text), PATIENT (text), ENCOUNTER (text), CODE (number), DESCRIPTION (text), reason code (number), reason description (text) | claims : ID (text), PATIENT (text), billable period (text), ORGANIZATION (text), ENCOUNTER (text), DIAGNOSIS (text), TOTAL (number)","CREATE TABLE all_prevalences (
    ITEM TEXT,
    population type TEXT,
    OCCURRENCES INT,
    population count INT,
    prevalence rate TEXT,
    prevalence percentage TEXT
);

CREATE TABLE patients (
    patient TEXT,
    birth date TEXT,
    death date TEXT,
    social security number TEXT,
    drivers TEXT,
    passport TEXT,
    prefix TEXT,
    first TEXT,
    last TEXT,
    suffix TEXT,
    maiden TEXT,
    marital TEXT,
    race TEXT,
    ethnicity TEXT,
    gender TEXT,
    birth place TEXT,
    address TEXT
);

CREATE TABLE encounters (
    ID TEXT,
    DATE TEXT,
    PATIENT TEXT,
    CODE INT,
    DESCRIPTION TEXT,
    REASONCODE INT,
    reason description TEXT
);

CREATE TABLE allergies (
    START TEXT,
    STOP TEXT,
    PATIENT TEXT,
    ENCOUNTER TEXT,
    CODE INT,
    DESCRIPTION TEXT
);

CREATE TABLE careplans (
    ID TEXT,
    START TEXT,
    STOP TEXT,
    PATIENT TEXT,
    ENCOUNTER TEXT,
    CODE TEXT,
    DESCRIPTION TEXT,
    REASONCODE INT,
    reason description TEXT
);

CREATE TABLE conditions (
    START TEXT,
    STOP TEXT,
    PATIENT TEXT,
    ENCOUNTER TEXT,
    CODE INT,
    DESCRIPTION TEXT
);

CREATE TABLE immunizations (
    DATE TEXT,
    PATIENT TEXT,
    ENCOUNTER TEXT,
    CODE INT,
    DESCRIPTION TEXT
);

CREATE TABLE medications (
    START TEXT,
    STOP TEXT,
    PATIENT TEXT,
    ENCOUNTER TEXT,
    CODE INT,
    DESCRIPTION TEXT,
    REASONCODE INT,
    reason description TEXT
);

CREATE TABLE observations (
    DATE TEXT,
    PATIENT TEXT,
    ENCOUNTER TEXT,
    CODE TEXT,
    DESCRIPTION TEXT,
    VALUE TEXT,
    UNITS TEXT
);

CREATE TABLE procedures (
    DATE TEXT,
    PATIENT TEXT,
    ENCOUNTER TEXT,
    CODE INT,
    DESCRIPTION TEXT,
    reason code INT,
    reason description TEXT
);

CREATE TABLE claims (
    ID TEXT,
    PATIENT TEXT,
    billable period TEXT,
    ORGANIZATION TEXT,
    ENCOUNTER TEXT,
    DIAGNOSIS TEXT,
    TOTAL INT
);"
genes,"Classification : gene id (text), Localization (text) | Genes : gene id (text), Essential (text), Class (text), Complex (text), Phenotype (text), Motif (text), Chromosome (number), Function (text), Localization (text) | Interactions : gene id 1 (text), gene id 2 (text), Type (text), Expression correlation score (text)","CREATE TABLE Classification (
    gene id TEXT,
    Localization TEXT
);

CREATE TABLE Genes (
    gene id TEXT,
    Essential TEXT,
    Class TEXT,
    Complex TEXT,
    Phenotype TEXT,
    Motif TEXT,
    Chromosome INT,
    Function TEXT,
    Localization TEXT
);

CREATE TABLE Interactions (
    gene id 1 TEXT,
    gene id 2 TEXT,
    Type TEXT,
    Expression correlation score TEXT
);"
retails,"customer : customer key (number), customer market segment (text), customer nation key (number), customer name (text), customer address (text), customer phone (text), customer account balance (text), customer comment (text) | lineitem : line item ship date (text), line item order key (number), line item discount (text), line item extended price (text), line item suppkey (number), line item quantity (number), line item return flag (text), line item part key (number), line item line status (text), line item tax (text), line item commit date (text), line item receipt date (text), line item ship mode (text), line item line number (number), line item ship instruct (text), line item comment (text) | nation : nation key (number), nation name (text), nation region key (number), nation comment (text) | orders : order date (text), order key (number), order customer key (number), order priority (text), order ship priority (number), order clerk (text), order status (text), order total price (text), order comment (text) | part : part key (number), part type (text), part size (number), part brand (text), part name (text), part container (text), part manufacturer (text), part retail price (text), part comment (text) | partsupp : part supply part key (number), part supply supply key (number), part supply cost (text), part supply available quantity (number), part supply comment (text) | region : region key (number), region name (text), region comment (text) | supplier : supply key (number), supplier nation key (number), supplier comment (text), supplier name (text), supplier address (text), supplier phone (text), supplier account balance (text)","CREATE TABLE customer (
    customer key INT,
    customer market segment TEXT,
    customer nation key INT,
    customer name TEXT,
    customer address TEXT,
    customer phone TEXT,
    customer account balance TEXT,
    customer comment TEXT
);

CREATE TABLE lineitem (
    line item ship date TEXT,
    line item order key INT,
    line item discount TEXT,
    line item extended price TEXT,
    line item suppkey INT,
    line item quantity INT,
    line item return flag TEXT,
    line item part key INT,
    line item line status TEXT,
    line item tax TEXT,
    line item commit date TEXT,
    line item receipt date TEXT,
    line item ship mode TEXT,
    line item line number INT,
    line item ship instruct TEXT,
    line item comment TEXT
);

CREATE TABLE nation (
    nation key INT,
    nation name TEXT,
    nation region key INT,
    nation comment TEXT
);

CREATE TABLE orders (
    order date TEXT,
    order key INT,
    order customer key INT,
    order priority TEXT,
    order ship priority INT,
    order clerk TEXT,
    order status TEXT,
    order total price TEXT,
    order comment TEXT
);

CREATE TABLE part (
    part key INT,
    part type TEXT,
    part size INT,
    part brand TEXT,
    part name TEXT,
    part container TEXT,
    part manufacturer TEXT,
    part retail price TEXT,
    part comment TEXT
);

CREATE TABLE partsupp (
    part supply part key INT,
    part supply supply key INT,
    part supply cost TEXT,
    part supply available quantity INT,
    part supply comment TEXT
);

CREATE TABLE region (
    region key INT,
    region name TEXT,
    region comment TEXT
);

CREATE TABLE supplier (
    supply key INT,
    supplier nation key INT,
    supplier comment TEXT,
    supplier name TEXT,
    supplier address TEXT,
    supplier phone TEXT,
    supplier account balance TEXT
);"
talkingdata,"app_all : app_id (number) | app_events : event id (number), app id (number), is installed (number), is active (number) | app_events_relevant : event_id (number), app_id (number), is_installed (number), is_active (number) | app_labels : app id (number), label id (number) | events : event id (number), device id (number), timestamp (text), longitude (text), latitude (text) | events_relevant : event_id (number), device_id (number), timestamp (text), longitude (text), latitude (text) | gender_age : device id (number), gender (text), age (number), group (text) | gender_age_test : device_id (number) | gender_age_train : device_id (number), gender (text), age (number), group (text) | label_categories : label id (number), category (text) | phone_brand_device_model2 : device id (number), phone brand (text), device model (text) | sample_submission : device_id (number), F23- (text), F24-26 (text), F27-28 (text), F29-32 (text), F33-42 (text), F43+ (text), M22- (text), M23-26 (text), M27-28 (text), M29-31 (text), M32-38 (text), M39+ (text)","CREATE TABLE app_all (
    app_id INT
);

CREATE TABLE app_events (
    event id INT,
    app id INT,
    is installed INT,
    is active INT
);

CREATE TABLE app_events_relevant (
    event_id INT,
    app_id INT,
    is_installed INT,
    is_active INT
);

CREATE TABLE app_labels (
    app id INT,
    label id INT
);

CREATE TABLE events (
    event id INT,
    device id INT,
    timestamp TEXT,
    longitude TEXT,
    latitude TEXT
);

CREATE TABLE events_relevant (
    event_id INT,
    device_id INT,
    timestamp TEXT,
    longitude TEXT,
    latitude TEXT
);

CREATE TABLE gender_age (
    device id INT,
    gender TEXT,
    age INT,
    group TEXT
);

CREATE TABLE gender_age_test (
    device_id INT
);

CREATE TABLE gender_age_train (
    device_id INT,
    gender TEXT,
    age INT,
    group TEXT
);

CREATE TABLE label_categories (
    label id INT,
    category TEXT
);

CREATE TABLE phone_brand_device_model2 (
    device id INT,
    phone brand TEXT,
    device model TEXT
);

CREATE TABLE sample_submission (
    device_id INT,
    F23- TEXT,
    F24-26 TEXT,
    F27-28 TEXT,
    F29-32 TEXT,
    F33-42 TEXT,
    F43+ TEXT,
    M22- TEXT,
    M23-26 TEXT,
    M27-28 TEXT,
    M29-31 TEXT,
    M32-38 TEXT,
    M39+ TEXT
);"
beer_factory,"customers : customer id (number), first name (text), last name (text), street address (text), City (text), State (text), zip code (number), Email (text), phone number (text), first purchase date (text), subscribed to email list (text), Gender (text) | geolocation : location id (number), Latitude (text), Longitude (text) | location : location id (number), location name (text), street address (text), City (text), State (text), zip code (number) | rootbeerbrand : brand id (number), brand name (text), first brewed year (number), brewery name (text), City (text), State (text), Country (text), Description (text), cane sugar (text), corn syrup (text), Honey (text), artificial sweetener (text), Caffeinated (text), Alcoholic (text), available in cans (text), available in bottles (text), available in kegs (text), Website (text), facebook page (text), Twitter (text), wholesale cost (text), current retail price (text) | rootbeer : root beer id (number), brandid (number), container type (text), location id (number), purchase date (text) | rootbeerreview : customer id (number), brand id (number), star rating (number), review date (text), Review (text) | transaction : transaction id (number), credit card number (number), customer id (number), transaction date (text), credit card type (text), location id (number), root beer id (number), purchase price (text)","CREATE TABLE customers (
    customer id INT,
    first name TEXT,
    last name TEXT,
    street address TEXT,
    City TEXT,
    State TEXT,
    zip code INT,
    Email TEXT,
    phone number TEXT,
    first purchase date TEXT,
    subscribed to email list TEXT,
    Gender TEXT
);

CREATE TABLE geolocation (
    location id INT,
    Latitude TEXT,
    Longitude TEXT
);

CREATE TABLE location (
    location id INT,
    location name TEXT,
    street address TEXT,
    City TEXT,
    State TEXT,
    zip code INT
);

CREATE TABLE rootbeerbrand (
    brand id INT,
    brand name TEXT,
    first brewed year INT,
    brewery name TEXT,
    City TEXT,
    State TEXT,
    Country TEXT,
    Description TEXT,
    cane sugar TEXT,
    corn syrup TEXT,
    Honey TEXT,
    artificial sweetener TEXT,
    Caffeinated TEXT,
    Alcoholic TEXT,
    available in cans TEXT,
    available in bottles TEXT,
    available in kegs TEXT,
    Website TEXT,
    facebook page TEXT,
    Twitter TEXT,
    wholesale cost TEXT,
    current retail price TEXT
);

CREATE TABLE rootbeer (
    root beer id INT,
    brandid INT,
    container type TEXT,
    location id INT,
    purchase date TEXT
);

CREATE TABLE rootbeerreview (
    customer id INT,
    brand id INT,
    star rating INT,
    review date TEXT,
    Review TEXT
);

CREATE TABLE transaction (
    transaction id INT,
    credit card number INT,
    customer id INT,
    transaction date TEXT,
    credit card type TEXT,
    location id INT,
    root beer id INT,
    purchase price TEXT
);"
chicago_crime,"Community_Area : community area number (number), community area name (text), side (text), population (text) | District : district number (number), district name (text), address (text), zip code (number), commander (text), email (text), phone (text), fax (text), tty (text), twitter (text) | FBI_Code : fbi code number (text), title (text), description (text), crime against (text) | IUCR : iucr number (text), primary description (text), secondary description (text), index code (text) | Neighborhood : neighborhood name (text), community area number (number) | Ward : ward_no (number), alderman_first_name (text), alderman_last_name (text), alderman_name_suffix (text), ward_office_address (text), ward_office_zip (text), ward_email (text), ward_office_phone (text), ward_office_fax (text), city_hall_office_room (number), city_hall_office_phone (text), city_hall_office_fax (text), Population (number) | Crime : report number (number), case number (text), date (text), block (text), Illinois Uniform Crime Reporting number (text), location description (text), arrest (text), domestic (text), beat (number), district number (number), ward number (number), community area number (number), fbi code number (text), latitude (text), longitude (text)","CREATE TABLE Community_Area (
    community area number INT,
    community area name TEXT,
    side TEXT,
    population TEXT
);

CREATE TABLE District (
    district number INT,
    district name TEXT,
    address TEXT,
    zip code INT,
    commander TEXT,
    email TEXT,
    phone TEXT,
    fax TEXT,
    tty TEXT,
    twitter TEXT
);

CREATE TABLE FBI_Code (
    fbi code number TEXT,
    title TEXT,
    description TEXT,
    crime against TEXT
);

CREATE TABLE IUCR (
    iucr number TEXT,
    primary description TEXT,
    secondary description TEXT,
    index code TEXT
);

CREATE TABLE Neighborhood (
    neighborhood name TEXT,
    community area number INT
);

CREATE TABLE Ward (
    ward_no INT,
    alderman_first_name TEXT,
    alderman_last_name TEXT,
    alderman_name_suffix TEXT,
    ward_office_address TEXT,
    ward_office_zip TEXT,
    ward_email TEXT,
    ward_office_phone TEXT,
    ward_office_fax TEXT,
    city_hall_office_room INT,
    city_hall_office_phone TEXT,
    city_hall_office_fax TEXT,
    Population INT
);

CREATE TABLE Crime (
    report number INT,
    case number TEXT,
    date TEXT,
    block TEXT,
    Illinois Uniform Crime Reporting number TEXT,
    location description TEXT,
    arrest TEXT,
    domestic TEXT,
    beat INT,
    district number INT,
    ward number INT,
    community area number INT,
    fbi code number TEXT,
    latitude TEXT,
    longitude TEXT
);"
mondial_geo,"borders : Country1 (text), Country2 (text), Length (text) | city : Name (text), Country (text), Province (text), Population (number), Longitude (text), Latitude (text) | continent : Name (text), Area (text) | country : Name (text), Code (text), Capital (text), Province (text), Area (text), Population (number) | desert : Name (text), Area (text), Longitude (text), Latitude (text) | economy : Country (text), gross domestic product (text), Agriculture (text), Service (text), Industry (text), Inflation (text) | encompasses : Country (text), Continent (text), Percentage (text) | ethnicGroup : Country (text), Name (text), Percentage (text) | geo_desert : Desert (text), Country (text), Province (text) | geo_estuary : River (text), Country (text), Province (text) | geo_island : Island (text), Country (text), Province (text) | geo_lake : Lake (text), Country (text), Province (text) | geo_mountain : Mountain (text), Country (text), Province (text) | geo_river : River (text), Country (text), Province (text) | geo_sea : Sea (text), Country (text), Province (text) | geo_source : River (text), Country (text), Province (text) | island : Name (text), Islands (text), Area (text), Height (text), Type (text), Longitude (text), Latitude (text) | islandIn : Island (text), Sea (text), Lake (text), River (text) | isMember : Country (text), Organization (text), Type (text) | lake : Name (text), Area (text), Depth (text), Altitude (text), Type (text), River (text), Longitude (text), Latitude (text) | language : Country (text), Name (text), Percentage (text) | located : City (text), Province (text), Country (text), River (text), Lake (text), Sea (text) | locatedOn : City (text), Province (text), Country (text), Island (text) | mergeswith : Sea1 (text), Sea2 (text) | mountain : Name (text), Mountains (text), Height (text), Type (text), Longitude (text), Latitude (text) | mountainonisland : Mountain (text), Island (text) | organization : Abbreviation (text), Name (text), City (text), Country (text), Province (text), Established (text) | politics : Country (text), Independence (text), Dependent (text), Government (text) | population : Country (text), population growth (text), infant mortality (text) | province : Name (text), Country (text), Population (number), Area (text), Capital (text), capital province (text) | religion : Country (text), Name (text), Percentage (text) | river : Name (text), River (text), Lake (text), Sea (text), Length (text), SourceLongitude (text), SourceLatitude (text), Mountains (text), SourceAltitude (text), EstuaryLongitude (text), EstuaryLatitude (text) | sea : Name (text), Depth (text) | target : Country (text), Target (text)","CREATE TABLE borders (
    Country1 TEXT,
    Country2 TEXT,
    Length TEXT
);

CREATE TABLE city (
    Name TEXT,
    Country TEXT,
    Province TEXT,
    Population INT,
    Longitude TEXT,
    Latitude TEXT
);

CREATE TABLE continent (
    Name TEXT,
    Area TEXT
);

CREATE TABLE country (
    Name TEXT,
    Code TEXT,
    Capital TEXT,
    Province TEXT,
    Area TEXT,
    Population INT
);

CREATE TABLE desert (
    Name TEXT,
    Area TEXT,
    Longitude TEXT,
    Latitude TEXT
);

CREATE TABLE economy (
    Country TEXT,
    gross domestic product TEXT,
    Agriculture TEXT,
    Service TEXT,
    Industry TEXT,
    Inflation TEXT
);

CREATE TABLE encompasses (
    Country TEXT,
    Continent TEXT,
    Percentage TEXT
);

CREATE TABLE ethnicGroup (
    Country TEXT,
    Name TEXT,
    Percentage TEXT
);

CREATE TABLE geo_desert (
    Desert TEXT,
    Country TEXT,
    Province TEXT
);

CREATE TABLE geo_estuary (
    River TEXT,
    Country TEXT,
    Province TEXT
);

CREATE TABLE geo_island (
    Island TEXT,
    Country TEXT,
    Province TEXT
);

CREATE TABLE geo_lake (
    Lake TEXT,
    Country TEXT,
    Province TEXT
);

CREATE TABLE geo_mountain (
    Mountain TEXT,
    Country TEXT,
    Province TEXT
);

CREATE TABLE geo_river (
    River TEXT,
    Country TEXT,
    Province TEXT
);

CREATE TABLE geo_sea (
    Sea TEXT,
    Country TEXT,
    Province TEXT
);

CREATE TABLE geo_source (
    River TEXT,
    Country TEXT,
    Province TEXT
);

CREATE TABLE island (
    Name TEXT,
    Islands TEXT,
    Area TEXT,
    Height TEXT,
    Type TEXT,
    Longitude TEXT,
    Latitude TEXT
);

CREATE TABLE islandIn (
    Island TEXT,
    Sea TEXT,
    Lake TEXT,
    River TEXT
);

CREATE TABLE isMember (
    Country TEXT,
    Organization TEXT,
    Type TEXT
);

CREATE TABLE lake (
    Name TEXT,
    Area TEXT,
    Depth TEXT,
    Altitude TEXT,
    Type TEXT,
    River TEXT,
    Longitude TEXT,
    Latitude TEXT
);

CREATE TABLE language (
    Country TEXT,
    Name TEXT,
    Percentage TEXT
);

CREATE TABLE located (
    City TEXT,
    Province TEXT,
    Country TEXT,
    River TEXT,
    Lake TEXT,
    Sea TEXT
);

CREATE TABLE locatedOn (
    City TEXT,
    Province TEXT,
    Country TEXT,
    Island TEXT
);

CREATE TABLE mergeswith (
    Sea1 TEXT,
    Sea2 TEXT
);

CREATE TABLE mountain (
    Name TEXT,
    Mountains TEXT,
    Height TEXT,
    Type TEXT,
    Longitude TEXT,
    Latitude TEXT
);

CREATE TABLE mountainonisland (
    Mountain TEXT,
    Island TEXT
);

CREATE TABLE organization (
    Abbreviation TEXT,
    Name TEXT,
    City TEXT,
    Country TEXT,
    Province TEXT,
    Established TEXT
);

CREATE TABLE politics (
    Country TEXT,
    Independence TEXT,
    Dependent TEXT,
    Government TEXT
);

CREATE TABLE population (
    Country TEXT,
    population growth TEXT,
    infant mortality TEXT
);

CREATE TABLE province (
    Name TEXT,
    Country TEXT,
    Population INT,
    Area TEXT,
    Capital TEXT,
    capital province TEXT
);

CREATE TABLE religion (
    Country TEXT,
    Name TEXT,
    Percentage TEXT
);

CREATE TABLE river (
    Name TEXT,
    River TEXT,
    Lake TEXT,
    Sea TEXT,
    Length TEXT,
    SourceLongitude TEXT,
    SourceLatitude TEXT,
    Mountains TEXT,
    SourceAltitude TEXT,
    EstuaryLongitude TEXT,
    EstuaryLatitude TEXT
);

CREATE TABLE sea (
    Name TEXT,
    Depth TEXT
);

CREATE TABLE target (
    Country TEXT,
    Target TEXT
);"
student_loan,"bool : name (text) | person : name (text) | disabled : name (text) | enlist : name (text), organization (text) | filed_for_bankruptcy : name (text) | longest_absense_from_school : name (text), month (number) | male : name (text) | no_payment_due : name (text), bool (text) | unemployed : name (text) | enrolled : name (text), school (text), month (number)","CREATE TABLE bool (
    name TEXT
);

CREATE TABLE person (
    name TEXT
);

CREATE TABLE disabled (
    name TEXT
);

CREATE TABLE enlist (
    name TEXT,
    organization TEXT
);

CREATE TABLE filed_for_bankruptcy (
    name TEXT
);

CREATE TABLE longest_absense_from_school (
    name TEXT,
    month INT
);

CREATE TABLE male (
    name TEXT
);

CREATE TABLE no_payment_due (
    name TEXT,
    bool TEXT
);

CREATE TABLE unemployed (
    name TEXT
);

CREATE TABLE enrolled (
    name TEXT,
    school TEXT,
    month INT
);"
codebase_comments,"Method : Id (number), Name (text), Full Comment (text), Summary (text), Api Calls (text), CommentIs Xml (number), Sampled At (number), Solution Id (number), Language (text), Name Tokenized (text) | MethodParameter : Id (number), Method Id (text), Type (text), Name (text) | Repo : Id (number), Url (text), Stars (number), Forks (number), Watchers (number), Processed Time (number) | Solution : Id (number), Repository Id (number), Path (text), Processed Time (number), Was Compiled (number)","CREATE TABLE Method (
    Id INT,
    Name TEXT,
    Full Comment TEXT,
    Summary TEXT,
    Api Calls TEXT,
    CommentIs Xml INT,
    Sampled At INT,
    Solution Id INT,
    Language TEXT,
    Name Tokenized TEXT
);

CREATE TABLE MethodParameter (
    Id INT,
    Method Id TEXT,
    Type TEXT,
    Name TEXT
);

CREATE TABLE Repo (
    Id INT,
    Url TEXT,
    Stars INT,
    Forks INT,
    Watchers INT,
    Processed Time INT
);

CREATE TABLE Solution (
    Id INT,
    Repository Id INT,
    Path TEXT,
    Processed Time INT,
    Was Compiled INT
);"
retail_world,"Categories : Category ID (number), Category Name (text), Description (text) | Customers : Customer ID (number), Customer Name (text), Contact Name (text), Address (text), City (text), Postal Code (text), Country (text) | Employees : Employee ID (number), Last Name (text), First Name (text), Birth Date (text), Photo (text), Notes (text) | Shippers : Shipper ID (number), Shipper Name (text), Phone (text) | Suppliers : Supplier ID (number), Supplier Name (text), Contact Name (text), Address (text), City (text), Postal Code (text), Country (text), Phone (text) | Products : Product ID (number), Product Name (text), Supplier ID (number), Category ID (number), Unit (text), Price (text) | Orders : Order ID (number), Customer ID (number), Employee ID (number), Order Date (text), Shipper ID (number) | OrderDetails : order detail id (number), Order ID (number), Product ID (number), Quantity (number)","CREATE TABLE Categories (
    Category ID INT,
    Category Name TEXT,
    Description TEXT
);

CREATE TABLE Customers (
    Customer ID INT,
    Customer Name TEXT,
    Contact Name TEXT,
    Address TEXT,
    City TEXT,
    Postal Code TEXT,
    Country TEXT
);

CREATE TABLE Employees (
    Employee ID INT,
    Last Name TEXT,
    First Name TEXT,
    Birth Date TEXT,
    Photo TEXT,
    Notes TEXT
);

CREATE TABLE Shippers (
    Shipper ID INT,
    Shipper Name TEXT,
    Phone TEXT
);

CREATE TABLE Suppliers (
    Supplier ID INT,
    Supplier Name TEXT,
    Contact Name TEXT,
    Address TEXT,
    City TEXT,
    Postal Code TEXT,
    Country TEXT,
    Phone TEXT
);

CREATE TABLE Products (
    Product ID INT,
    Product Name TEXT,
    Supplier ID INT,
    Category ID INT,
    Unit TEXT,
    Price TEXT
);

CREATE TABLE Orders (
    Order ID INT,
    Customer ID INT,
    Employee ID INT,
    Order Date TEXT,
    Shipper ID INT
);

CREATE TABLE OrderDetails (
    order detail id INT,
    Order ID INT,
    Product ID INT,
    Quantity INT
);"
music_tracker,"torrents : groupName (text), totalSnatched (number), artist (text), groupYear (number), releaseType (text), groupId (number), id (number) | tags : index (number), id (number), tag (text)","CREATE TABLE torrents (
    groupName TEXT,
    totalSnatched INT,
    artist TEXT,
    groupYear INT,
    releaseType TEXT,
    groupId INT,
    id INT
);

CREATE TABLE tags (
    index INT,
    id INT,
    tag TEXT
);"
disney,"characters : movie title (text), release date (text), hero (text), villian (text), song (text) | director : name (text), director (text) | movies_total_gross : movie title (text), release date (text), genre (text), Motion Picture Association of America rating (text), total gross (text), inflation adjusted gross (text) | revenue : Year (number), Studio Entertainment[NI 1] (text), Disney Consumer Products[NI 2] (text), Disney Interactive[NI 3][Rev 1] (number), Walt Disney Parks and Resorts (text), Disney Media Networks (text), Total (number) | voice-actors : character (text), voice-actor (text), movie (text)","CREATE TABLE characters (
    movie title TEXT,
    release date TEXT,
    hero TEXT,
    villian TEXT,
    song TEXT
);

CREATE TABLE director (
    name TEXT,
    director TEXT
);

CREATE TABLE movies_total_gross (
    movie title TEXT,
    release date TEXT,
    genre TEXT,
    Motion Picture Association of America rating TEXT,
    total gross TEXT,
    inflation adjusted gross TEXT
);

CREATE TABLE revenue (
    Year INT,
    Studio Entertainment[NI 1] TEXT,
    Disney Consumer Products[NI 2] TEXT,
    Disney Interactive[NI 3][Rev 1] INT,
    Walt Disney Parks and Resorts TEXT,
    Disney Media Networks TEXT,
    Total INT
);

CREATE TABLE voice-actors (
    character TEXT,
    voice-actor TEXT,
    movie TEXT
);"
college_completion,"institution_details : Unit ID number (number), chronname (text), city (text), state (text), level (text), control (text), basic (text), Historically Black College and Universities (text), flagship (text), long_x (text), lat_y (text), site (text), student count (number), awards per value (text), awards per state value (text), awards per national value (text), expected award value (number), expected award state value (number), expected award national value (number), exp_award_percentile (number), Full-time percentage (text), Full-time percentage (number), fte_percentile (number), median SAT value (text), median SAT percentile (text), aid value (number), aid percentile (number), endow value (text), endow percentile (text), graduation 100 value (text), graduation 100 percentile (number), graduation 150 value (text), graduation 150 percentile (number), pell value (text), pell percentile (number), retain value (text), retain percentile (number), full time faculty value (text), full time faculty percentile (number), voluntary system of accountability year (text), voluntary system of accountability after 4 year first time (text), voluntary system of accountability graduation elsewhere after 4 year first time (text), voluntary system of accountability enrollment after 4 year first time (text), voluntary system of accountability enrollment elsewhere after 4 year first time (text), voluntary system of accountability graduation elsewhere after 6 year first time (text), voluntary system of accountability graduation elsewhere after 6 year first time (text), voluntary system of accountability enrollment after 6 year first time (text), voluntary system of accountability enrollment elsewhere after 6 year first time (text), voluntary system of accountability transfer after 6 year first time (text), voluntary system of accountability graduation elsewhere after 4 year (text), voluntary system of accountability enrollment after 4 years transfer (text), voluntary system of accountability enrollment elsewhere after 4 years transfer (text), voluntary system of accountability enrollment elsewhere after 6 years transfer (text), voluntary system of accountability graduation elsewhere after 6 years transfer (text), voluntary system of accountability enrollment after 6 years transfer (text), voluntary system of accountability enrollment elsewhere after 6 years transfer (text), similar (text), state_sector_ct (number), carnegie_ct (number), counted_pct (text), nicknames (text), cohort_size (number) | institution_grads : unit id (number), year (number), gender (text), race (text), cohort (text), graduation cohort (text), graduation 100 (text), graduation 150 (text), grad_100_rate (text), grad_150_rate (text) | state_sector_grads : state id (number), state name (text), state_abbr (text), control (text), level (text), year (number), gender (text), race (text), cohort (text), graduation cohort (text), graduation 100 (text), graduation 150 (text), grad_100_rate (text), grad_150_rate (text), graduation cohort count (number) | state_sector_details : state id (number), state name (text), state_post (text), level (text), control (text), schools_count (number), counted percentage (text), awards per state value (text), awards per national value (text), expected award state value (text), expected award national value (number), state appropriation value (text), state_appr_rank (text), grad_rate_rank (text), awards_per_rank (text)","CREATE TABLE institution_details (
    Unit ID number INT,
    chronname TEXT,
    city TEXT,
    state TEXT,
    level TEXT,
    control TEXT,
    basic TEXT,
    Historically Black College and Universities TEXT,
    flagship TEXT,
    long_x TEXT,
    lat_y TEXT,
    site TEXT,
    student count INT,
    awards per value TEXT,
    awards per state value TEXT,
    awards per national value TEXT,
    expected award value INT,
    expected award state value INT,
    expected award national value INT,
    exp_award_percentile INT,
    Full-time percentage TEXT,
    Full-time percentage INT,
    fte_percentile INT,
    median SAT value TEXT,
    median SAT percentile TEXT,
    aid value INT,
    aid percentile INT,
    endow value TEXT,
    endow percentile TEXT,
    graduation 100 value TEXT,
    graduation 100 percentile INT,
    graduation 150 value TEXT,
    graduation 150 percentile INT,
    pell value TEXT,
    pell percentile INT,
    retain value TEXT,
    retain percentile INT,
    full time faculty value TEXT,
    full time faculty percentile INT,
    voluntary system of accountability year TEXT,
    voluntary system of accountability after 4 year first time TEXT,
    voluntary system of accountability graduation elsewhere after 4 year first time TEXT,
    voluntary system of accountability enrollment after 4 year first time TEXT,
    voluntary system of accountability enrollment elsewhere after 4 year first time TEXT,
    voluntary system of accountability graduation elsewhere after 6 year first time TEXT,
    voluntary system of accountability graduation elsewhere after 6 year first time TEXT,
    voluntary system of accountability enrollment after 6 year first time TEXT,
    voluntary system of accountability enrollment elsewhere after 6 year first time TEXT,
    voluntary system of accountability transfer after 6 year first time TEXT,
    voluntary system of accountability graduation elsewhere after 4 year TEXT,
    voluntary system of accountability enrollment after 4 years transfer TEXT,
    voluntary system of accountability enrollment elsewhere after 4 years transfer TEXT,
    voluntary system of accountability enrollment elsewhere after 6 years transfer TEXT,
    voluntary system of accountability graduation elsewhere after 6 years transfer TEXT,
    voluntary system of accountability enrollment after 6 years transfer TEXT,
    voluntary system of accountability enrollment elsewhere after 6 years transfer TEXT,
    similar TEXT,
    state_sector_ct INT,
    carnegie_ct INT,
    counted_pct TEXT,
    nicknames TEXT,
    cohort_size INT
);

CREATE TABLE institution_grads (
    unit id INT,
    year INT,
    gender TEXT,
    race TEXT,
    cohort TEXT,
    graduation cohort TEXT,
    graduation 100 TEXT,
    graduation 150 TEXT,
    grad_100_rate TEXT,
    grad_150_rate TEXT
);

CREATE TABLE state_sector_grads (
    state id INT,
    state name TEXT,
    state_abbr TEXT,
    control TEXT,
    level TEXT,
    year INT,
    gender TEXT,
    race TEXT,
    cohort TEXT,
    graduation cohort TEXT,
    graduation 100 TEXT,
    graduation 150 TEXT,
    grad_100_rate TEXT,
    grad_150_rate TEXT,
    graduation cohort count INT
);

CREATE TABLE state_sector_details (
    state id INT,
    state name TEXT,
    state_post TEXT,
    level TEXT,
    control TEXT,
    schools_count INT,
    counted percentage TEXT,
    awards per state value TEXT,
    awards per national value TEXT,
    expected award state value TEXT,
    expected award national value INT,
    state appropriation value TEXT,
    state_appr_rank TEXT,
    grad_rate_rank TEXT,
    awards_per_rank TEXT
);"
ice_hockey_draft,"height_info : height id (number), height in cm (number), height in inch (text) | weight_info : weight id (number), weight in kg (number), weight in lbs (number) | PlayerInfo : ELITE ID (number), Player Name (text), birthdate (text), birthyear (text), birthmonth (number), birthday (number), birthplace (text), nation (text), height (number), weight (number), position information (text), shoots (text), draft year (number), draft round (number), overall (number), overallby (text), Central Scouting Service ranking (number), sum 7-year game plays (number), sum 7-year time on ice (number), game play greater than 0 (text) | SeasonStatus : ELITE ID (number), SEASON (text), TEAM (text), LEAGUE (text), GAME TYPE (text), Game Plays (number), G (number), A (number), P (number), Penalty Minutes (number), Plus Minutes (number)","CREATE TABLE height_info (
    height id INT,
    height in cm INT,
    height in inch TEXT
);

CREATE TABLE weight_info (
    weight id INT,
    weight in kg INT,
    weight in lbs INT
);

CREATE TABLE PlayerInfo (
    ELITE ID INT,
    Player Name TEXT,
    birthdate TEXT,
    birthyear TEXT,
    birthmonth INT,
    birthday INT,
    birthplace TEXT,
    nation TEXT,
    height INT,
    weight INT,
    position information TEXT,
    shoots TEXT,
    draft year INT,
    draft round INT,
    overall INT,
    overallby TEXT,
    Central Scouting Service ranking INT,
    sum 7-year game plays INT,
    sum 7-year time on ice INT,
    game play greater than 0 TEXT
);

CREATE TABLE SeasonStatus (
    ELITE ID INT,
    SEASON TEXT,
    TEAM TEXT,
    LEAGUE TEXT,
    GAME TYPE TEXT,
    Game Plays INT,
    G INT,
    A INT,
    P INT,
    Penalty Minutes INT,
    Plus Minutes INT
);"
world_development_indicators,"Country : Country Code (text), Short Name (text), Table Name (text), Long Name (text), Alpha to Code (text), Currency Unit (text), Special Notes (text), Region (text), Income Group (text), world bank to code (text), National Accounts Base Year (text), National Accounts Reference Year (text), SNA Price Valuation (text), Lending Category (text), Other groups (text), System Of National Accounts (text), Alternative Conversion Factor (text), purchasing power parity survey year (text), Balance Of Payments Manual In Use (text), External Debt Reporting Status (text), System Of Trade (text), Government Accounting Concept (text), International Monetory Fund Data Dissemination Standard (text), Latest Population Census (text), Latest Household Survey (text), Source Of Most Recent Income And Expenditure Data (text), Vital Registration Complete (text), Latest Agricultural Census (text), Latest Industrial Data (number), Latest Trade Data (number), Latest Water Withdrawal Data (number) | Series : Series Code (text), Topic (text), Indicator Name (text), Short Definition (text), Long Definition (text), Unit Of Measure (text), Periodicity (text), Base Period (text), Other Notes (number), Aggregation Method (text), Limitations And Exceptions (text), Notes From Original Source (text), General Comments (text), Source (text), Statistical Concept And Methodology (text), Development Relevance (text), Related Source Links (text), Other Web Links (number), Related Indicators (number), License Type (text) | CountryNotes : Country code (text), Series code (text), Description (text) | FootNotes : Country code (text), Series code (text), Year (text), Description (text) | Indicators : Country code (text), Series code (text), Indicator Name (text), Indicator Code (text), Year (number), Value (number) | SeriesNotes : Series code (text), Year (text), Description (text)","CREATE TABLE Country (
    Country Code TEXT,
    Short Name TEXT,
    Table Name TEXT,
    Long Name TEXT,
    Alpha to Code TEXT,
    Currency Unit TEXT,
    Special Notes TEXT,
    Region TEXT,
    Income Group TEXT,
    world bank to code TEXT,
    National Accounts Base Year TEXT,
    National Accounts Reference Year TEXT,
    SNA Price Valuation TEXT,
    Lending Category TEXT,
    Other groups TEXT,
    System Of National Accounts TEXT,
    Alternative Conversion Factor TEXT,
    purchasing power parity survey year TEXT,
    Balance Of Payments Manual In Use TEXT,
    External Debt Reporting Status TEXT,
    System Of Trade TEXT,
    Government Accounting Concept TEXT,
    International Monetory Fund Data Dissemination Standard TEXT,
    Latest Population Census TEXT,
    Latest Household Survey TEXT,
    Source Of Most Recent Income And Expenditure Data TEXT,
    Vital Registration Complete TEXT,
    Latest Agricultural Census TEXT,
    Latest Industrial Data INT,
    Latest Trade Data INT,
    Latest Water Withdrawal Data INT
);

CREATE TABLE Series (
    Series Code TEXT,
    Topic TEXT,
    Indicator Name TEXT,
    Short Definition TEXT,
    Long Definition TEXT,
    Unit Of Measure TEXT,
    Periodicity TEXT,
    Base Period TEXT,
    Other Notes INT,
    Aggregation Method TEXT,
    Limitations And Exceptions TEXT,
    Notes From Original Source TEXT,
    General Comments TEXT,
    Source TEXT,
    Statistical Concept And Methodology TEXT,
    Development Relevance TEXT,
    Related Source Links TEXT,
    Other Web Links INT,
    Related Indicators INT,
    License Type TEXT
);

CREATE TABLE CountryNotes (
    Country code TEXT,
    Series code TEXT,
    Description TEXT
);

CREATE TABLE FootNotes (
    Country code TEXT,
    Series code TEXT,
    Year TEXT,
    Description TEXT
);

CREATE TABLE Indicators (
    Country code TEXT,
    Series code TEXT,
    Indicator Name TEXT,
    Indicator Code TEXT,
    Year INT,
    Value INT
);

CREATE TABLE SeriesNotes (
    Series code TEXT,
    Year TEXT,
    Description TEXT
);"
airline,"Air Carriers : Code (number), Description (text) | Airports : Code (text), Description (text) | Airlines : flight date (text), operator carrier airline id (number), tail number (text), operator carrier flight number (number), origin airport id (number), origin airport sequence id (number), origin city market id (number), ORIGIN (text), destination airport id (number), destination airport sequence id (number), destination city market id (number), destination (text), scheduled local departure time (number), departure time (number), Departure delay (number), departure delay new (number), arrival time (number), arrival delay (number), arrival delay new (number), CANCELLED (number), cancellation code (text), scheduled elapsed time (number), actual elapsed time (number), carrier delay (number), weather delay (number), National Aviavtion System delay (number), security delay (number), late aircraft delay (number)","CREATE TABLE Air Carriers (
    Code INT,
    Description TEXT
);

CREATE TABLE Airports (
    Code TEXT,
    Description TEXT
);

CREATE TABLE Airlines (
    flight date TEXT,
    operator carrier airline id INT,
    tail number TEXT,
    operator carrier flight number INT,
    origin airport id INT,
    origin airport sequence id INT,
    origin city market id INT,
    ORIGIN TEXT,
    destination airport id INT,
    destination airport sequence id INT,
    destination city market id INT,
    destination TEXT,
    scheduled local departure time INT,
    departure time INT,
    Departure delay INT,
    departure delay new INT,
    arrival time INT,
    arrival delay INT,
    arrival delay new INT,
    CANCELLED INT,
    cancellation code TEXT,
    scheduled elapsed time INT,
    actual elapsed time INT,
    carrier delay INT,
    weather delay INT,
    National Aviavtion System delay INT,
    security delay INT,
    late aircraft delay INT
);"
retail_complains,"state : StateCode (text), State (text), Region (text) | callcenterlogs : Date received (text), Complaint ID (text), rand client (text), phone final (text), voice response unit line (text), call id (number), priority (number), type (text), outcome (text), server (text), server start (text), server exit (text), server time (text) | client : client id (text), sex (text), day (number), month (number), year (number), age (number), social (text), first (text), middle (text), last (text), phone (text), email (text), address_1 (text), address_2 (text), city (text), state (text), zipcode (number), district id (number) | district : district id (number), city (text), state_abbrev (text), division (text) | events : Date received (text), Product (text), Sub-product (text), Issue (text), Sub-issue (text), Consumer complaint narrative (text), Tags (text), Tags Consumer consent provided? (text), Submitted via (text), Date sent to company (text), Company response to consumer (text), Timely response? (text), Consumer disputed? (text), Complaint ID (text), Client ID (text) | reviews : Date (text), Stars (number), Reviews (text), Product (text), district_id (number)","CREATE TABLE state (
    StateCode TEXT,
    State TEXT,
    Region TEXT
);

CREATE TABLE callcenterlogs (
    Date received TEXT,
    Complaint ID TEXT,
    rand client TEXT,
    phone final TEXT,
    voice response unit line TEXT,
    call id INT,
    priority INT,
    type TEXT,
    outcome TEXT,
    server TEXT,
    server start TEXT,
    server exit TEXT,
    server time TEXT
);

CREATE TABLE client (
    client id TEXT,
    sex TEXT,
    day INT,
    month INT,
    year INT,
    age INT,
    social TEXT,
    first TEXT,
    middle TEXT,
    last TEXT,
    phone TEXT,
    email TEXT,
    address_1 TEXT,
    address_2 TEXT,
    city TEXT,
    state TEXT,
    zipcode INT,
    district id INT
);

CREATE TABLE district (
    district id INT,
    city TEXT,
    state_abbrev TEXT,
    division TEXT
);

CREATE TABLE events (
    Date received TEXT,
    Product TEXT,
    Sub-product TEXT,
    Issue TEXT,
    Sub-issue TEXT,
    Consumer complaint narrative TEXT,
    Tags TEXT,
    Tags Consumer consent provided? TEXT,
    Submitted via TEXT,
    Date sent to company TEXT,
    Company response to consumer TEXT,
    Timely response? TEXT,
    Consumer disputed? TEXT,
    Complaint ID TEXT,
    Client ID TEXT
);

CREATE TABLE reviews (
    Date TEXT,
    Stars INT,
    Reviews TEXT,
    Product TEXT,
    district_id INT
);"
trains,"cars : id (number), train id (number), position (number), shape (text), length (text), sides (text), roof (text), wheels (number), load_shape (text), load number (number) | trains : id (number), direction (text)","CREATE TABLE cars (
    id INT,
    train id INT,
    position INT,
    shape TEXT,
    length TEXT,
    sides TEXT,
    roof TEXT,
    wheels INT,
    load_shape TEXT,
    load number INT
);

CREATE TABLE trains (
    id INT,
    direction TEXT
);"
public_review_platform,"Attributes : attribute id (number), attribute name (text) | Categories : category id (number), category name (text) | Compliments : compliment id (number), compliment type (text) | Days : day id (number), day of week (text) | Years : year id (number), actual year (number) | Business_Attributes : attribute id (number), business id (number), attribute value (text) | Business_Categories : business id (number), category id (number) | Business_Hours : business id (number), day id (number), opening time (text), closing time (text) | Checkins : business id (number), day id (number), label_time_0 (text), label_time_1 (text), label_time_2 (text), label_time_3 (text), label_time_4 (text), label_time_5 (text), label_time_6 (text), label_time_7 (text), label_time_8 (text), label_time_9 (text), label_time_10 (text), label_time_11 (text), label_time_12 (text), label_time_13 (text), label_time_14 (text), label_time_15 (text), label_time_16 (text), label_time_17 (text), label_time_18 (text), label_time_19 (text), label_time_20 (text), label_time_21 (text), label_time_22 (text), label_time_23 (text) | Elite : user id (number), year id (number) | Reviews : business id (number), user id (number), review stars (number), review votes funny (text), review votes useful (text), review votes cool (text), review length (text) | Tips : business id (number), user id (number), Likes (number), tip length (text) | Users_Compliments : compliment id (number), user id (number), number of compliments (text) | Business : business id (number), active (text), city (text), state (text), stars (text), review count (text) | Users : user id (number), user yelping since year (number), user average stars (text), user votes funny (text), user votes useful (text), user votes cool (text), user review count (text), user fans (text)","CREATE TABLE Attributes (
    attribute id INT,
    attribute name TEXT
);

CREATE TABLE Categories (
    category id INT,
    category name TEXT
);

CREATE TABLE Compliments (
    compliment id INT,
    compliment type TEXT
);

CREATE TABLE Days (
    day id INT,
    day of week TEXT
);

CREATE TABLE Years (
    year id INT,
    actual year INT
);

CREATE TABLE Business_Attributes (
    attribute id INT,
    business id INT,
    attribute value TEXT
);

CREATE TABLE Business_Categories (
    business id INT,
    category id INT
);

CREATE TABLE Business_Hours (
    business id INT,
    day id INT,
    opening time TEXT,
    closing time TEXT
);

CREATE TABLE Checkins (
    business id INT,
    day id INT,
    label_time_0 TEXT,
    label_time_1 TEXT,
    label_time_2 TEXT,
    label_time_3 TEXT,
    label_time_4 TEXT,
    label_time_5 TEXT,
    label_time_6 TEXT,
    label_time_7 TEXT,
    label_time_8 TEXT,
    label_time_9 TEXT,
    label_time_10 TEXT,
    label_time_11 TEXT,
    label_time_12 TEXT,
    label_time_13 TEXT,
    label_time_14 TEXT,
    label_time_15 TEXT,
    label_time_16 TEXT,
    label_time_17 TEXT,
    label_time_18 TEXT,
    label_time_19 TEXT,
    label_time_20 TEXT,
    label_time_21 TEXT,
    label_time_22 TEXT,
    label_time_23 TEXT
);

CREATE TABLE Elite (
    user id INT,
    year id INT
);

CREATE TABLE Reviews (
    business id INT,
    user id INT,
    review stars INT,
    review votes funny TEXT,
    review votes useful TEXT,
    review votes cool TEXT,
    review length TEXT
);

CREATE TABLE Tips (
    business id INT,
    user id INT,
    Likes INT,
    tip length TEXT
);

CREATE TABLE Users_Compliments (
    compliment id INT,
    user id INT,
    number of compliments TEXT
);

CREATE TABLE Business (
    business id INT,
    active TEXT,
    city TEXT,
    state TEXT,
    stars TEXT,
    review count TEXT
);

CREATE TABLE Users (
    user id INT,
    user yelping since year INT,
    user average stars TEXT,
    user votes funny TEXT,
    user votes useful TEXT,
    user votes cool TEXT,
    user review count TEXT,
    user fans TEXT
);"
donor,"essays : project id (text), teacher acctid (text), title (text), short description (text), need statement (text), essay (text) | projects : project id (text), teacher_acctid (text), schoolid (text), school national center for education statistics id (text), school latitude (text), school longitude (text), school city (text), school state (text), school zip (number), school metro (text), school district (text), school county (text), school charter (text), school magnet (text), school year round (text), school Nonleafy Normal Stature (text), school Knowledge Is Power Program (text), school charter ready promise (text), teacher prefix (text), teachers teach for america (text), teacher_new_york_teaching_fellow (text), primary focus subject (text), primary focus area (text), secondary focus subject (text), secondary focus area (text), resource type (text), poverty level (text), grade level (text), fulfillment labor materials (text), total price excluding optional support (text), total price including optional support (text), students reached (number), eligible double your impact match (text), eligible almost home match (text), date posted (text) | donations : donation id (text), project id (text), donor accid (text), donor city (text), donor state (text), donor zip (text), is teacher acct (text), donation timestamp (text), donation to project (text), donation optional support (text), donation total (text), dollar amount (text), donation included optional support (text), payment method (text), payment included acct credit (text), payment included campaign gift card (text), payment included web purchased gift card (text), payment was promo matched (text), via giving page (text), for honoree (text), donation message (text) | resources : resource id (text), project id (text), vendor id (number), vendor name (text), project resource type (text), item name (text), item number (text), item unit price (text), item quantity (number)","CREATE TABLE essays (
    project id TEXT,
    teacher acctid TEXT,
    title TEXT,
    short description TEXT,
    need statement TEXT,
    essay TEXT
);

CREATE TABLE projects (
    project id TEXT,
    teacher_acctid TEXT,
    schoolid TEXT,
    school national center for education statistics id TEXT,
    school latitude TEXT,
    school longitude TEXT,
    school city TEXT,
    school state TEXT,
    school zip INT,
    school metro TEXT,
    school district TEXT,
    school county TEXT,
    school charter TEXT,
    school magnet TEXT,
    school year round TEXT,
    school Nonleafy Normal Stature TEXT,
    school Knowledge Is Power Program TEXT,
    school charter ready promise TEXT,
    teacher prefix TEXT,
    teachers teach for america TEXT,
    teacher_new_york_teaching_fellow TEXT,
    primary focus subject TEXT,
    primary focus area TEXT,
    secondary focus subject TEXT,
    secondary focus area TEXT,
    resource type TEXT,
    poverty level TEXT,
    grade level TEXT,
    fulfillment labor materials TEXT,
    total price excluding optional support TEXT,
    total price including optional support TEXT,
    students reached INT,
    eligible double your impact match TEXT,
    eligible almost home match TEXT,
    date posted TEXT
);

CREATE TABLE donations (
    donation id TEXT,
    project id TEXT,
    donor accid TEXT,
    donor city TEXT,
    donor state TEXT,
    donor zip TEXT,
    is teacher acct TEXT,
    donation timestamp TEXT,
    donation to project TEXT,
    donation optional support TEXT,
    donation total TEXT,
    dollar amount TEXT,
    donation included optional support TEXT,
    payment method TEXT,
    payment included acct credit TEXT,
    payment included campaign gift card TEXT,
    payment included web purchased gift card TEXT,
    payment was promo matched TEXT,
    via giving page TEXT,
    for honoree TEXT,
    donation message TEXT
);

CREATE TABLE resources (
    resource id TEXT,
    project id TEXT,
    vendor id INT,
    vendor name TEXT,
    project resource type TEXT,
    item name TEXT,
    item number TEXT,
    item unit price TEXT,
    item quantity INT
);"
coinmarketcap,"Coins : id (number), name (text), slug (text), symbol (text), status (text), category (text), description (text), subreddit (text), notice (text), tags (text), tag_names (text), website (text), platform id (number), date added (text), date lanched (text) | Historical : date (text), coin_id (number), coinmarketcap rank (number), Market capitalization (text), price (text), open (text), high (text), low (text), close (text), time_high (text), time_low (text), volume_24h (text), percent change 1h (text), percent change 24h (text), percent change 7d (text), circulating supply (text), total supply (text), max supply (text), number market pairs (number)","CREATE TABLE Coins (
    id INT,
    name TEXT,
    slug TEXT,
    symbol TEXT,
    status TEXT,
    category TEXT,
    description TEXT,
    subreddit TEXT,
    notice TEXT,
    tags TEXT,
    tag_names TEXT,
    website TEXT,
    platform id INT,
    date added TEXT,
    date lanched TEXT
);

CREATE TABLE Historical (
    date TEXT,
    coin_id INT,
    coinmarketcap rank INT,
    Market capitalization TEXT,
    price TEXT,
    open TEXT,
    high TEXT,
    low TEXT,
    close TEXT,
    time_high TEXT,
    time_low TEXT,
    volume_24h TEXT,
    percent change 1h TEXT,
    percent change 24h TEXT,
    percent change 7d TEXT,
    circulating supply TEXT,
    total supply TEXT,
    max supply TEXT,
    number market pairs INT
);"
simpson_episodes,"Episode : episode id (text), season (number), episode (number), number in series (number), title (text), summary (text), air date (text), episode image (text), rating (text), votes (number) | Person : name (text), birth date (text), birth name (text), birth place (text), birth region (text), birth country (text), height meters (text), nickname (text) | Award : award id (number), organization (text), year (number), award_category (text), award (text), person (text), role (text), episode id (text), season (text), song (text), result (text) | Character_Award : award id (number), character (text) | Credit : episode id (text), category (text), person (text), role (text), credited (text) | Keyword : episode id (text), keyword (text) | Vote : episode id (text), stars (number), votes (number), percent (text)","CREATE TABLE Episode (
    episode id TEXT,
    season INT,
    episode INT,
    number in series INT,
    title TEXT,
    summary TEXT,
    air date TEXT,
    episode image TEXT,
    rating TEXT,
    votes INT
);

CREATE TABLE Person (
    name TEXT,
    birth date TEXT,
    birth name TEXT,
    birth place TEXT,
    birth region TEXT,
    birth country TEXT,
    height meters TEXT,
    nickname TEXT
);

CREATE TABLE Award (
    award id INT,
    organization TEXT,
    year INT,
    award_category TEXT,
    award TEXT,
    person TEXT,
    role TEXT,
    episode id TEXT,
    season TEXT,
    song TEXT,
    result TEXT
);

CREATE TABLE Character_Award (
    award id INT,
    character TEXT
);

CREATE TABLE Credit (
    episode id TEXT,
    category TEXT,
    person TEXT,
    role TEXT,
    credited TEXT
);

CREATE TABLE Keyword (
    episode id TEXT,
    keyword TEXT
);

CREATE TABLE Vote (
    episode id TEXT,
    stars INT,
    votes INT,
    percent TEXT
);"
movie_3,"film_text : film id (number), title (text), description (text) | actor : actor id (number), first name (text), last name (text), last update (text) | address : address id (number), address (text), address 2 (text), district (text), city_id (number), postal code (text), phone (text), last update (text) | category : category id (number), name (text), last update (text) | city : city id (number), city (text), country id (number), last update (text) | country : country id (number), the name of the country (text), last update (text) | customer : country id (number), store id (number), first name (text), last name (text), email (text), address id (number), active (number), create date (text), last update (text) | film : film id (number), title (text), description (text), release year (text), language id (number), original language id (number), rental duration (number), rental rate (text), length (number), replacement cost (text), rating (text), special features (text), last update (text) | film_actor : actor id (number), film id (number), last update (text) | film_category : film id (number), category id (number), last update (text) | inventory : inventory id (number), film id (number), store id (number), last update (text) | language : language id (number), name (text), last update (text) | payment : payment id (number), customer id (number), staff id (number), rental id (number), amount (text), payment date (text), last update (text) | rental : rental id (number), rental date (text), inventory id (number), customer id (number), return date (text), staff id (number), last update (text) | staff : staff id (number), first name (text), last name (text), address id (number), picture of the staff (text), email of the staff (text), store id (number), active (number), username (text), password (text), last update (text) | store : store id (number), manager staff id (number), address id (number), last update (text)","CREATE TABLE film_text (
    film id INT,
    title TEXT,
    description TEXT
);

CREATE TABLE actor (
    actor id INT,
    first name TEXT,
    last name TEXT,
    last update TEXT
);

CREATE TABLE address (
    address id INT,
    address TEXT,
    address 2 TEXT,
    district TEXT,
    city_id INT,
    postal code TEXT,
    phone TEXT,
    last update TEXT
);

CREATE TABLE category (
    category id INT,
    name TEXT,
    last update TEXT
);

CREATE TABLE city (
    city id INT,
    city TEXT,
    country id INT,
    last update TEXT
);

CREATE TABLE country (
    country id INT,
    the name of the country TEXT,
    last update TEXT
);

CREATE TABLE customer (
    country id INT,
    store id INT,
    first name TEXT,
    last name TEXT,
    email TEXT,
    address id INT,
    active INT,
    create date TEXT,
    last update TEXT
);

CREATE TABLE film (
    film id INT,
    title TEXT,
    description TEXT,
    release year TEXT,
    language id INT,
    original language id INT,
    rental duration INT,
    rental rate TEXT,
    length INT,
    replacement cost TEXT,
    rating TEXT,
    special features TEXT,
    last update TEXT
);

CREATE TABLE film_actor (
    actor id INT,
    film id INT,
    last update TEXT
);

CREATE TABLE film_category (
    film id INT,
    category id INT,
    last update TEXT
);

CREATE TABLE inventory (
    inventory id INT,
    film id INT,
    store id INT,
    last update TEXT
);

CREATE TABLE language (
    language id INT,
    name TEXT,
    last update TEXT
);

CREATE TABLE payment (
    payment id INT,
    customer id INT,
    staff id INT,
    rental id INT,
    amount TEXT,
    payment date TEXT,
    last update TEXT
);

CREATE TABLE rental (
    rental id INT,
    rental date TEXT,
    inventory id INT,
    customer id INT,
    return date TEXT,
    staff id INT,
    last update TEXT
);

CREATE TABLE staff (
    staff id INT,
    first name TEXT,
    last name TEXT,
    address id INT,
    picture of the staff TEXT,
    email of the staff TEXT,
    store id INT,
    active INT,
    username TEXT,
    password TEXT,
    last update TEXT
);

CREATE TABLE store (
    store id INT,
    manager staff id INT,
    address id INT,
    last update TEXT
);"
shooting,"Incidents : case number (text), date (text), location (text), subject statuses (text), subject weapon (text), subjects (text), subject_count (number), officers (text) | officers : case number (text), race (text), gender (text), last name (text), first name (text), full name (text) | subjects : case number (text), race (text), gender (text), last name (text), first name (text), full name (text)","CREATE TABLE Incidents (
    case number TEXT,
    date TEXT,
    location TEXT,
    subject statuses TEXT,
    subject weapon TEXT,
    subjects TEXT,
    subject_count INT,
    officers TEXT
);

CREATE TABLE officers (
    case number TEXT,
    race TEXT,
    gender TEXT,
    last name TEXT,
    first name TEXT,
    full name TEXT
);

CREATE TABLE subjects (
    case number TEXT,
    race TEXT,
    gender TEXT,
    last name TEXT,
    first name TEXT,
    full name TEXT
);"
superstore,"people : Customer ID (text), Customer Name (text), Segment (text), Country (text), City (text), State (text), Postal Code (number), Region (text) | product : Product ID (text), Product Name (text), Category (text), Sub-Category (text), Region (text) | central_superstore : row id (number), order id (text), order date (text), ship date (text), ship mode (text), customer id (text), Region (text), product id (text), Sales (text), Quantity (number), Discount (text), Profit (text) | east_superstore : row id (number), order id (text), order date (text), ship date (text), ship mode (text), customer id (text), Region (text), product id (text), Sales (text), Quantity (number), Discount (text), Profit (text) | south_superstore : row id (number), order id (text), order date (text), ship date (text), ship mode (text), customer id (text), Region (text), product id (text), Sales (text), Quantity (number), Discount (text), Profit (text) | west_superstore : row id (number), order id (text), order date (text), ship date (text), ship mode (text), customer id (text), Region (text), product id (text), Sales (text), Quantity (number), Discount (text), Profit (text)","CREATE TABLE people (
    Customer ID TEXT,
    Customer Name TEXT,
    Segment TEXT,
    Country TEXT,
    City TEXT,
    State TEXT,
    Postal Code INT,
    Region TEXT
);

CREATE TABLE product (
    Product ID TEXT,
    Product Name TEXT,
    Category TEXT,
    Sub-Category TEXT,
    Region TEXT
);

CREATE TABLE central_superstore (
    row id INT,
    order id TEXT,
    order date TEXT,
    ship date TEXT,
    ship mode TEXT,
    customer id TEXT,
    Region TEXT,
    product id TEXT,
    Sales TEXT,
    Quantity INT,
    Discount TEXT,
    Profit TEXT
);

CREATE TABLE east_superstore (
    row id INT,
    order id TEXT,
    order date TEXT,
    ship date TEXT,
    ship mode TEXT,
    customer id TEXT,
    Region TEXT,
    product id TEXT,
    Sales TEXT,
    Quantity INT,
    Discount TEXT,
    Profit TEXT
);

CREATE TABLE south_superstore (
    row id INT,
    order id TEXT,
    order date TEXT,
    ship date TEXT,
    ship mode TEXT,
    customer id TEXT,
    Region TEXT,
    product id TEXT,
    Sales TEXT,
    Quantity INT,
    Discount TEXT,
    Profit TEXT
);

CREATE TABLE west_superstore (
    row id INT,
    order id TEXT,
    order date TEXT,
    ship date TEXT,
    ship mode TEXT,
    customer id TEXT,
    Region TEXT,
    product id TEXT,
    Sales TEXT,
    Quantity INT,
    Discount TEXT,
    Profit TEXT
);"
movielens,"users : user id (number), age (text), user gender (text), occupation (text) | directors : director id (number), director quality (number), average revenue (number) | actors : actor id (number), actor gender (text), actor quality (number) | movies : movie id (number), year (number), is English (text), country (text), runningtime (number) | movies2actors : movie id (number), actor id (number), cast number (number) | movies2directors : movie id (number), director id (number), genre (text) | u2base : user id (number), movie id (number), rating (text)","CREATE TABLE users (
    user id INT,
    age TEXT,
    user gender TEXT,
    occupation TEXT
);

CREATE TABLE directors (
    director id INT,
    director quality INT,
    average revenue INT
);

CREATE TABLE actors (
    actor id INT,
    actor gender TEXT,
    actor quality INT
);

CREATE TABLE movies (
    movie id INT,
    year INT,
    is English TEXT,
    country TEXT,
    runningtime INT
);

CREATE TABLE movies2actors (
    movie id INT,
    actor id INT,
    cast number INT
);

CREATE TABLE movies2directors (
    movie id INT,
    director id INT,
    genre TEXT
);

CREATE TABLE u2base (
    user id INT,
    movie id INT,
    rating TEXT
);"
debit_card_specializing,"customers : CustomerID (number), client segment (text), Currency (text) | gasstations : Gas Station ID (number), Chain ID (number), Country (text), chain segment (text) | products : Product ID (number), Description (text) | transactions_1k : Transaction ID (number), Date (text), Time (text), Customer ID (number), Card ID (number), Gas Station ID (number), Product ID (number), Amount (number), Price (text) | yearmonth : Customer ID (number), Date (text), Consumption (text)","CREATE TABLE customers (
    CustomerID INT,
    client segment TEXT,
    Currency TEXT
);

CREATE TABLE gasstations (
    Gas Station ID INT,
    Chain ID INT,
    Country TEXT,
    chain segment TEXT
);

CREATE TABLE products (
    Product ID INT,
    Description TEXT
);

CREATE TABLE transactions_1k (
    Transaction ID INT,
    Date TEXT,
    Time TEXT,
    Customer ID INT,
    Card ID INT,
    Gas Station ID INT,
    Product ID INT,
    Amount INT,
    Price TEXT
);

CREATE TABLE yearmonth (
    Customer ID INT,
    Date TEXT,
    Consumption TEXT
);"
financial,"account : account id (number), location of branch (number), frequency (text), date (text) | card : credit card id (number), disposition id (number), type (text), issued (text) | client : client_id (number), gender (text), birth_date (text), location of branch (number) | disp : disposition id (number), client_id (number), account_id (number), type (text) | district : location of branch (number), district_name (text), region (text), number of inhabitants (text), no. of municipalities with inhabitants < 499 (text), no. of municipalities with inhabitants 500-1999 (text), no. of municipalities with inhabitants 2000-9999 (text), no. of municipalities with inhabitants > 10000 (number), A9 (number), ratio of urban inhabitants (text), average salary (number), unemployment rate 1995 (text), unemployment rate 1996 (text), no. of entrepreneurs per 1000 inhabitants (number), no. of committed crimes 1995 (number), no. of committed crimes 1996 (number) | loan : loan_id (number), account_id (number), date (text), amount (number), duration (number), monthly payments (text), status (text) | order : order_id (number), account_id (number), bank of the recipient (text), account of the recipient (number), debited amount (text), characterization of the payment (text) | trans : transaction id (number), account_id (number), date of transaction (text), +/- transaction (text), mode of transaction (text), amount of money (number), balance after transaction (number), characterization of the transaction (text), bank of the partner (text), account of the partner (number)","CREATE TABLE account (
    account id INT,
    location of branch INT,
    frequency TEXT,
    date TEXT
);

CREATE TABLE card (
    credit card id INT,
    disposition id INT,
    type TEXT,
    issued TEXT
);

CREATE TABLE client (
    client_id INT,
    gender TEXT,
    birth_date TEXT,
    location of branch INT
);

CREATE TABLE disp (
    disposition id INT,
    client_id INT,
    account_id INT,
    type TEXT
);

CREATE TABLE district (
    location of branch INT,
    district_name TEXT,
    region TEXT,
    number of inhabitants TEXT,
    no. of municipalities with inhabitants < 499 TEXT,
    no. of municipalities with inhabitants 500-1999 TEXT,
    no. of municipalities with inhabitants 2000-9999 TEXT,
    no. of municipalities with inhabitants > 10000 INT,
    A9 INT,
    ratio of urban inhabitants TEXT,
    average salary INT,
    unemployment rate 1995 TEXT,
    unemployment rate 1996 TEXT,
    no. of entrepreneurs per 1000 inhabitants INT,
    no. of committed crimes 1995 INT,
    no. of committed crimes 1996 INT
);

CREATE TABLE loan (
    loan_id INT,
    account_id INT,
    date TEXT,
    amount INT,
    duration INT,
    monthly payments TEXT,
    status TEXT
);

CREATE TABLE order (
    order_id INT,
    account_id INT,
    bank of the recipient TEXT,
    account of the recipient INT,
    debited amount TEXT,
    characterization of the payment TEXT
);

CREATE TABLE trans (
    transaction id INT,
    account_id INT,
    date of transaction TEXT,
    +/- transaction TEXT,
    mode of transaction TEXT,
    amount of money INT,
    balance after transaction INT,
    characterization of the transaction TEXT,
    bank of the partner TEXT,
    account of the partner INT
);"
formula_1,"circuits : circuit Id (number), circuit reference name (text), name (text), location (text), country (text), latitude (text), longitude (text), alt (number), url (text) | constructors : constructor Id (number), Constructor Reference name (text), name (text), nationality (text), url (text) | drivers : driver ID (number), driver reference name (text), number (number), code (text), forename (text), surname (text), date of birth (text), nationality (text), url (text) | seasons : race ID (number), url (text) | races : race ID (number), year (number), round (number), Circuit Id (number), name (text), date (text), time (text), url (text) | constructorResults : constructor Results Id (number), race Id (number), constructor Id (number), points (text), status (text) | constructorStandings : constructor Standings Id (number), race id (number), constructor id (number), points (text), position (number), position text (text), wins (number) | driverStandings : driver Standings Id (number), constructor Reference name (number), driverId (number), points (text), position (number), position text (text), wins (number) | lapTimes : race ID (number), driver ID (number), lap (number), position (number), time (text), milliseconds (number) | pitStops : race ID (number), driver ID (number), stop (number), lap (number), time (text), duration (text), milliseconds (number) | qualifying : qualify Id (number), race Id (number), driver Id (number), constructor id (number), number (number), position (number), qualifying 1 (text), qualifying 2 (text), qualifying 3 (text) | status : status ID (number), status (text) | results : Result ID (number), race ID (number), driver ID (number), constructor Id (number), number (number), grid (number), position (number), position text (text), position order (number), points (text), laps (number), time (text), milliseconds (number), fastest lap (number), rank (number), fastest Lap Time (text), fastest Lap Speed (text), status Id (number)","CREATE TABLE circuits (
    circuit Id INT,
    circuit reference name TEXT,
    name TEXT,
    location TEXT,
    country TEXT,
    latitude TEXT,
    longitude TEXT,
    alt INT,
    url TEXT
);

CREATE TABLE constructors (
    constructor Id INT,
    Constructor Reference name TEXT,
    name TEXT,
    nationality TEXT,
    url TEXT
);

CREATE TABLE drivers (
    driver ID INT,
    driver reference name TEXT,
    number INT,
    code TEXT,
    forename TEXT,
    surname TEXT,
    date of birth TEXT,
    nationality TEXT,
    url TEXT
);

CREATE TABLE seasons (
    race ID INT,
    url TEXT
);

CREATE TABLE races (
    race ID INT,
    year INT,
    round INT,
    Circuit Id INT,
    name TEXT,
    date TEXT,
    time TEXT,
    url TEXT
);

CREATE TABLE constructorResults (
    constructor Results Id INT,
    race Id INT,
    constructor Id INT,
    points TEXT,
    status TEXT
);

CREATE TABLE constructorStandings (
    constructor Standings Id INT,
    race id INT,
    constructor id INT,
    points TEXT,
    position INT,
    position text TEXT,
    wins INT
);

CREATE TABLE driverStandings (
    driver Standings Id INT,
    constructor Reference name INT,
    driverId INT,
    points TEXT,
    position INT,
    position text TEXT,
    wins INT
);

CREATE TABLE lapTimes (
    race ID INT,
    driver ID INT,
    lap INT,
    position INT,
    time TEXT,
    milliseconds INT
);

CREATE TABLE pitStops (
    race ID INT,
    driver ID INT,
    stop INT,
    lap INT,
    time TEXT,
    duration TEXT,
    milliseconds INT
);

CREATE TABLE qualifying (
    qualify Id INT,
    race Id INT,
    driver Id INT,
    constructor id INT,
    number INT,
    position INT,
    qualifying 1 TEXT,
    qualifying 2 TEXT,
    qualifying 3 TEXT
);

CREATE TABLE status (
    status ID INT,
    status TEXT
);

CREATE TABLE results (
    Result ID INT,
    race ID INT,
    driver ID INT,
    constructor Id INT,
    number INT,
    grid INT,
    position INT,
    position text TEXT,
    position order INT,
    points TEXT,
    laps INT,
    time TEXT,
    milliseconds INT,
    fastest lap INT,
    rank INT,
    fastest Lap Time TEXT,
    fastest Lap Speed TEXT,
    status Id INT
);"
california_schools,"frpm : CDSCode (text), Academic Year (text), County Code (text), District Code (number), School Code (text), County Name (text), District Name (text), School Name (text), District Type (text), School Type (text), Educational Option Type (text), NSLP Provision Status (text), Charter School (Y/N) (number), Charter School Number (text), Charter Funding Type (text), IRC (number), Low Grade (text), High Grade (text), Enrollment (K-12) (text), Free Meal Count (K-12) (text), Percent (%) Eligible Free (K-12) (text), FRPM Count (K-12) (text), Percent (%) Eligible FRPM (K-12) (text), Enrollment (Ages 5-17) (text), Free Meal Count (Ages 5-17) (text), Percent (%) Eligible Free (Ages 5-17) (text), FRPM Count (Ages 5-17) (text), Percent (%) Eligible FRPM (Ages 5-17) (text), 2013-14 CALPADS Fall 1 Certification Status (number) | satscores : cds (text), rtype (text), school name (text), district name (text), county name (text), enrollment (1st-12nd grade) (number), Number of Test Takers (number), average scores in Reading (number), average scores in Math (number), average scores in writing (number), Number of Test Takers Whose Total SAT Scores Are Greater or Equal to 1500 (number) | schools : CDSCode (text), National Center for Educational Statistics school district identification number (text), National Center for Educational Statistics school identification number (text), StatusType (text), County (text), District (text), School (text), Street (text), street address (text), City (text), Zip (text), State (text), MailStreet (text), mailing street address (text), mailing city (text), mailing zip (text), mailing state (text), Phone (text), extension (text), Website (text), OpenDate (text), ClosedDate (text), Charter (number), CharterNum (text), FundingType (text), District Ownership Code (text), The District Ownership Code Type (text), School Ownership Code (text), School Ownership Code Type (text), Education Option Code (text), Educational Option Name (text), Educational Instruction Level Code (text), Educational Instruction Level Name (text), grade span offered (text), grade span served. (text), Virtual (text), Magnet (number), Latitude (text), Longitude (text), administrator's first name 1 (text), administrator's last name 1 (text), administrator's email address 1 (text), administrator's first name 2 (text), administrator's last name 2 (text), administrator's email address 2 (text), administrator's first name 3 (text), administrator's last name 3 (text), administrator's email address 3 (text), Last Update (text)","CREATE TABLE frpm (
    CDSCode TEXT,
    Academic Year TEXT,
    County Code TEXT,
    District Code INT,
    School Code TEXT,
    County Name TEXT,
    District Name TEXT,
    School Name TEXT,
    District Type TEXT,
    School Type TEXT,
    Educational Option Type TEXT,
    NSLP Provision Status TEXT,
    Charter School Y/N) (number,
    Charter School Number TEXT,
    Charter Funding Type TEXT,
    IRC INT,
    Low Grade TEXT,
    High Grade TEXT,
    Enrollment K-12) (text,
    Free Meal Count K-12) (text,
    Percent %) Eligible Free (K-12) (text,
    FRPM Count K-12) (text,
    Percent %) Eligible FRPM (K-12) (text,
    Enrollment Ages 5-17) (text,
    Free Meal Count Ages 5-17) (text,
    Percent %) Eligible Free (Ages 5-17) (text,
    FRPM Count Ages 5-17) (text,
    Percent %) Eligible FRPM (Ages 5-17) (text,
    2013-14 CALPADS Fall 1 Certification Status INT
);

CREATE TABLE satscores (
    cds TEXT,
    rtype TEXT,
    school name TEXT,
    district name TEXT,
    county name TEXT,
    enrollment 1st-12nd grade) (number,
    Number of Test Takers INT,
    average scores in Reading INT,
    average scores in Math INT,
    average scores in writing INT,
    Number of Test Takers Whose Total SAT Scores Are Greater or Equal to 1500 INT
);

CREATE TABLE schools (
    CDSCode TEXT,
    National Center for Educational Statistics school district identification number TEXT,
    National Center for Educational Statistics school identification number TEXT,
    StatusType TEXT,
    County TEXT,
    District TEXT,
    School TEXT,
    Street TEXT,
    street address TEXT,
    City TEXT,
    Zip TEXT,
    State TEXT,
    MailStreet TEXT,
    mailing street address TEXT,
    mailing city TEXT,
    mailing zip TEXT,
    mailing state TEXT,
    Phone TEXT,
    extension TEXT,
    Website TEXT,
    OpenDate TEXT,
    ClosedDate TEXT,
    Charter INT,
    CharterNum TEXT,
    FundingType TEXT,
    District Ownership Code TEXT,
    The District Ownership Code Type TEXT,
    School Ownership Code TEXT,
    School Ownership Code Type TEXT,
    Education Option Code TEXT,
    Educational Option Name TEXT,
    Educational Instruction Level Code TEXT,
    Educational Instruction Level Name TEXT,
    grade span offered TEXT,
    grade span served. TEXT,
    Virtual TEXT,
    Magnet INT,
    Latitude TEXT,
    Longitude TEXT,
    administrator's first name 1 TEXT,
    administrator's last name 1 TEXT,
    administrator's email address 1 TEXT,
    administrator's first name 2 TEXT,
    administrator's last name 2 TEXT,
    administrator's email address 2 TEXT,
    administrator's first name 3 TEXT,
    administrator's last name 3 TEXT,
    administrator's email address 3 TEXT,
    Last Update TEXT
);"
card_games,"cards : unique id number identifying the cards (number), artist (text), ascii Name (text), availability (text), border Color (text), card Kingdom Foil Id (text), card Kingdom Id (text), color Identity (text), color Indicator (text), colors (text), converted Mana Cost (text), duel Deck (text), rec Rank in edh (number), face Converted Mana Cost (text), face Name (text), flavor Name (text), flavor Text (text), frame Effects (text), frame Version (text), hand (text), has Alternative Deck Limit (number), has Content Warning (number), has Foil (number), has Non Foil (number), is Alternative (number), is Full Art (number), is Online Only (number), is Oversized (number), is Promotion (number), is Reprint (number), is Reserved (number), is Starter (number), is Story Spotlight (number), is Text less (number), is Time shifted (number), keywords (text), layout (text), leadership Skills (text), life (text), loyalty (text), mana Cost (text), mcmId (text), mcmMetaId (text), mtgArenaId (text), mtgjsonV4Id (text), mtgoFoilId (text), mtgoId (text), multiverseId (text), name (text), number (text), originalReleaseDate (text), originalText (text), originalType (text), otherFaceIds (text), power (text), printings (text), promo Types (text), purchase Urls (text), rarity (text), scryfallId (text), scryfallIllustrationId (text), scryfallOracleId (text), Set Code (text), side (text), subtypes (text), super types (text), tcg player ProductId (text), text (text), toughness (text), type (text), types (text), uuid (text), variations (text), watermark (text) | foreign_data : id (number), flavor Text (text), language (text), multiverseid (number), name (text), text (text), type (text), uuid (text) | legalities : id (number), format (text), status (text), uuid (text) | sets : id (number), base Set Size (number), block (text), booster (text), code (text), is Foil Only (number), is Foreign Only (number), is Non Foil Only (number), is Online Only (number), is Partial Preview (number), keyrune Code (text), magic card market id (number), magic card market ID Extras (number), magic card market name (text), magic the gathering online code (text), name (text), parent Code (text), release Date (text), tcg player Group Id (number), total Set Size (number), type (text) | set_translations : id (number), language (text), set code (text), translation (text) | ruling : id (number), date (text), text (text), uuid (text)","CREATE TABLE cards (
    unique id number identifying the cards INT,
    artist TEXT,
    ascii Name TEXT,
    availability TEXT,
    border Color TEXT,
    card Kingdom Foil Id TEXT,
    card Kingdom Id TEXT,
    color Identity TEXT,
    color Indicator TEXT,
    colors TEXT,
    converted Mana Cost TEXT,
    duel Deck TEXT,
    rec Rank in edh INT,
    face Converted Mana Cost TEXT,
    face Name TEXT,
    flavor Name TEXT,
    flavor Text TEXT,
    frame Effects TEXT,
    frame Version TEXT,
    hand TEXT,
    has Alternative Deck Limit INT,
    has Content Warning INT,
    has Foil INT,
    has Non Foil INT,
    is Alternative INT,
    is Full Art INT,
    is Online Only INT,
    is Oversized INT,
    is Promotion INT,
    is Reprint INT,
    is Reserved INT,
    is Starter INT,
    is Story Spotlight INT,
    is Text less INT,
    is Time shifted INT,
    keywords TEXT,
    layout TEXT,
    leadership Skills TEXT,
    life TEXT,
    loyalty TEXT,
    mana Cost TEXT,
    mcmId TEXT,
    mcmMetaId TEXT,
    mtgArenaId TEXT,
    mtgjsonV4Id TEXT,
    mtgoFoilId TEXT,
    mtgoId TEXT,
    multiverseId TEXT,
    name TEXT,
    number TEXT,
    originalReleaseDate TEXT,
    originalText TEXT,
    originalType TEXT,
    otherFaceIds TEXT,
    power TEXT,
    printings TEXT,
    promo Types TEXT,
    purchase Urls TEXT,
    rarity TEXT,
    scryfallId TEXT,
    scryfallIllustrationId TEXT,
    scryfallOracleId TEXT,
    Set Code TEXT,
    side TEXT,
    subtypes TEXT,
    super types TEXT,
    tcg player ProductId TEXT,
    text TEXT,
    toughness TEXT,
    type TEXT,
    types TEXT,
    uuid TEXT,
    variations TEXT,
    watermark TEXT
);

CREATE TABLE foreign_data (
    id INT,
    flavor Text TEXT,
    language TEXT,
    multiverseid INT,
    name TEXT,
    text TEXT,
    type TEXT,
    uuid TEXT
);

CREATE TABLE legalities (
    id INT,
    format TEXT,
    status TEXT,
    uuid TEXT
);

CREATE TABLE sets (
    id INT,
    base Set Size INT,
    block TEXT,
    booster TEXT,
    code TEXT,
    is Foil Only INT,
    is Foreign Only INT,
    is Non Foil Only INT,
    is Online Only INT,
    is Partial Preview INT,
    keyrune Code TEXT,
    magic card market id INT,
    magic card market ID Extras INT,
    magic card market name TEXT,
    magic the gathering online code TEXT,
    name TEXT,
    parent Code TEXT,
    release Date TEXT,
    tcg player Group Id INT,
    total Set Size INT,
    type TEXT
);

CREATE TABLE set_translations (
    id INT,
    language TEXT,
    set code TEXT,
    translation TEXT
);

CREATE TABLE ruling (
    id INT,
    date TEXT,
    text TEXT,
    uuid TEXT
);"
european_football_2,"Player_Attributes : id (number), player federation international football association api id (number), player api id (number), date (text), overall_rating (number), potential (number), preferred foot (text), attacking work rate (text), defensive_work_rate (text), crossing (number), finishing (number), heading accuracy (number), short passing (number), volleys (number), dribbling (number), curve (number), free kick accuracy (number), long passing (number), ball control (number), acceleration (number), sprint speed (number), agility (number), reactions (number), balance (number), shot power (number), jumping (number), stamina (number), strength (number), long shots (number), aggression (number), interceptions (number), positioning (number), vision (number), penalties (number), marking (number), standing tackle (number), sliding tackle (number), goalkeep diving (number), goalkeep handling (number), goalkeep kicking (number), goalkeep positioning (number), goalkeep reflexes (number) | Player : id (number), player api id (number), player name (text), player federation international football association api id (number), birthday (text), height (number), weight (number) | League : id (number), country id (number), name (text) | Country : id (number), name (text) | Team : id (number), team api id (number), team federation international football association api id (number), team long name (text), team short name (text) | Team_Attributes : id (number), team federation international football association api id (number), team api id (number), date (text), build Up Play Speed (number), build Up Play Speed Class (text), build Up Play Dribbling (number), build Up Play Dribbling Class (text), build Up Play Passing (number), build Up Play Passing Class (text), build Up Play Positioning Class (text), chance Creation Passing (number), chance Creation Passing Class (text), chance Creation Crossing (number), chance Creation Crossing Class (text), chance Creation Shooting (number), chance Creation Shooting Class (text), chance Creation Positioning Class (text), defence Pressure (number), defence Pressure Class (text), defence Aggression (number), defence Aggression Class (text), defence Team Width (number), defence Team Width Class (text), defence Defender Line Class (text) | Match : id (number), country id (number), league id (number), season (text), stage (number), date (text), match api id (number), home team api id (number), away team api id (number), home team goal (number), away team goal (number), home_player_X1 (number), home_player_X2 (number), home_player_X3 (number), home_player_X4 (number), home_player_X5 (number), home_player_X6 (number), home_player_X7 (number), home_player_X8 (number), home_player_X9 (number), home_player_X10 (number), home_player_X11 (number), away_player_X1 (number), away_player_X2 (number), away_player_X3 (number), away_player_X4 (number), away_player_X5 (number), away_player_X6 (number), away_player_X7 (number), away_player_X8 (number), away_player_X9 (number), away_player_X10 (number), away_player_X11 (number), home_player_Y1 (number), home_player_Y2 (number), home_player_Y3 (number), home_player_Y4 (number), home_player_Y5 (number), home_player_Y6 (number), home_player_Y7 (number), home_player_Y8 (number), home_player_Y9 (number), home_player_Y10 (number), home_player_Y11 (number), away_player_Y1 (number), away_player_Y2 (number), away_player_Y3 (number), away_player_Y4 (number), away_player_Y5 (number), away_player_Y6 (number), away_player_Y7 (number), away_player_Y8 (number), away_player_Y9 (number), away_player_Y10 (number), away_player_Y11 (number), home_player_1 (number), home_player_2 (number), home_player_3 (number), home_player_4 (number), home_player_5 (number), home_player_6 (number), home_player_7 (number), home_player_8 (number), home_player_9 (number), home_player_10 (number), home_player_11 (number), away_player_1 (number), away_player_2 (number), away_player_3 (number), away_player_4 (number), away_player_5 (number), away_player_6 (number), away_player_7 (number), away_player_8 (number), away_player_9 (number), away_player_10 (number), away_player_11 (number), goal (text), shot on (text), shot off (text), foul commit (text), card (text), cross (text), corner (text), possession (text), B365H (text), B365D (text), B365A (text), BWH (text), BWD (text), BWA (text), IWH (text), IWD (text), IWA (text), LBH (text), LBD (text), LBA (text), PSH (text), PSD (text), PSA (text), WHH (text), WHD (text), WHA (text), SJH (text), SJD (text), SJA (text), VCH (text), VCD (text), VCA (text), GBH (text), GBD (text), GBA (text), BSH (text), BSD (text), BSA (text)","CREATE TABLE Player_Attributes (
    id INT,
    player federation international football association api id INT,
    player api id INT,
    date TEXT,
    overall_rating INT,
    potential INT,
    preferred foot TEXT,
    attacking work rate TEXT,
    defensive_work_rate TEXT,
    crossing INT,
    finishing INT,
    heading accuracy INT,
    short passing INT,
    volleys INT,
    dribbling INT,
    curve INT,
    free kick accuracy INT,
    long passing INT,
    ball control INT,
    acceleration INT,
    sprint speed INT,
    agility INT,
    reactions INT,
    balance INT,
    shot power INT,
    jumping INT,
    stamina INT,
    strength INT,
    long shots INT,
    aggression INT,
    interceptions INT,
    positioning INT,
    vision INT,
    penalties INT,
    marking INT,
    standing tackle INT,
    sliding tackle INT,
    goalkeep diving INT,
    goalkeep handling INT,
    goalkeep kicking INT,
    goalkeep positioning INT,
    goalkeep reflexes INT
);

CREATE TABLE Player (
    id INT,
    player api id INT,
    player name TEXT,
    player federation international football association api id INT,
    birthday TEXT,
    height INT,
    weight INT
);

CREATE TABLE League (
    id INT,
    country id INT,
    name TEXT
);

CREATE TABLE Country (
    id INT,
    name TEXT
);

CREATE TABLE Team (
    id INT,
    team api id INT,
    team federation international football association api id INT,
    team long name TEXT,
    team short name TEXT
);

CREATE TABLE Team_Attributes (
    id INT,
    team federation international football association api id INT,
    team api id INT,
    date TEXT,
    build Up Play Speed INT,
    build Up Play Speed Class TEXT,
    build Up Play Dribbling INT,
    build Up Play Dribbling Class TEXT,
    build Up Play Passing INT,
    build Up Play Passing Class TEXT,
    build Up Play Positioning Class TEXT,
    chance Creation Passing INT,
    chance Creation Passing Class TEXT,
    chance Creation Crossing INT,
    chance Creation Crossing Class TEXT,
    chance Creation Shooting INT,
    chance Creation Shooting Class TEXT,
    chance Creation Positioning Class TEXT,
    defence Pressure INT,
    defence Pressure Class TEXT,
    defence Aggression INT,
    defence Aggression Class TEXT,
    defence Team Width INT,
    defence Team Width Class TEXT,
    defence Defender Line Class TEXT
);

CREATE TABLE Match (
    id INT,
    country id INT,
    league id INT,
    season TEXT,
    stage INT,
    date TEXT,
    match api id INT,
    home team api id INT,
    away team api id INT,
    home team goal INT,
    away team goal INT,
    home_player_X1 INT,
    home_player_X2 INT,
    home_player_X3 INT,
    home_player_X4 INT,
    home_player_X5 INT,
    home_player_X6 INT,
    home_player_X7 INT,
    home_player_X8 INT,
    home_player_X9 INT,
    home_player_X10 INT,
    home_player_X11 INT,
    away_player_X1 INT,
    away_player_X2 INT,
    away_player_X3 INT,
    away_player_X4 INT,
    away_player_X5 INT,
    away_player_X6 INT,
    away_player_X7 INT,
    away_player_X8 INT,
    away_player_X9 INT,
    away_player_X10 INT,
    away_player_X11 INT,
    home_player_Y1 INT,
    home_player_Y2 INT,
    home_player_Y3 INT,
    home_player_Y4 INT,
    home_player_Y5 INT,
    home_player_Y6 INT,
    home_player_Y7 INT,
    home_player_Y8 INT,
    home_player_Y9 INT,
    home_player_Y10 INT,
    home_player_Y11 INT,
    away_player_Y1 INT,
    away_player_Y2 INT,
    away_player_Y3 INT,
    away_player_Y4 INT,
    away_player_Y5 INT,
    away_player_Y6 INT,
    away_player_Y7 INT,
    away_player_Y8 INT,
    away_player_Y9 INT,
    away_player_Y10 INT,
    away_player_Y11 INT,
    home_player_1 INT,
    home_player_2 INT,
    home_player_3 INT,
    home_player_4 INT,
    home_player_5 INT,
    home_player_6 INT,
    home_player_7 INT,
    home_player_8 INT,
    home_player_9 INT,
    home_player_10 INT,
    home_player_11 INT,
    away_player_1 INT,
    away_player_2 INT,
    away_player_3 INT,
    away_player_4 INT,
    away_player_5 INT,
    away_player_6 INT,
    away_player_7 INT,
    away_player_8 INT,
    away_player_9 INT,
    away_player_10 INT,
    away_player_11 INT,
    goal TEXT,
    shot on TEXT,
    shot off TEXT,
    foul commit TEXT,
    card TEXT,
    cross TEXT,
    corner TEXT,
    possession TEXT,
    B365H TEXT,
    B365D TEXT,
    B365A TEXT,
    BWH TEXT,
    BWD TEXT,
    BWA TEXT,
    IWH TEXT,
    IWD TEXT,
    IWA TEXT,
    LBH TEXT,
    LBD TEXT,
    LBA TEXT,
    PSH TEXT,
    PSD TEXT,
    PSA TEXT,
    WHH TEXT,
    WHD TEXT,
    WHA TEXT,
    SJH TEXT,
    SJD TEXT,
    SJA TEXT,
    VCH TEXT,
    VCD TEXT,
    VCA TEXT,
    GBH TEXT,
    GBD TEXT,
    GBA TEXT,
    BSH TEXT,
    BSD TEXT,
    BSA TEXT
);"
thrombosis_prediction,"Examination : ID (number), Examination Date (text), anti-Cardiolipin antibody (IgG) (text), anti-Cardiolipin antibody (IgM) (text), anti-nucleus antibody (number), pattern observed in the sheet of ANA examination (text), anti-Cardiolipin antibody (IgA) concentration (number), Diagnosis (text), measure of degree of coagulation (text), measure of degree of coagulation (text), measure of degree of coagulation (text), Symptoms (text), Thrombosis (number) | Patient : ID (number), SEX (text), Birthday (text), Description (text), First Date (text), Admission (text), Diagnosis (text) | Laboratory : ID (number), Date (text), AST glutamic oxaloacetic transaminase (number), ALT glutamic pyruvic transaminase (number), lactate dehydrogenase (number), alkaliphophatase (number), total protein (text), albumin (text), uric acid (text), urea nitrogen (number), creatinine (text), total bilirubin (text), total cholesterol (number), triglyceride (number), creatinine phosphokinase (number), blood glucose (number), White blood cell (text), Red blood cell (text), Hemoglobin (text), Hematoclit (text), platelet (number), prothrombin time (text), activated partial prothrombin time (number), fibrinogen (text), PIC (number), TAT (number), TAT2 (number), proteinuria (text), Ig G (number), Ig A (number), Ig M (number), C-reactive protein (text), Rhuematoid Factor (text), RAHA (text), complement 3 (number), complement 4 (number), anti-ribonuclear protein (text), anti-SM (text), anti-scl70 (text), anti-SSA (text), anti-SSB (text), anti-centromere (text), anti-DNA (text), anti-DNA (number)","CREATE TABLE Examination (
    ID INT,
    Examination Date TEXT,
    anti-Cardiolipin antibody IgG) (text,
    anti-Cardiolipin antibody IgM) (text,
    anti-nucleus antibody INT,
    pattern observed in the sheet of ANA examination TEXT,
    anti-Cardiolipin antibody IgA) concentration (number,
    Diagnosis TEXT,
    measure of degree of coagulation TEXT,
    measure of degree of coagulation TEXT,
    measure of degree of coagulation TEXT,
    Symptoms TEXT,
    Thrombosis INT
);

CREATE TABLE Patient (
    ID INT,
    SEX TEXT,
    Birthday TEXT,
    Description TEXT,
    First Date TEXT,
    Admission TEXT,
    Diagnosis TEXT
);

CREATE TABLE Laboratory (
    ID INT,
    Date TEXT,
    AST glutamic oxaloacetic transaminase INT,
    ALT glutamic pyruvic transaminase INT,
    lactate dehydrogenase INT,
    alkaliphophatase INT,
    total protein TEXT,
    albumin TEXT,
    uric acid TEXT,
    urea nitrogen INT,
    creatinine TEXT,
    total bilirubin TEXT,
    total cholesterol INT,
    triglyceride INT,
    creatinine phosphokinase INT,
    blood glucose INT,
    White blood cell TEXT,
    Red blood cell TEXT,
    Hemoglobin TEXT,
    Hematoclit TEXT,
    platelet INT,
    prothrombin time TEXT,
    activated partial prothrombin time INT,
    fibrinogen TEXT,
    PIC INT,
    TAT INT,
    TAT2 INT,
    proteinuria TEXT,
    Ig G INT,
    Ig A INT,
    Ig M INT,
    C-reactive protein TEXT,
    Rhuematoid Factor TEXT,
    RAHA TEXT,
    complement 3 INT,
    complement 4 INT,
    anti-ribonuclear protein TEXT,
    anti-SM TEXT,
    anti-scl70 TEXT,
    anti-SSA TEXT,
    anti-SSB TEXT,
    anti-centromere TEXT,
    anti-DNA TEXT,
    anti-DNA INT
);"
toxicology,"atom : atom id (text), molecule id (text), element (text) | bond : bond_id (text), molecule_id (text), bond_type (text) | connected : atom id (text), atom id 2 (text), bond id (text) | molecule : molecule id (text), label (text)","CREATE TABLE atom (
    atom id TEXT,
    molecule id TEXT,
    element TEXT
);

CREATE TABLE bond (
    bond_id TEXT,
    molecule_id TEXT,
    bond_type TEXT
);

CREATE TABLE connected (
    atom id TEXT,
    atom id 2 TEXT,
    bond id TEXT
);

CREATE TABLE molecule (
    molecule id TEXT,
    label TEXT
);"
student_club,"Event : event id (text), event name (text), event date (text), type (text), notes (text), location (text), status (text) | Major : major id (text), major name (text), department (text), college (text) | Zip_Code : zip code (number), type (text), city (text), county (text), state (text), short state (text) | Attendance : link to event (text), link to member (text) | Budget : budget id (text), category (text), spent (text), remaining (text), amount (number), event status (text), link to event (text) | Expense : expense id (text), expense description (text), expense date (text), cost (text), approved (text), link to member (text), link to budget (text) | Income : income id (text), date received (text), amount (number), source (text), notes (text), link to member (text) | Member : member id (text), first name (text), last name (text), email (text), position (text), t_shirt_size (text), phone (text), zip (number), link to major (text)","CREATE TABLE Event (
    event id TEXT,
    event name TEXT,
    event date TEXT,
    type TEXT,
    notes TEXT,
    location TEXT,
    status TEXT
);

CREATE TABLE Major (
    major id TEXT,
    major name TEXT,
    department TEXT,
    college TEXT
);

CREATE TABLE Zip_Code (
    zip code INT,
    type TEXT,
    city TEXT,
    county TEXT,
    state TEXT,
    short state TEXT
);

CREATE TABLE Attendance (
    link to event TEXT,
    link to member TEXT
);

CREATE TABLE Budget (
    budget id TEXT,
    category TEXT,
    spent TEXT,
    remaining TEXT,
    amount INT,
    event status TEXT,
    link to event TEXT
);

CREATE TABLE Expense (
    expense id TEXT,
    expense description TEXT,
    expense date TEXT,
    cost TEXT,
    approved TEXT,
    link to member TEXT,
    link to budget TEXT
);

CREATE TABLE Income (
    income id TEXT,
    date received TEXT,
    amount INT,
    source TEXT,
    notes TEXT,
    link to member TEXT
);

CREATE TABLE Member (
    member id TEXT,
    first name TEXT,
    last name TEXT,
    email TEXT,
    position TEXT,
    t_shirt_size TEXT,
    phone TEXT,
    zip INT,
    link to major TEXT
);"
superhero,"alignment : id (number), alignment (text) | attribute : id (number), attribute name (text) | colour : id (number), colour (text) | gender : id (number), gender (text) | publisher : id (number), publisher_name (text) | race : id (number), race (text) | superhero : id (number), superhero name (text), full name (text), gender id (number), eye colour id (number), hair colour id (number), skin colour id (number), race id (number), publisher id (number), alignment id (number), height cm (number), weight kg (number) | hero_attribute : hero id (number), attribute id (number), attribute value (number) | superpower : id (number), power name (text) | hero_power : hero id (number), power id (number)","CREATE TABLE alignment (
    id INT,
    alignment TEXT
);

CREATE TABLE attribute (
    id INT,
    attribute name TEXT
);

CREATE TABLE colour (
    id INT,
    colour TEXT
);

CREATE TABLE gender (
    id INT,
    gender TEXT
);

CREATE TABLE publisher (
    id INT,
    publisher_name TEXT
);

CREATE TABLE race (
    id INT,
    race TEXT
);

CREATE TABLE superhero (
    id INT,
    superhero name TEXT,
    full name TEXT,
    gender id INT,
    eye colour id INT,
    hair colour id INT,
    skin colour id INT,
    race id INT,
    publisher id INT,
    alignment id INT,
    height cm INT,
    weight kg INT
);

CREATE TABLE hero_attribute (
    hero id INT,
    attribute id INT,
    attribute value INT
);

CREATE TABLE superpower (
    id INT,
    power name TEXT
);

CREATE TABLE hero_power (
    hero id INT,
    power id INT
);"
codebase_community,"badges : Id (number), User Id (number), Name (text), Date (text) | comments : Id (number), Post Id (number), Score (number), Text (text), Creation Date (text), User Id (number), User Display Name (text) | postHistory : Id (number), Post History Type Id (number), Post Id (number), Revision GUID (text), Creation Date (text), User Id (number), Text (text), Comment (text), User Display Name (text) | postLinks : Id (number), Creation Date (text), Post Id (number), Related Post Id (number), Link Type Id (number) | posts : Id (number), Post Type Id (number), Accepted Answer Id (number), Creation Date (text), Score (number), View Count (number), Body (text), Owner User Id (number), Last Activity Date (text), Title (text), Tags (text), Answer Count (number), Comment Count (number), Favorite Count (number), Last Editor User Id (number), Last Edit Date (text), Community Owned Date (text), ParentId (number), Closed Date (text), Owner Display Name (text), Last Editor Display Name (text) | tags : Id (number), Tag Name (text), Count (number), Excerpt Post Id (number), Wiki Post Id (number) | users : Id (number), Reputation (number), Creation Date (text), Display Name (text), Last Access Date (text), Website Url (text), Location (text), About Me (text), Views (number), UpVotes (number), DownVotes (number), Account Id (number), Age (number), Profile Image Url (text) | votes : Id (number), Post Id (number), Vote Type Id (number), Creation Date (text), User Id (number), Bounty Amount (number)","CREATE TABLE badges (
    Id INT,
    User Id INT,
    Name TEXT,
    Date TEXT
);

CREATE TABLE comments (
    Id INT,
    Post Id INT,
    Score INT,
    Text TEXT,
    Creation Date TEXT,
    User Id INT,
    User Display Name TEXT
);

CREATE TABLE postHistory (
    Id INT,
    Post History Type Id INT,
    Post Id INT,
    Revision GUID TEXT,
    Creation Date TEXT,
    User Id INT,
    Text TEXT,
    Comment TEXT,
    User Display Name TEXT
);

CREATE TABLE postLinks (
    Id INT,
    Creation Date TEXT,
    Post Id INT,
    Related Post Id INT,
    Link Type Id INT
);

CREATE TABLE posts (
    Id INT,
    Post Type Id INT,
    Accepted Answer Id INT,
    Creation Date TEXT,
    Score INT,
    View Count INT,
    Body TEXT,
    Owner User Id INT,
    Last Activity Date TEXT,
    Title TEXT,
    Tags TEXT,
    Answer Count INT,
    Comment Count INT,
    Favorite Count INT,
    Last Editor User Id INT,
    Last Edit Date TEXT,
    Community Owned Date TEXT,
    ParentId INT,
    Closed Date TEXT,
    Owner Display Name TEXT,
    Last Editor Display Name TEXT
);

CREATE TABLE tags (
    Id INT,
    Tag Name TEXT,
    Count INT,
    Excerpt Post Id INT,
    Wiki Post Id INT
);

CREATE TABLE users (
    Id INT,
    Reputation INT,
    Creation Date TEXT,
    Display Name TEXT,
    Last Access Date TEXT,
    Website Url TEXT,
    Location TEXT,
    About Me TEXT,
    Views INT,
    UpVotes INT,
    DownVotes INT,
    Account Id INT,
    Age INT,
    Profile Image Url TEXT
);

CREATE TABLE votes (
    Id INT,
    Post Id INT,
    Vote Type Id INT,
    Creation Date TEXT,
    User Id INT,
    Bounty Amount INT
);"
