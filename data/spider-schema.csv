db_id,schema_input1,schema_input2
perpetrator,"perpetrator : Perpetrator_ID (number) , People_ID (number) , Date (text) , Year (number) , Location (text) , Country (text) , Killed (number) , Injured (number) | people : People_ID (number) , Name (text) , Height (number) , Weight (number) , Home Town (text)","CREATE TABLE perpetrator (
    Perpetrator_ID INT,
    People_ID INT,
    Date TEXT,
    Year INT,
    Location TEXT,
    Country TEXT,
    Killed INT,
    Injured INT
);

CREATE TABLE people (
    People_ID INT,
    Name TEXT,
    Height INT,
    Weight INT,
    Home Town TEXT
);"
college_2,"classroom : building (text) , room_number (text) , capacity (number) | department : dept_name (text) , building (text) , budget (number) | course : course_id (text) , title (text) , dept_name (text) , credits (number) | instructor : ID (text) , name (text) , dept_name (text) , salary (number) | section : course_id (text) , sec_id (text) , semester (text) , year (number) , building (text) , room_number (text) , time_slot_id (text) | teaches : ID (text) , course_id (text) , sec_id (text) , semester (text) , year (number) | student : ID (text) , name (text) , dept_name (text) , tot_cred (number) | takes : ID (text) , course_id (text) , sec_id (text) , semester (text) , year (number) , grade (text) | advisor : s_ID (text) , i_ID (text) | time_slot : time_slot_id (text) , day (text) , start_hr (number) , start_min (number) , end_hr (number) , end_min (number) | prereq : course_id (text) , prereq_id (text)","CREATE TABLE classroom (
    building TEXT,
    room_number TEXT,
    capacity INT
);

CREATE TABLE department (
    dept_name TEXT,
    building TEXT,
    budget INT
);

CREATE TABLE course (
    course_id TEXT,
    title TEXT,
    dept_name TEXT,
    credits INT
);

CREATE TABLE instructor (
    ID TEXT,
    name TEXT,
    dept_name TEXT,
    salary INT
);

CREATE TABLE section (
    course_id TEXT,
    sec_id TEXT,
    semester TEXT,
    year INT,
    building TEXT,
    room_number TEXT,
    time_slot_id TEXT
);

CREATE TABLE teaches (
    ID TEXT,
    course_id TEXT,
    sec_id TEXT,
    semester TEXT,
    year INT
);

CREATE TABLE student (
    ID TEXT,
    name TEXT,
    dept_name TEXT,
    tot_cred INT
);

CREATE TABLE takes (
    ID TEXT,
    course_id TEXT,
    sec_id TEXT,
    semester TEXT,
    year INT,
    grade TEXT
);

CREATE TABLE advisor (
    s_ID TEXT,
    i_ID TEXT
);

CREATE TABLE time_slot (
    time_slot_id TEXT,
    day TEXT,
    start_hr INT,
    start_min INT,
    end_hr INT,
    end_min INT
);

CREATE TABLE prereq (
    course_id TEXT,
    prereq_id TEXT
);"
flight_company,"airport : id (number) , City (text) , Country (text) , IATA (text) , ICAO (text) , name (text) | operate_company : id (number) , name (text) , Type (text) , Principal_activities (text) , Incorporated_in (text) , Group_Equity_Shareholding (number) | flight : id (number) , Vehicle_Flight_number (text) , Date (text) , Pilot (text) , Velocity (number) , Altitude (number) , airport_id (number) , company_id (number)","CREATE TABLE airport (
    id INT,
    City TEXT,
    Country TEXT,
    IATA TEXT,
    ICAO TEXT,
    name TEXT
);

CREATE TABLE operate_company (
    id INT,
    name TEXT,
    Type TEXT,
    Principal_activities TEXT,
    Incorporated_in TEXT,
    Group_Equity_Shareholding INT
);

CREATE TABLE flight (
    id INT,
    Vehicle_Flight_number TEXT,
    Date TEXT,
    Pilot TEXT,
    Velocity INT,
    Altitude INT,
    airport_id INT,
    company_id INT
);"
icfp_1,"Inst : instID (number) , name (text) , country (text) | Authors : authID (number) , lname (text) , fname (text) | Papers : paperID (number) , title (text) | Authorship : authID (number) , instID (number) , paperID (number) , authOrder (number)","CREATE TABLE Inst (
    instID INT,
    name TEXT,
    country TEXT
);

CREATE TABLE Authors (
    authID INT,
    lname TEXT,
    fname TEXT
);

CREATE TABLE Papers (
    paperID INT,
    title TEXT
);

CREATE TABLE Authorship (
    authID INT,
    instID INT,
    paperID INT,
    authOrder INT
);"
body_builder,"body_builder : Body_Builder_ID (number) , People_ID (number) , Snatch (number) , Clean_Jerk (number) , Total (number) | people : People_ID (number) , Name (text) , Height (number) , Weight (number) , Birth_Date (text) , Birth_Place (text)","CREATE TABLE body_builder (
    Body_Builder_ID INT,
    People_ID INT,
    Snatch INT,
    Clean_Jerk INT,
    Total INT
);

CREATE TABLE people (
    People_ID INT,
    Name TEXT,
    Height INT,
    Weight INT,
    Birth_Date TEXT,
    Birth_Place TEXT
);"
storm_record,"storm : Storm_ID (number) , Name (text) , Dates_active (text) , Max_speed (number) , Damage_millions_USD (number) , Number_Deaths (number) | region : Region_id (number) , Region_code (text) , Region_name (text) | affected_region : Region_id (number) , Storm_ID (number) , Number_city_affected (number)","CREATE TABLE storm (
    Storm_ID INT,
    Name TEXT,
    Dates_active TEXT,
    Max_speed INT,
    Damage_millions_USD INT,
    Number_Deaths INT
);

CREATE TABLE region (
    Region_id INT,
    Region_code TEXT,
    Region_name TEXT
);

CREATE TABLE affected_region (
    Region_id INT,
    Storm_ID INT,
    Number_city_affected INT
);"
pilot_record,"aircraft : Aircraft_ID (number) , Order_Year (number) , Manufacturer (text) , Model (text) , Fleet_Series (text) , Powertrain (text) , Fuel_Propulsion (text) | pilot : Pilot_ID (number) , Pilot_name (text) , Rank (number) , Age (number) , Nationality (text) , Position (text) , Join_Year (number) , Team (text) | pilot_record : Record_ID (number) , Pilot_ID (number) , Aircraft_ID (number) , Date (text)","CREATE TABLE aircraft (
    Aircraft_ID INT,
    Order_Year INT,
    Manufacturer TEXT,
    Model TEXT,
    Fleet_Series TEXT,
    Powertrain TEXT,
    Fuel_Propulsion TEXT
);

CREATE TABLE pilot (
    Pilot_ID INT,
    Pilot_name TEXT,
    Rank INT,
    Age INT,
    Nationality TEXT,
    Position TEXT,
    Join_Year INT,
    Team TEXT
);

CREATE TABLE pilot_record (
    Record_ID INT,
    Pilot_ID INT,
    Aircraft_ID INT,
    Date TEXT
);"
race_track,"race : Race_ID (number) , Name (text) , Class (text) , Date (text) , Track_ID (text) | track : Track_ID (number) , Name (text) , Location (text) , Seating (number) , Year_Opened (number)","CREATE TABLE race (
    Race_ID INT,
    Name TEXT,
    Class TEXT,
    Date TEXT,
    Track_ID TEXT
);

CREATE TABLE track (
    Track_ID INT,
    Name TEXT,
    Location TEXT,
    Seating INT,
    Year_Opened INT
);"
academic,"author : aid (number) , homepage (text) , name (text) , oid (number) | conference : cid (number) , homepage (text) , name (text) | domain : did (number) , name (text) | domain_author : aid (number) , did (number) | domain_conference : cid (number) , did (number) | journal : homepage (text) , jid (number) , name (text) | domain_journal : did (number) , jid (number) | keyword : keyword (text) , kid (number) | domain_keyword : did (number) , kid (number) | publication : abstract (text) , cid (text) , citation_num (number) , jid (number) , pid (number) , reference_num (number) , title (text) , year (number) | domain_publication : did (number) , pid (number) | organization : continent (text) , homepage (text) , name (text) , oid (number) | publication_keyword : pid (number) , kid (number) | writes : aid (number) , pid (number) | cite : cited (number) , citing (number)","CREATE TABLE author (
    aid INT,
    homepage TEXT,
    name TEXT,
    oid INT
);

CREATE TABLE conference (
    cid INT,
    homepage TEXT,
    name TEXT
);

CREATE TABLE domain (
    did INT,
    name TEXT
);

CREATE TABLE domain_author (
    aid INT,
    did INT
);

CREATE TABLE domain_conference (
    cid INT,
    did INT
);

CREATE TABLE journal (
    homepage TEXT,
    jid INT,
    name TEXT
);

CREATE TABLE domain_journal (
    did INT,
    jid INT
);

CREATE TABLE keyword (
    keyword TEXT,
    kid INT
);

CREATE TABLE domain_keyword (
    did INT,
    kid INT
);

CREATE TABLE publication (
    abstract TEXT,
    cid TEXT,
    citation_num INT,
    jid INT,
    pid INT,
    reference_num INT,
    title TEXT,
    year INT
);

CREATE TABLE domain_publication (
    did INT,
    pid INT
);

CREATE TABLE organization (
    continent TEXT,
    homepage TEXT,
    name TEXT,
    oid INT
);

CREATE TABLE publication_keyword (
    pid INT,
    kid INT
);

CREATE TABLE writes (
    aid INT,
    pid INT
);

CREATE TABLE cite (
    cited INT,
    citing INT
);"
department_store,"Addresses : address_id (number) , address_details (text) | Staff : staff_id (number) , staff_gender (text) , staff_name (text) | Suppliers : supplier_id (number) , supplier_name (text) , supplier_phone (text) | Department_Store_Chain : dept_store_chain_id (number) , dept_store_chain_name (text) | Customers : customer_id (number) , payment_method_code (text) , customer_code (text) , customer_name (text) , customer_address (text) , customer_phone (text) , customer_email (text) | Products : product_id (number) , product_type_code (text) , product_name (text) , product_price (number) | Supplier_Addresses : supplier_id (number) , address_id (number) , date_from (time) , date_to (time) | Customer_Addresses : customer_id (number) , address_id (number) , date_from (time) , date_to (time) | Customer_Orders : order_id (number) , customer_id (number) , order_status_code (text) , order_date (time) | Department_Stores : dept_store_id (number) , dept_store_chain_id (number) , store_name (text) , store_address (text) , store_phone (text) , store_email (text) | Departments : department_id (number) , dept_store_id (number) , department_name (text) | Order_Items : order_item_id (number) , order_id (number) , product_id (number) | Product_Suppliers : product_id (number) , supplier_id (number) , date_supplied_from (time) , date_supplied_to (time) , total_amount_purchased (text) , total_value_purchased (number) | Staff_Department_Assignments : staff_id (number) , department_id (number) , date_assigned_from (time) , job_title_code (text) , date_assigned_to (time)","CREATE TABLE Addresses (
    address_id INT,
    address_details TEXT
);

CREATE TABLE Staff (
    staff_id INT,
    staff_gender TEXT,
    staff_name TEXT
);

CREATE TABLE Suppliers (
    supplier_id INT,
    supplier_name TEXT,
    supplier_phone TEXT
);

CREATE TABLE Department_Store_Chain (
    dept_store_chain_id INT,
    dept_store_chain_name TEXT
);

CREATE TABLE Customers (
    customer_id INT,
    payment_method_code TEXT,
    customer_code TEXT,
    customer_name TEXT,
    customer_address TEXT,
    customer_phone TEXT,
    customer_email TEXT
);

CREATE TABLE Products (
    product_id INT,
    product_type_code TEXT,
    product_name TEXT,
    product_price INT
);

CREATE TABLE Supplier_Addresses (
    supplier_id INT,
    address_id INT,
    date_from TIME,
    date_to TIME
);

CREATE TABLE Customer_Addresses (
    customer_id INT,
    address_id INT,
    date_from TIME,
    date_to TIME
);

CREATE TABLE Customer_Orders (
    order_id INT,
    customer_id INT,
    order_status_code TEXT,
    order_date TIME
);

CREATE TABLE Department_Stores (
    dept_store_id INT,
    dept_store_chain_id INT,
    store_name TEXT,
    store_address TEXT,
    store_phone TEXT,
    store_email TEXT
);

CREATE TABLE Departments (
    department_id INT,
    dept_store_id INT,
    department_name TEXT
);

CREATE TABLE Order_Items (
    order_item_id INT,
    order_id INT,
    product_id INT
);

CREATE TABLE Product_Suppliers (
    product_id INT,
    supplier_id INT,
    date_supplied_from TIME,
    date_supplied_to TIME,
    total_amount_purchased TEXT,
    total_value_purchased INT
);

CREATE TABLE Staff_Department_Assignments (
    staff_id INT,
    department_id INT,
    date_assigned_from TIME,
    job_title_code TEXT,
    date_assigned_to TIME
);"
music_4,"artist : Artist_ID (number) , Artist (text) , Age (number) , Famous_Title (text) , Famous_Release_date (text) | volume : Volume_ID (number) , Volume_Issue (text) , Issue_Date (text) , Weeks_on_Top (number) , Song (text) , Artist_ID (number) | music_festival : ID (number) , Music_Festival (text) , Date_of_ceremony (text) , Category (text) , Volume (number) , Result (text)","CREATE TABLE artist (
    Artist_ID INT,
    Artist TEXT,
    Age INT,
    Famous_Title TEXT,
    Famous_Release_date TEXT
);

CREATE TABLE volume (
    Volume_ID INT,
    Volume_Issue TEXT,
    Issue_Date TEXT,
    Weeks_on_Top INT,
    Song TEXT,
    Artist_ID INT
);

CREATE TABLE music_festival (
    ID INT,
    Music_Festival TEXT,
    Date_of_ceremony TEXT,
    Category TEXT,
    Volume INT,
    Result TEXT
);"
insurance_fnol,"Customers : Customer_ID (number) , Customer_name (text) | Services : Service_ID (number) , Service_name (text) | Available_Policies : Policy_ID (number) , policy_type_code (text) , Customer_Phone (text) | Customers_Policies : Customer_ID (number) , Policy_ID (number) , Date_Opened (time) , Date_Closed (time) | First_Notification_of_Loss : FNOL_ID (number) , Customer_ID (number) , Policy_ID (number) , Service_ID (number) | Claims : Claim_ID (number) , FNOL_ID (number) , Effective_Date (time) | Settlements : Settlement_ID (number) , Claim_ID (number) , Effective_Date (time) , Settlement_Amount (number)","CREATE TABLE Customers (
    Customer_ID INT,
    Customer_name TEXT
);

CREATE TABLE Services (
    Service_ID INT,
    Service_name TEXT
);

CREATE TABLE Available_Policies (
    Policy_ID INT,
    policy_type_code TEXT,
    Customer_Phone TEXT
);

CREATE TABLE Customers_Policies (
    Customer_ID INT,
    Policy_ID INT,
    Date_Opened TIME,
    Date_Closed TIME
);

CREATE TABLE First_Notification_of_Loss (
    FNOL_ID INT,
    Customer_ID INT,
    Policy_ID INT,
    Service_ID INT
);

CREATE TABLE Claims (
    Claim_ID INT,
    FNOL_ID INT,
    Effective_Date TIME
);

CREATE TABLE Settlements (
    Settlement_ID INT,
    Claim_ID INT,
    Effective_Date TIME,
    Settlement_Amount INT
);"
cinema,"film : Film_ID (number) , Rank_in_series (number) , Number_in_season (number) , Title (text) , Directed_by (text) , Original_air_date (text) , Production_code (text) | cinema : Cinema_ID (number) , Name (text) , Openning_year (number) , Capacity (number) , Location (text) | schedule : Cinema_ID (number) , Film_ID (number) , Date (text) , Show_times_per_day (number) , Price (number)","CREATE TABLE film (
    Film_ID INT,
    Rank_in_series INT,
    Number_in_season INT,
    Title TEXT,
    Directed_by TEXT,
    Original_air_date TEXT,
    Production_code TEXT
);

CREATE TABLE cinema (
    Cinema_ID INT,
    Name TEXT,
    Openning_year INT,
    Capacity INT,
    Location TEXT
);

CREATE TABLE schedule (
    Cinema_ID INT,
    Film_ID INT,
    Date TEXT,
    Show_times_per_day INT,
    Price INT
);"
decoration_competition,"college : College_ID (number) , Name (text) , Leader_Name (text) , College_Location (text) | member : Member_ID (number) , Name (text) , Country (text) , College_ID (number) | round : Round_ID (number) , Member_ID (number) , Decoration_Theme (text) , Rank_in_Round (number)","CREATE TABLE college (
    College_ID INT,
    Name TEXT,
    Leader_Name TEXT,
    College_Location TEXT
);

CREATE TABLE member (
    Member_ID INT,
    Name TEXT,
    Country TEXT,
    College_ID INT
);

CREATE TABLE round (
    Round_ID INT,
    Member_ID INT,
    Decoration_Theme TEXT,
    Rank_in_Round INT
);"
phone_market,"phone : Name (text) , Phone_ID (number) , Memory_in_G (number) , Carrier (text) , Price (number) | market : Market_ID (number) , District (text) , Num_of_employees (number) , Num_of_shops (number) , Ranking (number) | phone_market : Market_ID (number) , Phone_ID (text) , Num_of_stock (number)","CREATE TABLE phone (
    Name TEXT,
    Phone_ID INT,
    Memory_in_G INT,
    Carrier TEXT,
    Price INT
);

CREATE TABLE market (
    Market_ID INT,
    District TEXT,
    Num_of_employees INT,
    Num_of_shops INT,
    Ranking INT
);

CREATE TABLE phone_market (
    Market_ID INT,
    Phone_ID TEXT,
    Num_of_stock INT
);"
store_product,"product : product_id (number) , product (text) , dimensions (text) , dpi (number) , pages_per_minute_color (number) , max_page_size (text) , interface (text) | store : Store_ID (number) , Store_Name (text) , Type (text) , Area_size (number) , Number_of_product_category (number) , Ranking (number) | district : District_ID (number) , District_name (text) , Headquartered_City (text) , City_Population (number) , City_Area (number) | store_product : Store_ID (number) , Product_ID (number) | store_district : Store_ID (number) , District_ID (number)","CREATE TABLE product (
    product_id INT,
    product TEXT,
    dimensions TEXT,
    dpi INT,
    pages_per_minute_color INT,
    max_page_size TEXT,
    interface TEXT
);

CREATE TABLE store (
    Store_ID INT,
    Store_Name TEXT,
    Type TEXT,
    Area_size INT,
    Number_of_product_category INT,
    Ranking INT
);

CREATE TABLE district (
    District_ID INT,
    District_name TEXT,
    Headquartered_City TEXT,
    City_Population INT,
    City_Area INT
);

CREATE TABLE store_product (
    Store_ID INT,
    Product_ID INT
);

CREATE TABLE store_district (
    Store_ID INT,
    District_ID INT
);"
assets_maintenance,"Third_Party_Companies : company_id (number) , company_type (text) , company_name (text) , company_address (text) , other_company_details (text) | Maintenance_Contracts : maintenance_contract_id (number) , maintenance_contract_company_id (number) , contract_start_date (time) , contract_end_date (time) , other_contract_details (text) | Parts : part_id (number) , part_name (text) , chargeable_yn (text) , chargeable_amount (text) , other_part_details (text) | Skills : skill_id (number) , skill_code (text) , skill_description (text) | Staff : staff_id (number) , staff_name (text) , gender (text) , other_staff_details (text) | Assets : asset_id (number) , maintenance_contract_id (number) , supplier_company_id (number) , asset_details (text) , asset_make (text) , asset_model (text) , asset_acquired_date (time) , asset_disposed_date (time) , other_asset_details (text) | Asset_Parts : asset_id (number) , part_id (number) | Maintenance_Engineers : engineer_id (number) , company_id (number) , first_name (text) , last_name (text) , other_details (text) | Engineer_Skills : engineer_id (number) , skill_id (number) | Fault_Log : fault_log_entry_id (number) , asset_id (number) , recorded_by_staff_id (number) , fault_log_entry_datetime (time) , fault_description (text) , other_fault_details (text) | Engineer_Visits : engineer_visit_id (number) , contact_staff_id (number) , engineer_id (number) , fault_log_entry_id (number) , fault_status (text) , visit_start_datetime (time) , visit_end_datetime (time) , other_visit_details (text) | Part_Faults : part_fault_id (number) , part_id (number) , fault_short_name (text) , fault_description (text) , other_fault_details (text) | Fault_Log_Parts : fault_log_entry_id (number) , part_fault_id (number) , fault_status (text) | Skills_Required_To_Fix : part_fault_id (number) , skill_id (number)","CREATE TABLE Third_Party_Companies (
    company_id INT,
    company_type TEXT,
    company_name TEXT,
    company_address TEXT,
    other_company_details TEXT
);

CREATE TABLE Maintenance_Contracts (
    maintenance_contract_id INT,
    maintenance_contract_company_id INT,
    contract_start_date TIME,
    contract_end_date TIME,
    other_contract_details TEXT
);

CREATE TABLE Parts (
    part_id INT,
    part_name TEXT,
    chargeable_yn TEXT,
    chargeable_amount TEXT,
    other_part_details TEXT
);

CREATE TABLE Skills (
    skill_id INT,
    skill_code TEXT,
    skill_description TEXT
);

CREATE TABLE Staff (
    staff_id INT,
    staff_name TEXT,
    gender TEXT,
    other_staff_details TEXT
);

CREATE TABLE Assets (
    asset_id INT,
    maintenance_contract_id INT,
    supplier_company_id INT,
    asset_details TEXT,
    asset_make TEXT,
    asset_model TEXT,
    asset_acquired_date TIME,
    asset_disposed_date TIME,
    other_asset_details TEXT
);

CREATE TABLE Asset_Parts (
    asset_id INT,
    part_id INT
);

CREATE TABLE Maintenance_Engineers (
    engineer_id INT,
    company_id INT,
    first_name TEXT,
    last_name TEXT,
    other_details TEXT
);

CREATE TABLE Engineer_Skills (
    engineer_id INT,
    skill_id INT
);

CREATE TABLE Fault_Log (
    fault_log_entry_id INT,
    asset_id INT,
    recorded_by_staff_id INT,
    fault_log_entry_datetime TIME,
    fault_description TEXT,
    other_fault_details TEXT
);

CREATE TABLE Engineer_Visits (
    engineer_visit_id INT,
    contact_staff_id INT,
    engineer_id INT,
    fault_log_entry_id INT,
    fault_status TEXT,
    visit_start_datetime TIME,
    visit_end_datetime TIME,
    other_visit_details TEXT
);

CREATE TABLE Part_Faults (
    part_fault_id INT,
    part_id INT,
    fault_short_name TEXT,
    fault_description TEXT,
    other_fault_details TEXT
);

CREATE TABLE Fault_Log_Parts (
    fault_log_entry_id INT,
    part_fault_id INT,
    fault_status TEXT
);

CREATE TABLE Skills_Required_To_Fix (
    part_fault_id INT,
    skill_id INT
);"
student_assessment,"Addresses : address_id (number) , line_1 (text) , line_2 (text) , city (text) , zip_postcode (text) , state_province_county (text) , country (text) | People : person_id (number) , first_name (text) , middle_name (text) , last_name (text) , cell_mobile_number (text) , email_address (text) , login_name (text) , password (text) | Students : student_id (number) , student_details (text) | Courses : course_id (text) , course_name (text) , course_description (text) , other_details (text) | People_Addresses : person_address_id (number) , person_id (number) , address_id (number) , date_from (time) , date_to (time) | Student_Course_Registrations : student_id (number) , course_id (number) , registration_date (time) | Student_Course_Attendance : student_id (number) , course_id (number) , date_of_attendance (time) | Candidates : candidate_id (number) , candidate_details (text) | Candidate_Assessments : candidate_id (number) , qualification (text) , assessment_date (time) , asessment_outcome_code (text)","CREATE TABLE Addresses (
    address_id INT,
    line_1 TEXT,
    line_2 TEXT,
    city TEXT,
    zip_postcode TEXT,
    state_province_county TEXT,
    country TEXT
);

CREATE TABLE People (
    person_id INT,
    first_name TEXT,
    middle_name TEXT,
    last_name TEXT,
    cell_mobile_number TEXT,
    email_address TEXT,
    login_name TEXT,
    password TEXT
);

CREATE TABLE Students (
    student_id INT,
    student_details TEXT
);

CREATE TABLE Courses (
    course_id TEXT,
    course_name TEXT,
    course_description TEXT,
    other_details TEXT
);

CREATE TABLE People_Addresses (
    person_address_id INT,
    person_id INT,
    address_id INT,
    date_from TIME,
    date_to TIME
);

CREATE TABLE Student_Course_Registrations (
    student_id INT,
    course_id INT,
    registration_date TIME
);

CREATE TABLE Student_Course_Attendance (
    student_id INT,
    course_id INT,
    date_of_attendance TIME
);

CREATE TABLE Candidates (
    candidate_id INT,
    candidate_details TEXT
);

CREATE TABLE Candidate_Assessments (
    candidate_id INT,
    qualification TEXT,
    assessment_date TIME,
    asessment_outcome_code TEXT
);"
dog_kennels,"Breeds : breed_code (text) , breed_name (text) | Charges : charge_id (number) , charge_type (text) , charge_amount (number) | Sizes : size_code (text) , size_description (text) | Treatment_Types : treatment_type_code (text) , treatment_type_description (text) | Owners : owner_id (number) , first_name (text) , last_name (text) , street (text) , city (text) , state (text) , zip_code (text) , email_address (text) , home_phone (text) , cell_number (text) | Dogs : dog_id (number) , owner_id (number) , abandoned_yn (text) , breed_code (text) , size_code (text) , name (text) , age (text) , date_of_birth (time) , gender (text) , weight (text) , date_arrived (time) , date_adopted (time) , date_departed (time) | Professionals : professional_id (number) , role_code (text) , first_name (text) , street (text) , city (text) , state (text) , zip_code (text) , last_name (text) , email_address (text) , home_phone (text) , cell_number (text) | Treatments : treatment_id (number) , dog_id (number) , professional_id (number) , treatment_type_code (text) , date_of_treatment (time) , cost_of_treatment (number)","CREATE TABLE Breeds (
    breed_code TEXT,
    breed_name TEXT
);

CREATE TABLE Charges (
    charge_id INT,
    charge_type TEXT,
    charge_amount INT
);

CREATE TABLE Sizes (
    size_code TEXT,
    size_description TEXT
);

CREATE TABLE Treatment_Types (
    treatment_type_code TEXT,
    treatment_type_description TEXT
);

CREATE TABLE Owners (
    owner_id INT,
    first_name TEXT,
    last_name TEXT,
    street TEXT,
    city TEXT,
    state TEXT,
    zip_code TEXT,
    email_address TEXT,
    home_phone TEXT,
    cell_number TEXT
);

CREATE TABLE Dogs (
    dog_id INT,
    owner_id INT,
    abandoned_yn TEXT,
    breed_code TEXT,
    size_code TEXT,
    name TEXT,
    age TEXT,
    date_of_birth TIME,
    gender TEXT,
    weight TEXT,
    date_arrived TIME,
    date_adopted TIME,
    date_departed TIME
);

CREATE TABLE Professionals (
    professional_id INT,
    role_code TEXT,
    first_name TEXT,
    street TEXT,
    city TEXT,
    state TEXT,
    zip_code TEXT,
    last_name TEXT,
    email_address TEXT,
    home_phone TEXT,
    cell_number TEXT
);

CREATE TABLE Treatments (
    treatment_id INT,
    dog_id INT,
    professional_id INT,
    treatment_type_code TEXT,
    date_of_treatment TIME,
    cost_of_treatment INT
);"
music_1,"genre : g_name (text) , rating (text) , most_popular_in (text) | artist : artist_name (text) , country (text) , gender (text) , preferred_genre (text) | files : f_id (number) , artist_name (text) , file_size (text) , duration (text) , formats (text) | song : song_name (text) , artist_name (text) , country (text) , f_id (number) , genre_is (text) , rating (number) , languages (text) , releasedate (time) , resolution (number)","CREATE TABLE genre (
    g_name TEXT,
    rating TEXT,
    most_popular_in TEXT
);

CREATE TABLE artist (
    artist_name TEXT,
    country TEXT,
    gender TEXT,
    preferred_genre TEXT
);

CREATE TABLE files (
    f_id INT,
    artist_name TEXT,
    file_size TEXT,
    duration TEXT,
    formats TEXT
);

CREATE TABLE song (
    song_name TEXT,
    artist_name TEXT,
    country TEXT,
    f_id INT,
    genre_is TEXT,
    rating INT,
    languages TEXT,
    releasedate TIME,
    resolution INT
);"
company_employee,"people : People_ID (number) , Age (number) , Name (text) , Nationality (text) , Graduation_College (text) | company : Company_ID (number) , Name (text) , Headquarters (text) , Industry (text) , Sales_in_Billion (number) , Profits_in_Billion (number) , Assets_in_Billion (number) , Market_Value_in_Billion (number) | employment : Company_ID (number) , People_ID (number) , Year_working (number)","CREATE TABLE people (
    People_ID INT,
    Age INT,
    Name TEXT,
    Nationality TEXT,
    Graduation_College TEXT
);

CREATE TABLE company (
    Company_ID INT,
    Name TEXT,
    Headquarters TEXT,
    Industry TEXT,
    Sales_in_Billion INT,
    Profits_in_Billion INT,
    Assets_in_Billion INT,
    Market_Value_in_Billion INT
);

CREATE TABLE employment (
    Company_ID INT,
    People_ID INT,
    Year_working INT
);"
farm,"city : City_ID (number) , Official_Name (text) , Status (text) , Area_km_2 (number) , Population (number) , Census_Ranking (text) | farm : Farm_ID (number) , Year (number) , Total_Horses (number) , Working_Horses (number) , Total_Cattle (number) , Oxen (number) , Bulls (number) , Cows (number) , Pigs (number) , Sheep_and_Goats (number) | farm_competition : Competition_ID (number) , Year (number) , Theme (text) , Host_city_ID (number) , Hosts (text) | competition_record : Competition_ID (number) , Farm_ID (number) , Rank (number)","CREATE TABLE city (
    City_ID INT,
    Official_Name TEXT,
    Status TEXT,
    Area_km_2 INT,
    Population INT,
    Census_Ranking TEXT
);

CREATE TABLE farm (
    Farm_ID INT,
    Year INT,
    Total_Horses INT,
    Working_Horses INT,
    Total_Cattle INT,
    Oxen INT,
    Bulls INT,
    Cows INT,
    Pigs INT,
    Sheep_and_Goats INT
);

CREATE TABLE farm_competition (
    Competition_ID INT,
    Year INT,
    Theme TEXT,
    Host_city_ID INT,
    Hosts TEXT
);

CREATE TABLE competition_record (
    Competition_ID INT,
    Farm_ID INT,
    Rank INT
);"
solvency_ii,"Addresses : Address_ID (number) , address_details (text) | Locations : Location_ID (number) , Other_Details (text) | Products : Product_ID (number) , Product_Type_Code (text) , Product_Name (text) , Product_Price (number) | Parties : Party_ID (number) , Party_Details (text) | Assets : Asset_ID (number) , Other_Details (text) | Channels : Channel_ID (number) , Other_Details (text) | Finances : Finance_ID (number) , Other_Details (text) | Events : Event_ID (number) , Address_ID (number) , Channel_ID (number) , Event_Type_Code (text) , Finance_ID (number) , Location_ID (number) | Products_in_Events : Product_in_Event_ID (number) , Event_ID (number) , Product_ID (number) | Parties_in_Events : Party_ID (number) , Event_ID (number) , Role_Code (text) | Agreements : Document_ID (number) , Event_ID (number) | Assets_in_Events : Asset_ID (number) , Event_ID (number)","CREATE TABLE Addresses (
    Address_ID INT,
    address_details TEXT
);

CREATE TABLE Locations (
    Location_ID INT,
    Other_Details TEXT
);

CREATE TABLE Products (
    Product_ID INT,
    Product_Type_Code TEXT,
    Product_Name TEXT,
    Product_Price INT
);

CREATE TABLE Parties (
    Party_ID INT,
    Party_Details TEXT
);

CREATE TABLE Assets (
    Asset_ID INT,
    Other_Details TEXT
);

CREATE TABLE Channels (
    Channel_ID INT,
    Other_Details TEXT
);

CREATE TABLE Finances (
    Finance_ID INT,
    Other_Details TEXT
);

CREATE TABLE Events (
    Event_ID INT,
    Address_ID INT,
    Channel_ID INT,
    Event_Type_Code TEXT,
    Finance_ID INT,
    Location_ID INT
);

CREATE TABLE Products_in_Events (
    Product_in_Event_ID INT,
    Event_ID INT,
    Product_ID INT
);

CREATE TABLE Parties_in_Events (
    Party_ID INT,
    Event_ID INT,
    Role_Code TEXT
);

CREATE TABLE Agreements (
    Document_ID INT,
    Event_ID INT
);

CREATE TABLE Assets_in_Events (
    Asset_ID INT,
    Event_ID INT
);"
city_record,"city : City_ID (number) , City (text) , Hanzi (text) , Hanyu_Pinyin (text) , Regional_Population (number) , GDP (number) | match : Match_ID (number) , Date (text) , Venue (text) , Score (text) , Result (text) , Competition (text) | temperature : City_ID (number) , Jan (number) , Feb (number) , Mar (number) , Apr (number) , Jun (number) , Jul (number) , Aug (number) , Sep (number) , Oct (number) , Nov (number) , Dec (number) | hosting_city : Year (number) , Match_ID (number) , Host_City (text)","CREATE TABLE city (
    City_ID INT,
    City TEXT,
    Hanzi TEXT,
    Hanyu_Pinyin TEXT,
    Regional_Population INT,
    GDP INT
);

CREATE TABLE match (
    Match_ID INT,
    Date TEXT,
    Venue TEXT,
    Score TEXT,
    Result TEXT,
    Competition TEXT
);

CREATE TABLE temperature (
    City_ID INT,
    Jan INT,
    Feb INT,
    Mar INT,
    Apr INT,
    Jun INT,
    Jul INT,
    Aug INT,
    Sep INT,
    Oct INT,
    Nov INT,
    Dec INT
);

CREATE TABLE hosting_city (
    Year INT,
    Match_ID INT,
    Host_City TEXT
);"
swimming,"swimmer : ID (number) , name (text) , Nationality (text) , meter_100 (number) , meter_200 (text) , meter_300 (text) , meter_400 (text) , meter_500 (text) , meter_600 (text) , meter_700 (text) , Time (text) | stadium : ID (number) , name (text) , Capacity (number) , City (text) , Country (text) , Opening_year (number) | event : ID (number) , Name (text) , Stadium_ID (number) , Year (text) | record : ID (number) , Result (text) , Swimmer_ID (number) , Event_ID (number)","CREATE TABLE swimmer (
    ID INT,
    name TEXT,
    Nationality TEXT,
    meter_100 INT,
    meter_200 TEXT,
    meter_300 TEXT,
    meter_400 TEXT,
    meter_500 TEXT,
    meter_600 TEXT,
    meter_700 TEXT,
    Time TEXT
);

CREATE TABLE stadium (
    ID INT,
    name TEXT,
    Capacity INT,
    City TEXT,
    Country TEXT,
    Opening_year INT
);

CREATE TABLE event (
    ID INT,
    Name TEXT,
    Stadium_ID INT,
    Year TEXT
);

CREATE TABLE record (
    ID INT,
    Result TEXT,
    Swimmer_ID INT,
    Event_ID INT
);"
flight_2,"airlines : uid (number) , Airline (text) , Abbreviation (text) , Country (text) | airports : City (text) , AirportCode (text) , AirportName (text) , Country (text) , CountryAbbrev (text) | flights : Airline (number) , FlightNo (number) , SourceAirport (text) , DestAirport (text)","CREATE TABLE airlines (
    uid INT,
    Airline TEXT,
    Abbreviation TEXT,
    Country TEXT
);

CREATE TABLE airports (
    City TEXT,
    AirportCode TEXT,
    AirportName TEXT,
    Country TEXT,
    CountryAbbrev TEXT
);

CREATE TABLE flights (
    Airline INT,
    FlightNo INT,
    SourceAirport TEXT,
    DestAirport TEXT
);"
election,"county : County_Id (number) , County_name (text) , Population (number) , Zip_code (text) | party : Party_ID (number) , Year (number) , Party (text) , Governor (text) , Lieutenant_Governor (text) , Comptroller (text) , Attorney_General (text) , US_Senate (text) | election : Election_ID (number) , Counties_Represented (text) , District (number) , Delegate (text) , Party (number) , First_Elected (number) , Committee (text)","CREATE TABLE county (
    County_Id INT,
    County_name TEXT,
    Population INT,
    Zip_code TEXT
);

CREATE TABLE party (
    Party_ID INT,
    Year INT,
    Party TEXT,
    Governor TEXT,
    Lieutenant_Governor TEXT,
    Comptroller TEXT,
    Attorney_General TEXT,
    US_Senate TEXT
);

CREATE TABLE election (
    Election_ID INT,
    Counties_Represented TEXT,
    District INT,
    Delegate TEXT,
    Party INT,
    First_Elected INT,
    Committee TEXT
);"
manufactory_1,"Manufacturers : Code (number) , Name (text) , Headquarter (text) , Founder (text) , Revenue (number) | Products : Code (number) , Name (text) , Price (number) , Manufacturer (number)","CREATE TABLE Manufacturers (
    Code INT,
    Name TEXT,
    Headquarter TEXT,
    Founder TEXT,
    Revenue INT
);

CREATE TABLE Products (
    Code INT,
    Name TEXT,
    Price INT,
    Manufacturer INT
);"
debate,"people : People_ID (number) , District (text) , Name (text) , Party (text) , Age (number) | debate : Debate_ID (number) , Date (text) , Venue (text) , Num_of_Audience (number) | debate_people : Debate_ID (number) , Affirmative (number) , Negative (number) , If_Affirmative_Win (others)","CREATE TABLE people (
    People_ID INT,
    District TEXT,
    Name TEXT,
    Party TEXT,
    Age INT
);

CREATE TABLE debate (
    Debate_ID INT,
    Date TEXT,
    Venue TEXT,
    Num_of_Audience INT
);

CREATE TABLE debate_people (
    Debate_ID INT,
    Affirmative INT,
    Negative INT,
    If_Affirmative_Win OTHERS
);"
network_2,"Person : name (text) , age (number) , city (text) , gender (text) , job (text) | PersonFriend : name (text) , friend (text) , year (number)","CREATE TABLE Person (
    name TEXT,
    age INT,
    city TEXT,
    gender TEXT,
    job TEXT
);

CREATE TABLE PersonFriend (
    name TEXT,
    friend TEXT,
    year INT
);"
local_govt_in_alabama,"Services : Service_ID (number) , Service_Type_Code (text) | Participants : Participant_ID (number) , Participant_Type_Code (text) , Participant_Details (text) | Events : Event_ID (number) , Service_ID (number) , Event_Details (text) | Participants_in_Events : Event_ID (number) , Participant_ID (number)","CREATE TABLE Services (
    Service_ID INT,
    Service_Type_Code TEXT
);

CREATE TABLE Participants (
    Participant_ID INT,
    Participant_Type_Code TEXT,
    Participant_Details TEXT
);

CREATE TABLE Events (
    Event_ID INT,
    Service_ID INT,
    Event_Details TEXT
);

CREATE TABLE Participants_in_Events (
    Event_ID INT,
    Participant_ID INT
);"
climbing,"mountain : Mountain_ID (number) , Name (text) , Height (number) , Prominence (number) , Range (text) , Country (text) | climber : Climber_ID (number) , Name (text) , Country (text) , Time (text) , Points (number) , Mountain_ID (number)","CREATE TABLE mountain (
    Mountain_ID INT,
    Name TEXT,
    Height INT,
    Prominence INT,
    Range TEXT,
    Country TEXT
);

CREATE TABLE climber (
    Climber_ID INT,
    Name TEXT,
    Country TEXT,
    Time TEXT,
    Points INT,
    Mountain_ID INT
);"
e_learning,"Course_Authors_and_Tutors : author_id (number) , author_tutor_ATB (text) , login_name (text) , password (text) , personal_name (text) , middle_name (text) , family_name (text) , gender_mf (text) , address_line_1 (text) | Students : student_id (number) , date_of_registration (time) , date_of_latest_logon (time) , login_name (text) , password (text) , personal_name (text) , middle_name (text) , family_name (text) | Subjects : subject_id (number) , subject_name (text) | Courses : course_id (number) , author_id (number) , subject_id (number) , course_name (text) , course_description (text) | Student_Course_Enrolment : registration_id (number) , student_id (number) , course_id (number) , date_of_enrolment (time) , date_of_completion (time) | Student_Tests_Taken : registration_id (number) , date_test_taken (time) , test_result (text)","CREATE TABLE Course_Authors_and_Tutors (
    author_id INT,
    author_tutor_ATB TEXT,
    login_name TEXT,
    password TEXT,
    personal_name TEXT,
    middle_name TEXT,
    family_name TEXT,
    gender_mf TEXT,
    address_line_1 TEXT
);

CREATE TABLE Students (
    student_id INT,
    date_of_registration TIME,
    date_of_latest_logon TIME,
    login_name TEXT,
    password TEXT,
    personal_name TEXT,
    middle_name TEXT,
    family_name TEXT
);

CREATE TABLE Subjects (
    subject_id INT,
    subject_name TEXT
);

CREATE TABLE Courses (
    course_id INT,
    author_id INT,
    subject_id INT,
    course_name TEXT,
    course_description TEXT
);

CREATE TABLE Student_Course_Enrolment (
    registration_id INT,
    student_id INT,
    course_id INT,
    date_of_enrolment TIME,
    date_of_completion TIME
);

CREATE TABLE Student_Tests_Taken (
    registration_id INT,
    date_test_taken TIME,
    test_result TEXT
);"
scientist_1,"Scientists : SSN (number) , Name (text) | Projects : Code (text) , Name (text) , Hours (number) | AssignedTo : Scientist (number) , Project (text)","CREATE TABLE Scientists (
    SSN INT,
    Name TEXT
);

CREATE TABLE Projects (
    Code TEXT,
    Name TEXT,
    Hours INT
);

CREATE TABLE AssignedTo (
    Scientist INT,
    Project TEXT
);"
ship_1,"captain : Captain_ID (number) , Name (text) , Ship_ID (number) , age (text) , Class (text) , Rank (text) | Ship : Ship_ID (number) , Name (text) , Type (text) , Built_Year (number) , Class (text) , Flag (text)","CREATE TABLE captain (
    Captain_ID INT,
    Name TEXT,
    Ship_ID INT,
    age TEXT,
    Class TEXT,
    Rank TEXT
);

CREATE TABLE Ship (
    Ship_ID INT,
    Name TEXT,
    Type TEXT,
    Built_Year INT,
    Class TEXT,
    Flag TEXT
);"
entertainment_awards,"festival_detail : Festival_ID (number) , Festival_Name (text) , Chair_Name (text) , Location (text) , Year (number) , Num_of_Audience (number) | artwork : Artwork_ID (number) , Type (text) , Name (text) | nomination : Artwork_ID (number) , Festival_ID (number) , Result (text)","CREATE TABLE festival_detail (
    Festival_ID INT,
    Festival_Name TEXT,
    Chair_Name TEXT,
    Location TEXT,
    Year INT,
    Num_of_Audience INT
);

CREATE TABLE artwork (
    Artwork_ID INT,
    Type TEXT,
    Name TEXT
);

CREATE TABLE nomination (
    Artwork_ID INT,
    Festival_ID INT,
    Result TEXT
);"
allergy_1,"Allergy_Type : Allergy (text) , AllergyType (text) | Has_Allergy : StuID (number) , Allergy (text) | Student : StuID (number) , LName (text) , Fname (text) , Age (number) , Sex (text) , Major (number) , Advisor (number) , city_code (text)","CREATE TABLE Allergy_Type (
    Allergy TEXT,
    AllergyType TEXT
);

CREATE TABLE Has_Allergy (
    StuID INT,
    Allergy TEXT
);

CREATE TABLE Student (
    StuID INT,
    LName TEXT,
    Fname TEXT,
    Age INT,
    Sex TEXT,
    Major INT,
    Advisor INT,
    city_code TEXT
);"
imdb,"actor : aid (number) , gender (text) , name (text) , nationality (text) , birth_city (text) , birth_year (number) | copyright : id (number) , msid (number) , cid (number) | cast : id (number) , msid (number) , aid (number) , role (number) | genre : gid (number) , genre (text) | classification : id (number) , msid (number) , gid (number) | company : id (number) , name (text) , country_code (text) | director : did (number) , gender (text) , name (text) , nationality (text) , birth_city (text) , birth_year (number) | producer : pid (number) , gender (text) , name (text) , nationality (text) , birth_city (text) , birth_year (number) | directed_by : id (number) , msid (number) , did (number) | keyword : id (number) , keyword (text) | made_by : id (number) , msid (number) , pid (number) | movie : mid (number) , title (text) , release_year (number) , title_aka (text) , budget (text) | tags : id (number) , msid (number) , kid (number) | tv_series : sid (number) , title (text) , release_year (number) , num_of_seasons (number) , num_of_episodes (number) , title_aka (text) , budget (text) | writer : wid (number) , gender (text) , name (number) , nationality (number) , num_of_episodes (number) , birth_city (text) , birth_year (number) | written_by : id (number) , msid (number) , wid (number)","CREATE TABLE actor (
    aid INT,
    gender TEXT,
    name TEXT,
    nationality TEXT,
    birth_city TEXT,
    birth_year INT
);

CREATE TABLE copyright (
    id INT,
    msid INT,
    cid INT
);

CREATE TABLE cast (
    id INT,
    msid INT,
    aid INT,
    role INT
);

CREATE TABLE genre (
    gid INT,
    genre TEXT
);

CREATE TABLE classification (
    id INT,
    msid INT,
    gid INT
);

CREATE TABLE company (
    id INT,
    name TEXT,
    country_code TEXT
);

CREATE TABLE director (
    did INT,
    gender TEXT,
    name TEXT,
    nationality TEXT,
    birth_city TEXT,
    birth_year INT
);

CREATE TABLE producer (
    pid INT,
    gender TEXT,
    name TEXT,
    nationality TEXT,
    birth_city TEXT,
    birth_year INT
);

CREATE TABLE directed_by (
    id INT,
    msid INT,
    did INT
);

CREATE TABLE keyword (
    id INT,
    keyword TEXT
);

CREATE TABLE made_by (
    id INT,
    msid INT,
    pid INT
);

CREATE TABLE movie (
    mid INT,
    title TEXT,
    release_year INT,
    title_aka TEXT,
    budget TEXT
);

CREATE TABLE tags (
    id INT,
    msid INT,
    kid INT
);

CREATE TABLE tv_series (
    sid INT,
    title TEXT,
    release_year INT,
    num_of_seasons INT,
    num_of_episodes INT,
    title_aka TEXT,
    budget TEXT
);

CREATE TABLE writer (
    wid INT,
    gender TEXT,
    name INT,
    nationality INT,
    num_of_episodes INT,
    birth_city TEXT,
    birth_year INT
);

CREATE TABLE written_by (
    id INT,
    msid INT,
    wid INT
);"
products_for_hire,"Discount_Coupons : coupon_id (number) , date_issued (time) , coupon_amount (number) | Customers : customer_id (number) , coupon_id (number) , good_or_bad_customer (text) , first_name (text) , last_name (text) , gender_mf (text) , date_became_customer (time) , date_last_hire (time) | Bookings : booking_id (number) , customer_id (number) , booking_status_code (text) , returned_damaged_yn (text) , booking_start_date (time) , booking_end_date (time) , count_hired (text) , amount_payable (number) , amount_of_discount (number) , amount_outstanding (number) , amount_of_refund (number) | Products_for_Hire : product_id (number) , product_type_code (text) , daily_hire_cost (number) , product_name (text) , product_description (text) | Payments : payment_id (number) , booking_id (number) , customer_id (number) , payment_type_code (text) , amount_paid_in_full_yn (text) , payment_date (time) , amount_due (number) , amount_paid (number) | Products_Booked : booking_id (number) , product_id (number) , returned_yn (text) , returned_late_yn (text) , booked_count (number) , booked_amount (number) | View_Product_Availability : product_id (number) , booking_id (number) , status_date (time) , available_yn (text)","CREATE TABLE Discount_Coupons (
    coupon_id INT,
    date_issued TIME,
    coupon_amount INT
);

CREATE TABLE Customers (
    customer_id INT,
    coupon_id INT,
    good_or_bad_customer TEXT,
    first_name TEXT,
    last_name TEXT,
    gender_mf TEXT,
    date_became_customer TIME,
    date_last_hire TIME
);

CREATE TABLE Bookings (
    booking_id INT,
    customer_id INT,
    booking_status_code TEXT,
    returned_damaged_yn TEXT,
    booking_start_date TIME,
    booking_end_date TIME,
    count_hired TEXT,
    amount_payable INT,
    amount_of_discount INT,
    amount_outstanding INT,
    amount_of_refund INT
);

CREATE TABLE Products_for_Hire (
    product_id INT,
    product_type_code TEXT,
    daily_hire_cost INT,
    product_name TEXT,
    product_description TEXT
);

CREATE TABLE Payments (
    payment_id INT,
    booking_id INT,
    customer_id INT,
    payment_type_code TEXT,
    amount_paid_in_full_yn TEXT,
    payment_date TIME,
    amount_due INT,
    amount_paid INT
);

CREATE TABLE Products_Booked (
    booking_id INT,
    product_id INT,
    returned_yn TEXT,
    returned_late_yn TEXT,
    booked_count INT,
    booked_amount INT
);

CREATE TABLE View_Product_Availability (
    product_id INT,
    booking_id INT,
    status_date TIME,
    available_yn TEXT
);"
candidate_poll,"candidate : Candidate_ID (number) , People_ID (number) , Poll_Source (text) , Date (text) , Support_rate (number) , Consider_rate (number) , Oppose_rate (number) , Unsure_rate (number) | people : People_ID (number) , Sex (text) , Name (text) , Date_of_Birth (text) , Height (number) , Weight (number)","CREATE TABLE candidate (
    Candidate_ID INT,
    People_ID INT,
    Poll_Source TEXT,
    Date TEXT,
    Support_rate INT,
    Consider_rate INT,
    Oppose_rate INT,
    Unsure_rate INT
);

CREATE TABLE people (
    People_ID INT,
    Sex TEXT,
    Name TEXT,
    Date_of_Birth TEXT,
    Height INT,
    Weight INT
);"
chinook_1,"Album : AlbumId (number) , Title (text) , ArtistId (number) | Artist : ArtistId (number) , Name (text) | Customer : CustomerId (number) , FirstName (text) , LastName (text) , Company (text) , Address (text) , City (text) , State (text) , Country (text) , PostalCode (text) , Phone (text) , Fax (text) , Email (text) , SupportRepId (number) | Employee : EmployeeId (number) , LastName (text) , FirstName (text) , Title (text) , ReportsTo (number) , BirthDate (time) , HireDate (time) , Address (text) , City (text) , State (text) , Country (text) , PostalCode (text) , Phone (text) , Fax (text) , Email (text) | Genre : GenreId (number) , Name (text) | Invoice : InvoiceId (number) , CustomerId (number) , InvoiceDate (time) , BillingAddress (text) , BillingCity (text) , BillingState (text) , BillingCountry (text) , BillingPostalCode (text) , Total (number) | InvoiceLine : InvoiceLineId (number) , InvoiceId (number) , TrackId (number) , UnitPrice (number) , Quantity (number) | MediaType : MediaTypeId (number) , Name (text) | Playlist : PlaylistId (number) , Name (text) | PlaylistTrack : PlaylistId (number) , TrackId (number) | Track : TrackId (number) , Name (text) , AlbumId (number) , MediaTypeId (number) , GenreId (number) , Composer (text) , Milliseconds (number) , Bytes (number) , UnitPrice (number)","CREATE TABLE Album (
    AlbumId INT,
    Title TEXT,
    ArtistId INT
);

CREATE TABLE Artist (
    ArtistId INT,
    Name TEXT
);

CREATE TABLE Customer (
    CustomerId INT,
    FirstName TEXT,
    LastName TEXT,
    Company TEXT,
    Address TEXT,
    City TEXT,
    State TEXT,
    Country TEXT,
    PostalCode TEXT,
    Phone TEXT,
    Fax TEXT,
    Email TEXT,
    SupportRepId INT
);

CREATE TABLE Employee (
    EmployeeId INT,
    LastName TEXT,
    FirstName TEXT,
    Title TEXT,
    ReportsTo INT,
    BirthDate TIME,
    HireDate TIME,
    Address TEXT,
    City TEXT,
    State TEXT,
    Country TEXT,
    PostalCode TEXT,
    Phone TEXT,
    Fax TEXT,
    Email TEXT
);

CREATE TABLE Genre (
    GenreId INT,
    Name TEXT
);

CREATE TABLE Invoice (
    InvoiceId INT,
    CustomerId INT,
    InvoiceDate TIME,
    BillingAddress TEXT,
    BillingCity TEXT,
    BillingState TEXT,
    BillingCountry TEXT,
    BillingPostalCode TEXT,
    Total INT
);

CREATE TABLE InvoiceLine (
    InvoiceLineId INT,
    InvoiceId INT,
    TrackId INT,
    UnitPrice INT,
    Quantity INT
);

CREATE TABLE MediaType (
    MediaTypeId INT,
    Name TEXT
);

CREATE TABLE Playlist (
    PlaylistId INT,
    Name TEXT
);

CREATE TABLE PlaylistTrack (
    PlaylistId INT,
    TrackId INT
);

CREATE TABLE Track (
    TrackId INT,
    Name TEXT,
    AlbumId INT,
    MediaTypeId INT,
    GenreId INT,
    Composer TEXT,
    Milliseconds INT,
    Bytes INT,
    UnitPrice INT
);"
flight_4,"routes : rid (number) , dst_apid (number) , dst_ap (text) , src_apid (number) , src_ap (text) , alid (number) , airline (text) , codeshare (text) | airports : apid (number) , name (text) , city (text) , country (text) , x (number) , y (number) , elevation (number) , iata (text) , icao (text) | airlines : alid (number) , name (text) , iata (text) , icao (text) , callsign (text) , country (text) , active (text)","CREATE TABLE routes (
    rid INT,
    dst_apid INT,
    dst_ap TEXT,
    src_apid INT,
    src_ap TEXT,
    alid INT,
    airline TEXT,
    codeshare TEXT
);

CREATE TABLE airports (
    apid INT,
    name TEXT,
    city TEXT,
    country TEXT,
    x INT,
    y INT,
    elevation INT,
    iata TEXT,
    icao TEXT
);

CREATE TABLE airlines (
    alid INT,
    name TEXT,
    iata TEXT,
    icao TEXT,
    callsign TEXT,
    country TEXT,
    active TEXT
);"
pets_1,"Student : StuID (number) , LName (text) , Fname (text) , Age (number) , Sex (text) , Major (number) , Advisor (number) , city_code (text) | Has_Pet : StuID (number) , PetID (number) | Pets : PetID (number) , PetType (text) , pet_age (number) , weight (number)","CREATE TABLE Student (
    StuID INT,
    LName TEXT,
    Fname TEXT,
    Age INT,
    Sex TEXT,
    Major INT,
    Advisor INT,
    city_code TEXT
);

CREATE TABLE Has_Pet (
    StuID INT,
    PetID INT
);

CREATE TABLE Pets (
    PetID INT,
    PetType TEXT,
    pet_age INT,
    weight INT
);"
dorm_1,"Student : StuID (number) , LName (text) , Fname (text) , Age (number) , Sex (text) , Major (number) , Advisor (number) , city_code (text) | Dorm : dormid (number) , dorm_name (text) , student_capacity (number) , gender (text) | Dorm_amenity : amenid (number) , amenity_name (text) | Has_amenity : dormid (number) , amenid (number) | Lives_in : stuid (number) , dormid (number) , room_number (number)","CREATE TABLE Student (
    StuID INT,
    LName TEXT,
    Fname TEXT,
    Age INT,
    Sex TEXT,
    Major INT,
    Advisor INT,
    city_code TEXT
);

CREATE TABLE Dorm (
    dormid INT,
    dorm_name TEXT,
    student_capacity INT,
    gender TEXT
);

CREATE TABLE Dorm_amenity (
    amenid INT,
    amenity_name TEXT
);

CREATE TABLE Has_amenity (
    dormid INT,
    amenid INT
);

CREATE TABLE Lives_in (
    stuid INT,
    dormid INT,
    room_number INT
);"
journal_committee,"journal : Journal_ID (number) , Date (text) , Theme (text) , Sales (number) | editor : Editor_ID (number) , Name (text) , Age (number) | journal_committee : Editor_ID (number) , Journal_ID (number) , Work_Type (text)","CREATE TABLE journal (
    Journal_ID INT,
    Date TEXT,
    Theme TEXT,
    Sales INT
);

CREATE TABLE editor (
    Editor_ID INT,
    Name TEXT,
    Age INT
);

CREATE TABLE journal_committee (
    Editor_ID INT,
    Journal_ID INT,
    Work_Type TEXT
);"
flight_1,"flight : flno (number) , origin (text) , destination (text) , distance (number) , departure_date (time) , arrival_date (time) , price (number) , aid (number) | aircraft : aid (number) , name (text) , distance (number) | employee : eid (number) , name (text) , salary (number) | certificate : eid (number) , aid (number)","CREATE TABLE flight (
    flno INT,
    origin TEXT,
    destination TEXT,
    distance INT,
    departure_date TIME,
    arrival_date TIME,
    price INT,
    aid INT
);

CREATE TABLE aircraft (
    aid INT,
    name TEXT,
    distance INT
);

CREATE TABLE employee (
    eid INT,
    name TEXT,
    salary INT
);

CREATE TABLE certificate (
    eid INT,
    aid INT
);"
medicine_enzyme_interaction,"medicine : id (number) , name (text) , Trade_Name (text) , FDA_approved (text) | enzyme : id (number) , name (text) , Location (text) , Product (text) , Chromosome (text) , OMIM (number) , Porphyria (text) | medicine_enzyme_interaction : enzyme_id (number) , medicine_id (number) , interaction_type (text)","CREATE TABLE medicine (
    id INT,
    name TEXT,
    Trade_Name TEXT,
    FDA_approved TEXT
);

CREATE TABLE enzyme (
    id INT,
    name TEXT,
    Location TEXT,
    Product TEXT,
    Chromosome TEXT,
    OMIM INT,
    Porphyria TEXT
);

CREATE TABLE medicine_enzyme_interaction (
    enzyme_id INT,
    medicine_id INT,
    interaction_type TEXT
);"
local_govt_and_lot,"Customers : customer_id (number) , customer_details (text) | Properties : property_id (number) , property_type_code (text) , property_address (text) , other_details (text) | Residents : resident_id (number) , property_id (number) , date_moved_in (time) , date_moved_out (time) , other_details (text) | Organizations : organization_id (number) , parent_organization_id (number) , organization_details (text) | Services : service_id (number) , organization_id (number) , service_type_code (text) , service_details (text) | Residents_Services : resident_id (number) , service_id (number) , date_moved_in (time) , property_id (number) , date_requested (time) , date_provided (time) , other_details (text) | Things : thing_id (number) , organization_id (number) , Type_of_Thing_Code (text) , service_type_code (text) , service_details (text) | Customer_Events : Customer_Event_ID (number) , customer_id (number) , date_moved_in (time) , property_id (number) , resident_id (number) , thing_id (number) | Customer_Event_Notes : Customer_Event_Note_ID (number) , Customer_Event_ID (number) , service_type_code (text) , resident_id (number) , property_id (number) , date_moved_in (time) | Timed_Status_of_Things : thing_id (number) , Date_and_Date (time) , Status_of_Thing_Code (text) | Timed_Locations_of_Things : thing_id (number) , Date_and_Time (time) , Location_Code (text)","CREATE TABLE Customers (
    customer_id INT,
    customer_details TEXT
);

CREATE TABLE Properties (
    property_id INT,
    property_type_code TEXT,
    property_address TEXT,
    other_details TEXT
);

CREATE TABLE Residents (
    resident_id INT,
    property_id INT,
    date_moved_in TIME,
    date_moved_out TIME,
    other_details TEXT
);

CREATE TABLE Organizations (
    organization_id INT,
    parent_organization_id INT,
    organization_details TEXT
);

CREATE TABLE Services (
    service_id INT,
    organization_id INT,
    service_type_code TEXT,
    service_details TEXT
);

CREATE TABLE Residents_Services (
    resident_id INT,
    service_id INT,
    date_moved_in TIME,
    property_id INT,
    date_requested TIME,
    date_provided TIME,
    other_details TEXT
);

CREATE TABLE Things (
    thing_id INT,
    organization_id INT,
    Type_of_Thing_Code TEXT,
    service_type_code TEXT,
    service_details TEXT
);

CREATE TABLE Customer_Events (
    Customer_Event_ID INT,
    customer_id INT,
    date_moved_in TIME,
    property_id INT,
    resident_id INT,
    thing_id INT
);

CREATE TABLE Customer_Event_Notes (
    Customer_Event_Note_ID INT,
    Customer_Event_ID INT,
    service_type_code TEXT,
    resident_id INT,
    property_id INT,
    date_moved_in TIME
);

CREATE TABLE Timed_Status_of_Things (
    thing_id INT,
    Date_and_Date TIME,
    Status_of_Thing_Code TEXT
);

CREATE TABLE Timed_Locations_of_Things (
    thing_id INT,
    Date_and_Time TIME,
    Location_Code TEXT
);"
station_weather,"train : id (number) , train_number (number) , name (text) , origin (text) , destination (text) , time (text) , interval (text) | station : id (number) , network_name (text) , services (text) , local_authority (text) | route : train_id (number) , station_id (number) | weekly_weather : station_id (number) , day_of_week (text) , high_temperature (number) , low_temperature (number) , precipitation (number) , wind_speed_mph (number)","CREATE TABLE train (
    id INT,
    train_number INT,
    name TEXT,
    origin TEXT,
    destination TEXT,
    time TEXT,
    interval TEXT
);

CREATE TABLE station (
    id INT,
    network_name TEXT,
    services TEXT,
    local_authority TEXT
);

CREATE TABLE route (
    train_id INT,
    station_id INT
);

CREATE TABLE weekly_weather (
    station_id INT,
    day_of_week TEXT,
    high_temperature INT,
    low_temperature INT,
    precipitation INT,
    wind_speed_mph INT
);"
shop_membership,"member : Member_ID (number) , Card_Number (text) , Name (text) , Hometown (text) , Level (number) | branch : Branch_ID (number) , Name (text) , Open_year (text) , Address_road (text) , City (text) , membership_amount (text) | membership_register_branch : Member_ID (number) , Branch_ID (text) , Register_Year (text) | purchase : Member_ID (number) , Branch_ID (text) , Year (text) , Total_pounds (number)","CREATE TABLE member (
    Member_ID INT,
    Card_Number TEXT,
    Name TEXT,
    Hometown TEXT,
    Level INT
);

CREATE TABLE branch (
    Branch_ID INT,
    Name TEXT,
    Open_year TEXT,
    Address_road TEXT,
    City TEXT,
    membership_amount TEXT
);

CREATE TABLE membership_register_branch (
    Member_ID INT,
    Branch_ID TEXT,
    Register_Year TEXT
);

CREATE TABLE purchase (
    Member_ID INT,
    Branch_ID TEXT,
    Year TEXT,
    Total_pounds INT
);"
driving_school,"Addresses : address_id (number) , line_1_number_building (text) , city (text) , zip_postcode (text) , state_province_county (text) , country (text) | Staff : staff_id (number) , staff_address_id (number) , nickname (text) , first_name (text) , middle_name (text) , last_name (text) , date_of_birth (time) , date_joined_staff (time) , date_left_staff (time) | Vehicles : vehicle_id (number) , vehicle_details (text) | Customers : customer_id (number) , customer_address_id (number) , customer_status_code (text) , date_became_customer (time) , date_of_birth (time) , first_name (text) , last_name (text) , amount_outstanding (number) , email_address (text) , phone_number (text) , cell_mobile_phone_number (text) | Customer_Payments : customer_id (number) , datetime_payment (time) , payment_method_code (text) , amount_payment (number) | Lessons : lesson_id (number) , customer_id (number) , lesson_status_code (text) , staff_id (number) , vehicle_id (number) , lesson_date (time) , lesson_time (text) , price (number)","CREATE TABLE Addresses (
    address_id INT,
    line_1_number_building TEXT,
    city TEXT,
    zip_postcode TEXT,
    state_province_county TEXT,
    country TEXT
);

CREATE TABLE Staff (
    staff_id INT,
    staff_address_id INT,
    nickname TEXT,
    first_name TEXT,
    middle_name TEXT,
    last_name TEXT,
    date_of_birth TIME,
    date_joined_staff TIME,
    date_left_staff TIME
);

CREATE TABLE Vehicles (
    vehicle_id INT,
    vehicle_details TEXT
);

CREATE TABLE Customers (
    customer_id INT,
    customer_address_id INT,
    customer_status_code TEXT,
    date_became_customer TIME,
    date_of_birth TIME,
    first_name TEXT,
    last_name TEXT,
    amount_outstanding INT,
    email_address TEXT,
    phone_number TEXT,
    cell_mobile_phone_number TEXT
);

CREATE TABLE Customer_Payments (
    customer_id INT,
    datetime_payment TIME,
    payment_method_code TEXT,
    amount_payment INT
);

CREATE TABLE Lessons (
    lesson_id INT,
    customer_id INT,
    lesson_status_code TEXT,
    staff_id INT,
    vehicle_id INT,
    lesson_date TIME,
    lesson_time TEXT,
    price INT
);"
concert_singer,"stadium : Stadium_ID (number) , Location (text) , Name (text) , Capacity (number) , Highest (number) , Lowest (number) , Average (number) | singer : Singer_ID (number) , Name (text) , Country (text) , Song_Name (text) , Song_release_year (text) , Age (number) , Is_male (others) | concert : concert_ID (number) , concert_Name (text) , Theme (text) , Stadium_ID (text) , Year (text) | singer_in_concert : concert_ID (number) , Singer_ID (text)","CREATE TABLE stadium (
    Stadium_ID INT,
    Location TEXT,
    Name TEXT,
    Capacity INT,
    Highest INT,
    Lowest INT,
    Average INT
);

CREATE TABLE singer (
    Singer_ID INT,
    Name TEXT,
    Country TEXT,
    Song_Name TEXT,
    Song_release_year TEXT,
    Age INT,
    Is_male OTHERS
);

CREATE TABLE concert (
    concert_ID INT,
    concert_Name TEXT,
    Theme TEXT,
    Stadium_ID TEXT,
    Year TEXT
);

CREATE TABLE singer_in_concert (
    concert_ID INT,
    Singer_ID TEXT
);"
music_2,"Songs : SongId (number) , Title (text) | Albums : AId (number) , Title (text) , Year (number) , Label (text) , Type (text) | Band : Id (number) , Firstname (text) , Lastname (text) | Instruments : SongId (number) , BandmateId (number) , Instrument (text) | Performance : SongId (number) , Bandmate (number) , StagePosition (text) | Tracklists : AlbumId (number) , Position (number) , SongId (number) | Vocals : SongId (number) , Bandmate (number) , Type (text)","CREATE TABLE Songs (
    SongId INT,
    Title TEXT
);

CREATE TABLE Albums (
    AId INT,
    Title TEXT,
    Year INT,
    Label TEXT,
    Type TEXT
);

CREATE TABLE Band (
    Id INT,
    Firstname TEXT,
    Lastname TEXT
);

CREATE TABLE Instruments (
    SongId INT,
    BandmateId INT,
    Instrument TEXT
);

CREATE TABLE Performance (
    SongId INT,
    Bandmate INT,
    StagePosition TEXT
);

CREATE TABLE Tracklists (
    AlbumId INT,
    Position INT,
    SongId INT
);

CREATE TABLE Vocals (
    SongId INT,
    Bandmate INT,
    Type TEXT
);"
sports_competition,"club : Club_ID (number) , name (text) , Region (text) , Start_year (text) | club_rank : Rank (number) , Club_ID (number) , Gold (number) , Silver (number) , Bronze (number) , Total (number) | player : Player_ID (number) , name (text) , Position (text) , Club_ID (number) , Apps (number) , Tries (number) , Goals (text) , Points (number) | competition : Competition_ID (number) , Year (number) , Competition_type (text) , Country (text) | competition_result : Competition_ID (number) , Club_ID_1 (number) , Club_ID_2 (number) , Score (text)","CREATE TABLE club (
    Club_ID INT,
    name TEXT,
    Region TEXT,
    Start_year TEXT
);

CREATE TABLE club_rank (
    Rank INT,
    Club_ID INT,
    Gold INT,
    Silver INT,
    Bronze INT,
    Total INT
);

CREATE TABLE player (
    Player_ID INT,
    name TEXT,
    Position TEXT,
    Club_ID INT,
    Apps INT,
    Tries INT,
    Goals TEXT,
    Points INT
);

CREATE TABLE competition (
    Competition_ID INT,
    Year INT,
    Competition_type TEXT,
    Country TEXT
);

CREATE TABLE competition_result (
    Competition_ID INT,
    Club_ID_1 INT,
    Club_ID_2 INT,
    Score TEXT
);"
railway,"railway : Railway_ID (number) , Railway (text) , Builder (text) , Built (text) , Wheels (text) , Location (text) , ObjectNumber (text) | train : Train_ID (number) , Train_Num (text) , Name (text) , From (text) , Arrival (text) , Railway_ID (number) | manager : Manager_ID (number) , Name (text) , Country (text) , Working_year_starts (text) , Age (number) , Level (number) | railway_manage : Railway_ID (number) , Manager_ID (number) , From_Year (text)","CREATE TABLE railway (
    Railway_ID INT,
    Railway TEXT,
    Builder TEXT,
    Built TEXT,
    Wheels TEXT,
    Location TEXT,
    ObjectNumber TEXT
);

CREATE TABLE train (
    Train_ID INT,
    Train_Num TEXT,
    Name TEXT,
    From TEXT,
    Arrival TEXT,
    Railway_ID INT
);

CREATE TABLE manager (
    Manager_ID INT,
    Name TEXT,
    Country TEXT,
    Working_year_starts TEXT,
    Age INT,
    Level INT
);

CREATE TABLE railway_manage (
    Railway_ID INT,
    Manager_ID INT,
    From_Year TEXT
);"
inn_1,"Rooms : RoomId (text) , roomName (text) , beds (number) , bedType (text) , maxOccupancy (number) , basePrice (number) , decor (text) | Reservations : Code (number) , Room (text) , CheckIn (text) , CheckOut (text) , Rate (number) , LastName (text) , FirstName (text) , Adults (number) , Kids (number)","CREATE TABLE Rooms (
    RoomId TEXT,
    roomName TEXT,
    beds INT,
    bedType TEXT,
    maxOccupancy INT,
    basePrice INT,
    decor TEXT
);

CREATE TABLE Reservations (
    Code INT,
    Room TEXT,
    CheckIn TEXT,
    CheckOut TEXT,
    Rate INT,
    LastName TEXT,
    FirstName TEXT,
    Adults INT,
    Kids INT
);"
museum_visit,"museum : Museum_ID (number) , Name (text) , Num_of_Staff (number) , Open_Year (text) | visitor : ID (number) , Name (text) , Level_of_membership (number) , Age (number) | visit : Museum_ID (number) , visitor_ID (text) , Num_of_Ticket (number) , Total_spent (number)","CREATE TABLE museum (
    Museum_ID INT,
    Name TEXT,
    Num_of_Staff INT,
    Open_Year TEXT
);

CREATE TABLE visitor (
    ID INT,
    Name TEXT,
    Level_of_membership INT,
    Age INT
);

CREATE TABLE visit (
    Museum_ID INT,
    visitor_ID TEXT,
    Num_of_Ticket INT,
    Total_spent INT
);"
browser_web,"Web_client_accelerator : id (number) , name (text) , Operating_system (text) , Client (text) , Connection (text) | browser : id (number) , name (text) , market_share (number) | accelerator_compatible_browser : accelerator_id (number) , browser_id (number) , compatible_since_year (number)","CREATE TABLE Web_client_accelerator (
    id INT,
    name TEXT,
    Operating_system TEXT,
    Client TEXT,
    Connection TEXT
);

CREATE TABLE browser (
    id INT,
    name TEXT,
    market_share INT
);

CREATE TABLE accelerator_compatible_browser (
    accelerator_id INT,
    browser_id INT,
    compatible_since_year INT
);"
baseball_1,"all_star : player_id (text) , year (number) , game_num (number) , game_id (text) , team_id (text) , league_id (text) , gp (number) , starting_pos (number) | appearances : year (number) , team_id (text) , league_id (text) , player_id (text) , g_all (number) , gs (number) , g_batting (number) , g_defense (number) , g_p (number) , g_c (number) , g_1b (number) , g_2b (number) , g_3b (number) , g_ss (number) , g_lf (number) , g_cf (number) , g_rf (number) , g_of (number) , g_dh (number) , g_ph (number) , g_pr (number) | manager_award : player_id (text) , award_id (text) , year (number) , league_id (text) , tie (text) , notes (number) | player_award : player_id (text) , award_id (text) , year (number) , league_id (text) , tie (text) , notes (text) | manager_award_vote : award_id (text) , year (number) , league_id (text) , player_id (text) , points_won (number) , points_max (number) , votes_first (number) | player_award_vote : award_id (text) , year (number) , league_id (text) , player_id (text) , points_won (number) , points_max (number) , votes_first (number) | batting : player_id (text) , year (number) , stint (number) , team_id (text) , league_id (text) , g (number) , ab (number) , r (number) , h (number) , double (number) , triple (number) , hr (number) , rbi (number) , sb (number) , cs (number) , bb (number) , so (number) , ibb (number) , hbp (number) , sh (number) , sf (number) , g_idp (number) | batting_postseason : year (number) , round (text) , player_id (text) , team_id (text) , league_id (text) , g (number) , ab (number) , r (number) , h (number) , double (number) , triple (number) , hr (number) , rbi (number) , sb (number) , cs (number) , bb (number) , so (number) , ibb (number) , hbp (number) , sh (number) , sf (number) , g_idp (number) | player_college : player_id (text) , college_id (text) , year (number) | fielding : player_id (text) , year (number) , stint (number) , team_id (text) , league_id (text) , pos (text) , g (number) , gs (number) , inn_outs (number) , po (number) , a (number) , e (number) , dp (number) , pb (number) , wp (number) , sb (number) , cs (number) , zr (number) | fielding_outfield : player_id (text) , year (number) , stint (number) , glf (number) , gcf (number) , grf (number) | fielding_postseason : player_id (text) , year (number) , team_id (text) , league_id (text) , round (text) , pos (text) , g (number) , gs (number) , inn_outs (number) , po (number) , a (number) , e (number) , dp (number) , tp (number) , pb (number) , sb (number) , cs (number) | hall_of_fame : player_id (text) , yearid (number) , votedby (text) , ballots (number) , needed (number) , votes (number) , inducted (text) , category (text) , needed_note (text) | home_game : year (number) , league_id (text) , team_id (text) , park_id (text) , span_first (text) , span_last (text) , games (number) , openings (number) , attendance (number) | manager : player_id (text) , year (number) , team_id (text) , league_id (text) , inseason (number) , g (number) , w (number) , l (number) , rank (number) , plyr_mgr (text) | manager_half : player_id (text) , year (number) , team_id (text) , league_id (text) , inseason (number) , half (number) , g (number) , w (number) , l (number) , rank (number) | player : player_id (text) , birth_year (number) , birth_month (number) , birth_day (number) , birth_country (text) , birth_state (text) , birth_city (text) , death_year (number) , death_month (number) , death_day (number) , death_country (text) , death_state (text) , death_city (text) , name_first (text) , name_last (text) , name_given (text) , weight (number) , height (number) , bats (text) , throws (text) , debut (text) , final_game (text) , retro_id (text) , bbref_id (text) | park : park_id (text) , park_name (text) , park_alias (text) , city (text) , state (text) , country (text) | pitching : player_id (text) , year (number) , stint (number) , team_id (text) , league_id (text) , w (number) , l (number) , g (number) , gs (number) , cg (number) , sho (number) , sv (number) , ipouts (number) , h (number) , er (number) , hr (number) , bb (number) , so (number) , baopp (number) , era (number) , ibb (number) , wp (number) , hbp (number) , bk (number) , bfp (number) , gf (number) , r (number) , sh (number) , sf (number) , g_idp (number) | pitching_postseason : player_id (text) , year (number) , round (text) , team_id (text) , league_id (text) , w (number) , l (number) , g (number) , gs (number) , cg (number) , sho (number) , sv (number) , ipouts (number) , h (number) , er (number) , hr (number) , bb (number) , so (number) , baopp (text) , era (number) , ibb (number) , wp (number) , hbp (number) , bk (number) , bfp (number) , gf (number) , r (number) , sh (number) , sf (number) , g_idp (number) | salary : year (number) , team_id (text) , league_id (text) , player_id (text) , salary (number) | college : college_id (text) , name_full (text) , city (text) , state (text) , country (text) | postseason : year (number) , round (text) , team_id_winner (text) , league_id_winner (text) , team_id_loser (text) , league_id_loser (text) , wins (number) , losses (number) , ties (number) | team : year (number) , league_id (text) , team_id (text) , franchise_id (text) , div_id (text) , rank (number) , g (number) , ghome (number) , w (number) , l (number) , div_win (text) , wc_win (text) , lg_win (text) , ws_win (text) , r (number) , ab (number) , h (number) , double (number) , triple (number) , hr (number) , bb (number) , so (number) , sb (number) , cs (number) , hbp (number) , sf (number) , ra (number) , er (number) , era (number) , cg (number) , sho (number) , sv (number) , ipouts (number) , ha (number) , hra (number) , bba (number) , soa (number) , e (number) , dp (number) , fp (number) , name (text) , park (text) , attendance (number) , bpf (number) , ppf (number) , team_id_br (text) , team_id_lahman45 (text) , team_id_retro (text) | team_franchise : franchise_id (text) , franchise_name (text) , active (text) , na_assoc (text) | team_half : year (number) , league_id (text) , team_id (text) , half (number) , div_id (text) , div_win (text) , rank (number) , g (number) , w (number) , l (number)","CREATE TABLE all_star (
    player_id TEXT,
    year INT,
    game_num INT,
    game_id TEXT,
    team_id TEXT,
    league_id TEXT,
    gp INT,
    starting_pos INT
);

CREATE TABLE appearances (
    year INT,
    team_id TEXT,
    league_id TEXT,
    player_id TEXT,
    g_all INT,
    gs INT,
    g_batting INT,
    g_defense INT,
    g_p INT,
    g_c INT,
    g_1b INT,
    g_2b INT,
    g_3b INT,
    g_ss INT,
    g_lf INT,
    g_cf INT,
    g_rf INT,
    g_of INT,
    g_dh INT,
    g_ph INT,
    g_pr INT
);

CREATE TABLE manager_award (
    player_id TEXT,
    award_id TEXT,
    year INT,
    league_id TEXT,
    tie TEXT,
    notes INT
);

CREATE TABLE player_award (
    player_id TEXT,
    award_id TEXT,
    year INT,
    league_id TEXT,
    tie TEXT,
    notes TEXT
);

CREATE TABLE manager_award_vote (
    award_id TEXT,
    year INT,
    league_id TEXT,
    player_id TEXT,
    points_won INT,
    points_max INT,
    votes_first INT
);

CREATE TABLE player_award_vote (
    award_id TEXT,
    year INT,
    league_id TEXT,
    player_id TEXT,
    points_won INT,
    points_max INT,
    votes_first INT
);

CREATE TABLE batting (
    player_id TEXT,
    year INT,
    stint INT,
    team_id TEXT,
    league_id TEXT,
    g INT,
    ab INT,
    r INT,
    h INT,
    double INT,
    triple INT,
    hr INT,
    rbi INT,
    sb INT,
    cs INT,
    bb INT,
    so INT,
    ibb INT,
    hbp INT,
    sh INT,
    sf INT,
    g_idp INT
);

CREATE TABLE batting_postseason (
    year INT,
    round TEXT,
    player_id TEXT,
    team_id TEXT,
    league_id TEXT,
    g INT,
    ab INT,
    r INT,
    h INT,
    double INT,
    triple INT,
    hr INT,
    rbi INT,
    sb INT,
    cs INT,
    bb INT,
    so INT,
    ibb INT,
    hbp INT,
    sh INT,
    sf INT,
    g_idp INT
);

CREATE TABLE player_college (
    player_id TEXT,
    college_id TEXT,
    year INT
);

CREATE TABLE fielding (
    player_id TEXT,
    year INT,
    stint INT,
    team_id TEXT,
    league_id TEXT,
    pos TEXT,
    g INT,
    gs INT,
    inn_outs INT,
    po INT,
    a INT,
    e INT,
    dp INT,
    pb INT,
    wp INT,
    sb INT,
    cs INT,
    zr INT
);

CREATE TABLE fielding_outfield (
    player_id TEXT,
    year INT,
    stint INT,
    glf INT,
    gcf INT,
    grf INT
);

CREATE TABLE fielding_postseason (
    player_id TEXT,
    year INT,
    team_id TEXT,
    league_id TEXT,
    round TEXT,
    pos TEXT,
    g INT,
    gs INT,
    inn_outs INT,
    po INT,
    a INT,
    e INT,
    dp INT,
    tp INT,
    pb INT,
    sb INT,
    cs INT
);

CREATE TABLE hall_of_fame (
    player_id TEXT,
    yearid INT,
    votedby TEXT,
    ballots INT,
    needed INT,
    votes INT,
    inducted TEXT,
    category TEXT,
    needed_note TEXT
);

CREATE TABLE home_game (
    year INT,
    league_id TEXT,
    team_id TEXT,
    park_id TEXT,
    span_first TEXT,
    span_last TEXT,
    games INT,
    openings INT,
    attendance INT
);

CREATE TABLE manager (
    player_id TEXT,
    year INT,
    team_id TEXT,
    league_id TEXT,
    inseason INT,
    g INT,
    w INT,
    l INT,
    rank INT,
    plyr_mgr TEXT
);

CREATE TABLE manager_half (
    player_id TEXT,
    year INT,
    team_id TEXT,
    league_id TEXT,
    inseason INT,
    half INT,
    g INT,
    w INT,
    l INT,
    rank INT
);

CREATE TABLE player (
    player_id TEXT,
    birth_year INT,
    birth_month INT,
    birth_day INT,
    birth_country TEXT,
    birth_state TEXT,
    birth_city TEXT,
    death_year INT,
    death_month INT,
    death_day INT,
    death_country TEXT,
    death_state TEXT,
    death_city TEXT,
    name_first TEXT,
    name_last TEXT,
    name_given TEXT,
    weight INT,
    height INT,
    bats TEXT,
    throws TEXT,
    debut TEXT,
    final_game TEXT,
    retro_id TEXT,
    bbref_id TEXT
);

CREATE TABLE park (
    park_id TEXT,
    park_name TEXT,
    park_alias TEXT,
    city TEXT,
    state TEXT,
    country TEXT
);

CREATE TABLE pitching (
    player_id TEXT,
    year INT,
    stint INT,
    team_id TEXT,
    league_id TEXT,
    w INT,
    l INT,
    g INT,
    gs INT,
    cg INT,
    sho INT,
    sv INT,
    ipouts INT,
    h INT,
    er INT,
    hr INT,
    bb INT,
    so INT,
    baopp INT,
    era INT,
    ibb INT,
    wp INT,
    hbp INT,
    bk INT,
    bfp INT,
    gf INT,
    r INT,
    sh INT,
    sf INT,
    g_idp INT
);

CREATE TABLE pitching_postseason (
    player_id TEXT,
    year INT,
    round TEXT,
    team_id TEXT,
    league_id TEXT,
    w INT,
    l INT,
    g INT,
    gs INT,
    cg INT,
    sho INT,
    sv INT,
    ipouts INT,
    h INT,
    er INT,
    hr INT,
    bb INT,
    so INT,
    baopp TEXT,
    era INT,
    ibb INT,
    wp INT,
    hbp INT,
    bk INT,
    bfp INT,
    gf INT,
    r INT,
    sh INT,
    sf INT,
    g_idp INT
);

CREATE TABLE salary (
    year INT,
    team_id TEXT,
    league_id TEXT,
    player_id TEXT,
    salary INT
);

CREATE TABLE college (
    college_id TEXT,
    name_full TEXT,
    city TEXT,
    state TEXT,
    country TEXT
);

CREATE TABLE postseason (
    year INT,
    round TEXT,
    team_id_winner TEXT,
    league_id_winner TEXT,
    team_id_loser TEXT,
    league_id_loser TEXT,
    wins INT,
    losses INT,
    ties INT
);

CREATE TABLE team (
    year INT,
    league_id TEXT,
    team_id TEXT,
    franchise_id TEXT,
    div_id TEXT,
    rank INT,
    g INT,
    ghome INT,
    w INT,
    l INT,
    div_win TEXT,
    wc_win TEXT,
    lg_win TEXT,
    ws_win TEXT,
    r INT,
    ab INT,
    h INT,
    double INT,
    triple INT,
    hr INT,
    bb INT,
    so INT,
    sb INT,
    cs INT,
    hbp INT,
    sf INT,
    ra INT,
    er INT,
    era INT,
    cg INT,
    sho INT,
    sv INT,
    ipouts INT,
    ha INT,
    hra INT,
    bba INT,
    soa INT,
    e INT,
    dp INT,
    fp INT,
    name TEXT,
    park TEXT,
    attendance INT,
    bpf INT,
    ppf INT,
    team_id_br TEXT,
    team_id_lahman45 TEXT,
    team_id_retro TEXT
);

CREATE TABLE team_franchise (
    franchise_id TEXT,
    franchise_name TEXT,
    active TEXT,
    na_assoc TEXT
);

CREATE TABLE team_half (
    year INT,
    league_id TEXT,
    team_id TEXT,
    half INT,
    div_id TEXT,
    div_win TEXT,
    rank INT,
    g INT,
    w INT,
    l INT
);"
architecture,"architect : id (text) , name (text) , nationality (text) , gender (text) | bridge : architect_id (number) , id (number) , name (text) , location (text) , length_meters (number) , length_feet (number) | mill : architect_id (number) , id (number) , location (text) , name (text) , type (text) , built_year (number) , notes (text)","CREATE TABLE architect (
    id TEXT,
    name TEXT,
    nationality TEXT,
    gender TEXT
);

CREATE TABLE bridge (
    architect_id INT,
    id INT,
    name TEXT,
    location TEXT,
    length_meters INT,
    length_feet INT
);

CREATE TABLE mill (
    architect_id INT,
    id INT,
    location TEXT,
    name TEXT,
    type TEXT,
    built_year INT,
    notes TEXT
);"
csu_1,"Campuses : Id (number) , Campus (text) , Location (text) , County (text) , Year (number) | csu_fees : Campus (number) , Year (number) , CampusFee (number) | degrees : Year (number) , Campus (number) , Degrees (number) | discipline_enrollments : Campus (number) , Discipline (number) , Year (number) , Undergraduate (number) , Graduate (number) | enrollments : Campus (number) , Year (number) , TotalEnrollment_AY (number) , FTE_AY (number) | faculty : Campus (number) , Year (number) , Faculty (number)","CREATE TABLE Campuses (
    Id INT,
    Campus TEXT,
    Location TEXT,
    County TEXT,
    Year INT
);

CREATE TABLE csu_fees (
    Campus INT,
    Year INT,
    CampusFee INT
);

CREATE TABLE degrees (
    Year INT,
    Campus INT,
    Degrees INT
);

CREATE TABLE discipline_enrollments (
    Campus INT,
    Discipline INT,
    Year INT,
    Undergraduate INT,
    Graduate INT
);

CREATE TABLE enrollments (
    Campus INT,
    Year INT,
    TotalEnrollment_AY INT,
    FTE_AY INT
);

CREATE TABLE faculty (
    Campus INT,
    Year INT,
    Faculty INT
);"
tracking_orders,"Customers : customer_id (number) , customer_name (text) , customer_details (text) | Invoices : invoice_number (number) , invoice_date (time) , invoice_details (text) | Orders : order_id (number) , customer_id (number) , order_status (text) , date_order_placed (time) , order_details (text) | Products : product_id (number) , product_name (text) , product_details (text) | Order_Items : order_item_id (number) , product_id (number) , order_id (number) , order_item_status (text) , order_item_details (text) | Shipments : shipment_id (number) , order_id (number) , invoice_number (number) , shipment_tracking_number (text) , shipment_date (time) , other_shipment_details (text) | Shipment_Items : shipment_id (number) , order_item_id (number)","CREATE TABLE Customers (
    customer_id INT,
    customer_name TEXT,
    customer_details TEXT
);

CREATE TABLE Invoices (
    invoice_number INT,
    invoice_date TIME,
    invoice_details TEXT
);

CREATE TABLE Orders (
    order_id INT,
    customer_id INT,
    order_status TEXT,
    date_order_placed TIME,
    order_details TEXT
);

CREATE TABLE Products (
    product_id INT,
    product_name TEXT,
    product_details TEXT
);

CREATE TABLE Order_Items (
    order_item_id INT,
    product_id INT,
    order_id INT,
    order_item_status TEXT,
    order_item_details TEXT
);

CREATE TABLE Shipments (
    shipment_id INT,
    order_id INT,
    invoice_number INT,
    shipment_tracking_number TEXT,
    shipment_date TIME,
    other_shipment_details TEXT
);

CREATE TABLE Shipment_Items (
    shipment_id INT,
    order_item_id INT
);"
insurance_policies,"Customers : Customer_ID (number) , Customer_Details (text) | Customer_Policies : Policy_ID (number) , Customer_ID (number) , Policy_Type_Code (text) , Start_Date (time) , End_Date (time) | Claims : Claim_ID (number) , Policy_ID (number) , Date_Claim_Made (time) , Date_Claim_Settled (time) , Amount_Claimed (number) , Amount_Settled (number) | Settlements : Settlement_ID (number) , Claim_ID (number) , Date_Claim_Made (time) , Date_Claim_Settled (time) , Amount_Claimed (number) , Amount_Settled (number) , Customer_Policy_ID (number) | Payments : Payment_ID (number) , Settlement_ID (number) , Payment_Method_Code (text) , Date_Payment_Made (time) , Amount_Payment (number)","CREATE TABLE Customers (
    Customer_ID INT,
    Customer_Details TEXT
);

CREATE TABLE Customer_Policies (
    Policy_ID INT,
    Customer_ID INT,
    Policy_Type_Code TEXT,
    Start_Date TIME,
    End_Date TIME
);

CREATE TABLE Claims (
    Claim_ID INT,
    Policy_ID INT,
    Date_Claim_Made TIME,
    Date_Claim_Settled TIME,
    Amount_Claimed INT,
    Amount_Settled INT
);

CREATE TABLE Settlements (
    Settlement_ID INT,
    Claim_ID INT,
    Date_Claim_Made TIME,
    Date_Claim_Settled TIME,
    Amount_Claimed INT,
    Amount_Settled INT,
    Customer_Policy_ID INT
);

CREATE TABLE Payments (
    Payment_ID INT,
    Settlement_ID INT,
    Payment_Method_Code TEXT,
    Date_Payment_Made TIME,
    Amount_Payment INT
);"
gas_company,"company : Company_ID (number) , Rank (number) , Company (text) , Headquarters (text) , Main_Industry (text) , Sales_billion (number) , Profits_billion (number) , Assets_billion (number) , Market_Value (number) | gas_station : Station_ID (number) , Open_Year (number) , Location (text) , Manager_Name (text) , Vice_Manager_Name (text) , Representative_Name (text) | station_company : Station_ID (number) , Company_ID (number) , Rank_of_the_Year (number)","CREATE TABLE company (
    Company_ID INT,
    Rank INT,
    Company TEXT,
    Headquarters TEXT,
    Main_Industry TEXT,
    Sales_billion INT,
    Profits_billion INT,
    Assets_billion INT,
    Market_Value INT
);

CREATE TABLE gas_station (
    Station_ID INT,
    Open_Year INT,
    Location TEXT,
    Manager_Name TEXT,
    Vice_Manager_Name TEXT,
    Representative_Name TEXT
);

CREATE TABLE station_company (
    Station_ID INT,
    Company_ID INT,
    Rank_of_the_Year INT
);"
e_government,"Addresses : address_id (number) , line_1_number_building (text) , town_city (text) , zip_postcode (text) , state_province_county (text) , country (text) | Services : service_id (number) , service_type_code (text) , service_name (text) , service_descriptio (text) | Forms : form_id (number) , form_type_code (text) , service_id (number) , form_number (text) , form_name (text) , form_description (text) | Individuals : individual_id (number) , individual_first_name (text) , individual_middle_name (text) , inidividual_phone (text) , individual_email (text) , individual_address (text) , individual_last_name (text) | Organizations : organization_id (number) , date_formed (time) , organization_name (text) , uk_vat_number (text) | Parties : party_id (number) , payment_method_code (text) , party_phone (text) , party_email (text) | Organization_Contact_Individuals : individual_id (number) , organization_id (number) , date_contact_from (time) , date_contact_to (time) | Party_Addresses : party_id (number) , address_id (number) , date_address_from (time) , address_type_code (text) , date_address_to (time) | Party_Forms : party_id (number) , form_id (number) , date_completion_started (time) , form_status_code (text) , date_fully_completed (time) | Party_Services : booking_id (number) , customer_id (number) , service_id (number) , service_datetime (time) , booking_made_date (time)","CREATE TABLE Addresses (
    address_id INT,
    line_1_number_building TEXT,
    town_city TEXT,
    zip_postcode TEXT,
    state_province_county TEXT,
    country TEXT
);

CREATE TABLE Services (
    service_id INT,
    service_type_code TEXT,
    service_name TEXT,
    service_descriptio TEXT
);

CREATE TABLE Forms (
    form_id INT,
    form_type_code TEXT,
    service_id INT,
    form_number TEXT,
    form_name TEXT,
    form_description TEXT
);

CREATE TABLE Individuals (
    individual_id INT,
    individual_first_name TEXT,
    individual_middle_name TEXT,
    inidividual_phone TEXT,
    individual_email TEXT,
    individual_address TEXT,
    individual_last_name TEXT
);

CREATE TABLE Organizations (
    organization_id INT,
    date_formed TIME,
    organization_name TEXT,
    uk_vat_number TEXT
);

CREATE TABLE Parties (
    party_id INT,
    payment_method_code TEXT,
    party_phone TEXT,
    party_email TEXT
);

CREATE TABLE Organization_Contact_Individuals (
    individual_id INT,
    organization_id INT,
    date_contact_from TIME,
    date_contact_to TIME
);

CREATE TABLE Party_Addresses (
    party_id INT,
    address_id INT,
    date_address_from TIME,
    address_type_code TEXT,
    date_address_to TIME
);

CREATE TABLE Party_Forms (
    party_id INT,
    form_id INT,
    date_completion_started TIME,
    form_status_code TEXT,
    date_fully_completed TIME
);

CREATE TABLE Party_Services (
    booking_id INT,
    customer_id INT,
    service_id INT,
    service_datetime TIME,
    booking_made_date TIME
);"
school_bus,"driver : Driver_ID (number) , Name (text) , Party (text) , Home_city (text) , Age (number) | school : School_ID (number) , Grade (text) , School (text) , Location (text) , Type (text) | school_bus : School_ID (number) , Driver_ID (number) , Years_Working (number) , If_full_time (others)","CREATE TABLE driver (
    Driver_ID INT,
    Name TEXT,
    Party TEXT,
    Home_city TEXT,
    Age INT
);

CREATE TABLE school (
    School_ID INT,
    Grade TEXT,
    School TEXT,
    Location TEXT,
    Type TEXT
);

CREATE TABLE school_bus (
    School_ID INT,
    Driver_ID INT,
    Years_Working INT,
    If_full_time OTHERS
);"
machine_repair,"repair : repair_ID (number) , name (text) , Launch_Date (text) , Notes (text) | machine : Machine_ID (number) , Making_Year (number) , Class (text) , Team (text) , Machine_series (text) , value_points (number) , quality_rank (number) | technician : technician_id (number) , Name (text) , Team (text) , Starting_Year (number) , Age (number) | repair_assignment : technician_id (number) , repair_ID (number) , Machine_ID (number)","CREATE TABLE repair (
    repair_ID INT,
    name TEXT,
    Launch_Date TEXT,
    Notes TEXT
);

CREATE TABLE machine (
    Machine_ID INT,
    Making_Year INT,
    Class TEXT,
    Team TEXT,
    Machine_series TEXT,
    value_points INT,
    quality_rank INT
);

CREATE TABLE technician (
    technician_id INT,
    Name TEXT,
    Team TEXT,
    Starting_Year INT,
    Age INT
);

CREATE TABLE repair_assignment (
    technician_id INT,
    repair_ID INT,
    Machine_ID INT
);"
theme_gallery,"artist : Artist_ID (number) , Name (text) , Country (text) , Year_Join (number) , Age (number) | exhibition : Exhibition_ID (number) , Year (number) , Theme (text) , Artist_ID (number) , Ticket_Price (number) | exhibition_record : Exhibition_ID (number) , Date (text) , Attendance (number)","CREATE TABLE artist (
    Artist_ID INT,
    Name TEXT,
    Country TEXT,
    Year_Join INT,
    Age INT
);

CREATE TABLE exhibition (
    Exhibition_ID INT,
    Year INT,
    Theme TEXT,
    Artist_ID INT,
    Ticket_Price INT
);

CREATE TABLE exhibition_record (
    Exhibition_ID INT,
    Date TEXT,
    Attendance INT
);"
film_rank,"film : Film_ID (number) , Title (text) , Studio (text) , Director (text) , Gross_in_dollar (number) | market : Market_ID (number) , Country (text) , Number_cities (number) | film_market_estimation : Estimation_ID (number) , Low_Estimate (number) , High_Estimate (number) , Film_ID (number) , Type (text) , Market_ID (number) , Year (number)","CREATE TABLE film (
    Film_ID INT,
    Title TEXT,
    Studio TEXT,
    Director TEXT,
    Gross_in_dollar INT
);

CREATE TABLE market (
    Market_ID INT,
    Country TEXT,
    Number_cities INT
);

CREATE TABLE film_market_estimation (
    Estimation_ID INT,
    Low_Estimate INT,
    High_Estimate INT,
    Film_ID INT,
    Type TEXT,
    Market_ID INT,
    Year INT
);"
party_people,"region : Region_ID (number) , Region_name (text) , Date (text) , Label (text) , Format (text) , Catalogue (text) | party : Party_ID (number) , Minister (text) , Took_office (text) , Left_office (text) , Region_ID (number) , Party_name (text) | member : Member_ID (number) , Member_Name (text) , Party_ID (text) , In_office (text) | party_events : Event_ID (number) , Event_Name (text) , Party_ID (number) , Member_in_charge_ID (number)","CREATE TABLE region (
    Region_ID INT,
    Region_name TEXT,
    Date TEXT,
    Label TEXT,
    Format TEXT,
    Catalogue TEXT
);

CREATE TABLE party (
    Party_ID INT,
    Minister TEXT,
    Took_office TEXT,
    Left_office TEXT,
    Region_ID INT,
    Party_name TEXT
);

CREATE TABLE member (
    Member_ID INT,
    Member_Name TEXT,
    Party_ID TEXT,
    In_office TEXT
);

CREATE TABLE party_events (
    Event_ID INT,
    Event_Name TEXT,
    Party_ID INT,
    Member_in_charge_ID INT
);"
hospital_1,"Physician : EmployeeID (number) , Name (text) , Position (text) , SSN (number) | Department : DepartmentID (number) , Name (text) , Head (number) | Affiliated_With : Physician (number) , Department (number) , PrimaryAffiliation (boolean) | Procedures : Code (number) , Name (text) , Cost (number) | Trained_In : Physician (number) , Treatment (number) , CertificationDate (time) , CertificationExpires (time) | Patient : SSN (number) , Name (text) , Address (text) , Phone (text) , InsuranceID (number) , PCP (number) | Nurse : EmployeeID (number) , Name (text) , Position (text) , Registered (boolean) , SSN (number) | Appointment : AppointmentID (number) , Patient (number) , PrepNurse (number) , Physician (number) , Start (time) , End (time) , ExaminationRoom (text) | Medication : Code (number) , Name (text) , Brand (text) , Description (text) | Prescribes : Physician (number) , Patient (number) , Medication (number) , Date (time) , Appointment (number) , Dose (text) | Block : BlockFloor (number) , BlockCode (number) | Room : RoomNumber (number) , RoomType (text) , BlockFloor (number) , BlockCode (number) , Unavailable (boolean) | On_Call : Nurse (number) , BlockFloor (number) , BlockCode (number) , OnCallStart (time) , OnCallEnd (time) | Stay : StayID (number) , Patient (number) , Room (number) , StayStart (time) , StayEnd (time) | Undergoes : Patient (number) , Procedures (number) , Stay (number) , DateUndergoes (time) , Physician (number) , AssistingNurse (number)","CREATE TABLE Physician (
    EmployeeID INT,
    Name TEXT,
    Position TEXT,
    SSN INT
);

CREATE TABLE Department (
    DepartmentID INT,
    Name TEXT,
    Head INT
);

CREATE TABLE Affiliated_With (
    Physician INT,
    Department INT,
    PrimaryAffiliation BOOLEAN
);

CREATE TABLE Procedures (
    Code INT,
    Name TEXT,
    Cost INT
);

CREATE TABLE Trained_In (
    Physician INT,
    Treatment INT,
    CertificationDate TIME,
    CertificationExpires TIME
);

CREATE TABLE Patient (
    SSN INT,
    Name TEXT,
    Address TEXT,
    Phone TEXT,
    InsuranceID INT,
    PCP INT
);

CREATE TABLE Nurse (
    EmployeeID INT,
    Name TEXT,
    Position TEXT,
    Registered BOOLEAN,
    SSN INT
);

CREATE TABLE Appointment (
    AppointmentID INT,
    Patient INT,
    PrepNurse INT,
    Physician INT,
    Start TIME,
    End TIME,
    ExaminationRoom TEXT
);

CREATE TABLE Medication (
    Code INT,
    Name TEXT,
    Brand TEXT,
    Description TEXT
);

CREATE TABLE Prescribes (
    Physician INT,
    Patient INT,
    Medication INT,
    Date TIME,
    Appointment INT,
    Dose TEXT
);

CREATE TABLE Block (
    BlockFloor INT,
    BlockCode INT
);

CREATE TABLE Room (
    RoomNumber INT,
    RoomType TEXT,
    BlockFloor INT,
    BlockCode INT,
    Unavailable BOOLEAN
);

CREATE TABLE On_Call (
    Nurse INT,
    BlockFloor INT,
    BlockCode INT,
    OnCallStart TIME,
    OnCallEnd TIME
);

CREATE TABLE Stay (
    StayID INT,
    Patient INT,
    Room INT,
    StayStart TIME,
    StayEnd TIME
);

CREATE TABLE Undergoes (
    Patient INT,
    Procedures INT,
    Stay INT,
    DateUndergoes TIME,
    Physician INT,
    AssistingNurse INT
);"
customers_campaigns_ecommerce,"Premises : premise_id (number) , premises_type (text) , premise_details (text) | Products : product_id (number) , product_category (text) , product_name (text) | Customers : customer_id (number) , payment_method (text) , customer_name (text) , customer_phone (text) , customer_email (text) , customer_address (text) , customer_login (text) , customer_password (text) | Mailshot_Campaigns : mailshot_id (number) , product_category (text) , mailshot_name (text) , mailshot_start_date (time) , mailshot_end_date (time) | Customer_Addresses : customer_id (number) , premise_id (number) , date_address_from (time) , address_type_code (text) , date_address_to (time) | Customer_Orders : order_id (number) , customer_id (number) , order_status_code (text) , shipping_method_code (text) , order_placed_datetime (time) , order_delivered_datetime (time) , order_shipping_charges (text) | Mailshot_Customers : mailshot_id (number) , customer_id (number) , outcome_code (text) , mailshot_customer_date (time) | Order_Items : item_id (number) , order_item_status_code (text) , order_id (number) , product_id (number) , item_status_code (text) , item_delivered_datetime (time) , item_order_quantity (text)","CREATE TABLE Premises (
    premise_id INT,
    premises_type TEXT,
    premise_details TEXT
);

CREATE TABLE Products (
    product_id INT,
    product_category TEXT,
    product_name TEXT
);

CREATE TABLE Customers (
    customer_id INT,
    payment_method TEXT,
    customer_name TEXT,
    customer_phone TEXT,
    customer_email TEXT,
    customer_address TEXT,
    customer_login TEXT,
    customer_password TEXT
);

CREATE TABLE Mailshot_Campaigns (
    mailshot_id INT,
    product_category TEXT,
    mailshot_name TEXT,
    mailshot_start_date TIME,
    mailshot_end_date TIME
);

CREATE TABLE Customer_Addresses (
    customer_id INT,
    premise_id INT,
    date_address_from TIME,
    address_type_code TEXT,
    date_address_to TIME
);

CREATE TABLE Customer_Orders (
    order_id INT,
    customer_id INT,
    order_status_code TEXT,
    shipping_method_code TEXT,
    order_placed_datetime TIME,
    order_delivered_datetime TIME,
    order_shipping_charges TEXT
);

CREATE TABLE Mailshot_Customers (
    mailshot_id INT,
    customer_id INT,
    outcome_code TEXT,
    mailshot_customer_date TIME
);

CREATE TABLE Order_Items (
    item_id INT,
    order_item_status_code TEXT,
    order_id INT,
    product_id INT,
    item_status_code TEXT,
    item_delivered_datetime TIME,
    item_order_quantity TEXT
);"
gymnast,"gymnast : Gymnast_ID (number) , Floor_Exercise_Points (number) , Pommel_Horse_Points (number) , Rings_Points (number) , Vault_Points (number) , Parallel_Bars_Points (number) , Horizontal_Bar_Points (number) , Total_Points (number) | people : People_ID (number) , Name (text) , Age (number) , Height (number) , Hometown (text)","CREATE TABLE gymnast (
    Gymnast_ID INT,
    Floor_Exercise_Points INT,
    Pommel_Horse_Points INT,
    Rings_Points INT,
    Vault_Points INT,
    Parallel_Bars_Points INT,
    Horizontal_Bar_Points INT,
    Total_Points INT
);

CREATE TABLE people (
    People_ID INT,
    Name TEXT,
    Age INT,
    Height INT,
    Hometown TEXT
);"
restaurants,"GEOGRAPHIC : CITY_NAME (text) , COUNTY (text) , REGION (text) | RESTAURANT : ID (number) , NAME (text) , FOOD_TYPE (text) , CITY_NAME (text) , RATING (number) | LOCATION : RESTAURANT_ID (number) , HOUSE_NUMBER (number) , STREET_NAME (text) , CITY_NAME (text)","CREATE TABLE GEOGRAPHIC (
    CITY_NAME TEXT,
    COUNTY TEXT,
    REGION TEXT
);

CREATE TABLE RESTAURANT (
    ID INT,
    NAME TEXT,
    FOOD_TYPE TEXT,
    CITY_NAME TEXT,
    RATING INT
);

CREATE TABLE LOCATION (
    RESTAURANT_ID INT,
    HOUSE_NUMBER INT,
    STREET_NAME TEXT,
    CITY_NAME TEXT
);"
mountain_photos,"mountain : id (number) , name (text) , Height (number) , Prominence (number) , Range (text) , Country (text) | camera_lens : id (number) , brand (text) , name (text) , focal_length_mm (number) , max_aperture (number) | photos : id (number) , camera_lens_id (number) , mountain_id (number) , color (text) , name (text)","CREATE TABLE mountain (
    id INT,
    name TEXT,
    Height INT,
    Prominence INT,
    Range TEXT,
    Country TEXT
);

CREATE TABLE camera_lens (
    id INT,
    brand TEXT,
    name TEXT,
    focal_length_mm INT,
    max_aperture INT
);

CREATE TABLE photos (
    id INT,
    camera_lens_id INT,
    mountain_id INT,
    color TEXT,
    name TEXT
);"
battle_death,"battle : id (number) , name (text) , date (text) , bulgarian_commander (text) , latin_commander (text) , result (text) | ship : lost_in_battle (number) , id (number) , name (text) , tonnage (text) , ship_type (text) , location (text) , disposition_of_ship (text) | death : caused_by_ship_id (number) , id (number) , note (text) , killed (number) , injured (number)","CREATE TABLE battle (
    id INT,
    name TEXT,
    date TEXT,
    bulgarian_commander TEXT,
    latin_commander TEXT,
    result TEXT
);

CREATE TABLE ship (
    lost_in_battle INT,
    id INT,
    name TEXT,
    tonnage TEXT,
    ship_type TEXT,
    location TEXT,
    disposition_of_ship TEXT
);

CREATE TABLE death (
    caused_by_ship_id INT,
    id INT,
    note TEXT,
    killed INT,
    injured INT
);"
cre_Doc_Control_Systems,"Ref_Document_Types : document_type_code (text) , document_type_description (text) | Roles : role_code (text) , role_description (text) | Addresses : address_id (number) , address_details (text) | Ref_Document_Status : document_status_code (text) , document_status_description (text) | Ref_Shipping_Agents : shipping_agent_code (text) , shipping_agent_name (text) , shipping_agent_description (text) | Documents : document_id (number) , document_status_code (text) , document_type_code (text) , shipping_agent_code (text) , receipt_date (time) , receipt_number (text) , other_details (text) | Employees : employee_id (number) , role_code (text) , employee_name (text) , other_details (text) | Document_Drafts : document_id (number) , draft_number (number) , draft_details (text) | Draft_Copies : document_id (number) , draft_number (number) , copy_number (number) | Circulation_History : document_id (number) , draft_number (number) , copy_number (number) , employee_id (number) | Documents_Mailed : document_id (number) , mailed_to_address_id (number) , mailing_date (time)","CREATE TABLE Ref_Document_Types (
    document_type_code TEXT,
    document_type_description TEXT
);

CREATE TABLE Roles (
    role_code TEXT,
    role_description TEXT
);

CREATE TABLE Addresses (
    address_id INT,
    address_details TEXT
);

CREATE TABLE Ref_Document_Status (
    document_status_code TEXT,
    document_status_description TEXT
);

CREATE TABLE Ref_Shipping_Agents (
    shipping_agent_code TEXT,
    shipping_agent_name TEXT,
    shipping_agent_description TEXT
);

CREATE TABLE Documents (
    document_id INT,
    document_status_code TEXT,
    document_type_code TEXT,
    shipping_agent_code TEXT,
    receipt_date TIME,
    receipt_number TEXT,
    other_details TEXT
);

CREATE TABLE Employees (
    employee_id INT,
    role_code TEXT,
    employee_name TEXT,
    other_details TEXT
);

CREATE TABLE Document_Drafts (
    document_id INT,
    draft_number INT,
    draft_details TEXT
);

CREATE TABLE Draft_Copies (
    document_id INT,
    draft_number INT,
    copy_number INT
);

CREATE TABLE Circulation_History (
    document_id INT,
    draft_number INT,
    copy_number INT,
    employee_id INT
);

CREATE TABLE Documents_Mailed (
    document_id INT,
    mailed_to_address_id INT,
    mailing_date TIME
);"
tracking_share_transactions,"Investors : investor_id (number) , Investor_details (text) | Lots : lot_id (number) , investor_id (number) , lot_details (text) | Ref_Transaction_Types : transaction_type_code (text) , transaction_type_description (text) | Transactions : transaction_id (number) , investor_id (number) , transaction_type_code (text) , date_of_transaction (time) , amount_of_transaction (number) , share_count (text) , other_details (text) | Sales : sales_transaction_id (number) , sales_details (text) | Purchases : purchase_transaction_id (number) , purchase_details (text) | Transactions_Lots : transaction_id (number) , lot_id (number)","CREATE TABLE Investors (
    investor_id INT,
    Investor_details TEXT
);

CREATE TABLE Lots (
    lot_id INT,
    investor_id INT,
    lot_details TEXT
);

CREATE TABLE Ref_Transaction_Types (
    transaction_type_code TEXT,
    transaction_type_description TEXT
);

CREATE TABLE Transactions (
    transaction_id INT,
    investor_id INT,
    transaction_type_code TEXT,
    date_of_transaction TIME,
    amount_of_transaction INT,
    share_count TEXT,
    other_details TEXT
);

CREATE TABLE Sales (
    sales_transaction_id INT,
    sales_details TEXT
);

CREATE TABLE Purchases (
    purchase_transaction_id INT,
    purchase_details TEXT
);

CREATE TABLE Transactions_Lots (
    transaction_id INT,
    lot_id INT
);"
apartment_rentals,"Apartment_Buildings : building_id (number) , building_short_name (text) , building_full_name (text) , building_description (text) , building_address (text) , building_manager (text) , building_phone (text) | Apartments : apt_id (number) , building_id (number) , apt_type_code (text) , apt_number (text) , bathroom_count (number) , bedroom_count (number) , room_count (text) | Apartment_Facilities : apt_id (number) , facility_code (text) | Guests : guest_id (number) , gender_code (text) , guest_first_name (text) , guest_last_name (text) , date_of_birth (time) | Apartment_Bookings : apt_booking_id (number) , apt_id (number) , guest_id (number) , booking_status_code (text) , booking_start_date (time) , booking_end_date (time) | View_Unit_Status : apt_id (number) , apt_booking_id (number) , status_date (time) , available_yn (others)","CREATE TABLE Apartment_Buildings (
    building_id INT,
    building_short_name TEXT,
    building_full_name TEXT,
    building_description TEXT,
    building_address TEXT,
    building_manager TEXT,
    building_phone TEXT
);

CREATE TABLE Apartments (
    apt_id INT,
    building_id INT,
    apt_type_code TEXT,
    apt_number TEXT,
    bathroom_count INT,
    bedroom_count INT,
    room_count TEXT
);

CREATE TABLE Apartment_Facilities (
    apt_id INT,
    facility_code TEXT
);

CREATE TABLE Guests (
    guest_id INT,
    gender_code TEXT,
    guest_first_name TEXT,
    guest_last_name TEXT,
    date_of_birth TIME
);

CREATE TABLE Apartment_Bookings (
    apt_booking_id INT,
    apt_id INT,
    guest_id INT,
    booking_status_code TEXT,
    booking_start_date TIME,
    booking_end_date TIME
);

CREATE TABLE View_Unit_Status (
    apt_id INT,
    apt_booking_id INT,
    status_date TIME,
    available_yn OTHERS
);"
student_transcripts_tracking,"Addresses : address_id (number) , line_1 (text) , line_2 (text) , line_3 (text) , city (text) , zip_postcode (text) , state_province_county (text) , country (text) , other_address_details (text) | Courses : course_id (number) , course_name (text) , course_description (text) , other_details (text) | Departments : department_id (number) , department_name (text) , department_description (text) , other_details (text) | Degree_Programs : degree_program_id (number) , department_id (number) , degree_summary_name (text) , degree_summary_description (text) , other_details (text) | Sections : section_id (number) , course_id (number) , section_name (text) , section_description (text) , other_details (text) | Semesters : semester_id (number) , semester_name (text) , semester_description (text) , other_details (text) | Students : student_id (number) , current_address_id (number) , permanent_address_id (number) , first_name (text) , middle_name (text) , last_name (text) , cell_mobile_number (text) , email_address (text) , ssn (text) , date_first_registered (time) , date_left (time) , other_student_details (text) | Student_Enrolment : student_enrolment_id (number) , degree_program_id (number) , semester_id (number) , student_id (number) , other_details (text) | Student_Enrolment_Courses : student_course_id (number) , course_id (number) , student_enrolment_id (number) | Transcripts : transcript_id (number) , transcript_date (time) , other_details (text) | Transcript_Contents : student_course_id (number) , transcript_id (number)","CREATE TABLE Addresses (
    address_id INT,
    line_1 TEXT,
    line_2 TEXT,
    line_3 TEXT,
    city TEXT,
    zip_postcode TEXT,
    state_province_county TEXT,
    country TEXT,
    other_address_details TEXT
);

CREATE TABLE Courses (
    course_id INT,
    course_name TEXT,
    course_description TEXT,
    other_details TEXT
);

CREATE TABLE Departments (
    department_id INT,
    department_name TEXT,
    department_description TEXT,
    other_details TEXT
);

CREATE TABLE Degree_Programs (
    degree_program_id INT,
    department_id INT,
    degree_summary_name TEXT,
    degree_summary_description TEXT,
    other_details TEXT
);

CREATE TABLE Sections (
    section_id INT,
    course_id INT,
    section_name TEXT,
    section_description TEXT,
    other_details TEXT
);

CREATE TABLE Semesters (
    semester_id INT,
    semester_name TEXT,
    semester_description TEXT,
    other_details TEXT
);

CREATE TABLE Students (
    student_id INT,
    current_address_id INT,
    permanent_address_id INT,
    first_name TEXT,
    middle_name TEXT,
    last_name TEXT,
    cell_mobile_number TEXT,
    email_address TEXT,
    ssn TEXT,
    date_first_registered TIME,
    date_left TIME,
    other_student_details TEXT
);

CREATE TABLE Student_Enrolment (
    student_enrolment_id INT,
    degree_program_id INT,
    semester_id INT,
    student_id INT,
    other_details TEXT
);

CREATE TABLE Student_Enrolment_Courses (
    student_course_id INT,
    course_id INT,
    student_enrolment_id INT
);

CREATE TABLE Transcripts (
    transcript_id INT,
    transcript_date TIME,
    other_details TEXT
);

CREATE TABLE Transcript_Contents (
    student_course_id INT,
    transcript_id INT
);"
cre_Docs_and_Epenses,"Ref_Document_Types : Document_Type_Code (text) , Document_Type_Name (text) , Document_Type_Description (text) | Ref_Budget_Codes : Budget_Type_Code (text) , Budget_Type_Description (text) | Projects : Project_ID (number) , Project_Details (text) | Documents : Document_ID (number) , Document_Type_Code (text) , Project_ID (number) , Document_Date (time) , Document_Name (text) , Document_Description (text) , Other_Details (text) | Statements : Statement_ID (number) , Statement_Details (text) | Documents_with_Expenses : Document_ID (number) , Budget_Type_Code (text) , Document_Details (text) | Accounts : Account_ID (number) , Statement_ID (number) , Account_Details (text)","CREATE TABLE Ref_Document_Types (
    Document_Type_Code TEXT,
    Document_Type_Name TEXT,
    Document_Type_Description TEXT
);

CREATE TABLE Ref_Budget_Codes (
    Budget_Type_Code TEXT,
    Budget_Type_Description TEXT
);

CREATE TABLE Projects (
    Project_ID INT,
    Project_Details TEXT
);

CREATE TABLE Documents (
    Document_ID INT,
    Document_Type_Code TEXT,
    Project_ID INT,
    Document_Date TIME,
    Document_Name TEXT,
    Document_Description TEXT,
    Other_Details TEXT
);

CREATE TABLE Statements (
    Statement_ID INT,
    Statement_Details TEXT
);

CREATE TABLE Documents_with_Expenses (
    Document_ID INT,
    Budget_Type_Code TEXT,
    Document_Details TEXT
);

CREATE TABLE Accounts (
    Account_ID INT,
    Statement_ID INT,
    Account_Details TEXT
);"
ship_mission,"mission : Mission_ID (number) , Ship_ID (number) , Code (text) , Launched_Year (number) , Location (text) , Speed_knots (number) , Fate (text) | ship : Ship_ID (number) , Name (text) , Type (text) , Nationality (text) , Tonnage (number)","CREATE TABLE mission (
    Mission_ID INT,
    Ship_ID INT,
    Code TEXT,
    Launched_Year INT,
    Location TEXT,
    Speed_knots INT,
    Fate TEXT
);

CREATE TABLE ship (
    Ship_ID INT,
    Name TEXT,
    Type TEXT,
    Nationality TEXT,
    Tonnage INT
);"
company_office,"buildings : id (number) , name (text) , City (text) , Height (number) , Stories (number) , Status (text) | Companies : id (number) , name (text) , Headquarters (text) , Industry (text) , Sales_billion (number) , Profits_billion (number) , Assets_billion (number) , Market_Value_billion (text) | Office_locations : building_id (number) , company_id (number) , move_in_year (number)","CREATE TABLE buildings (
    id INT,
    name TEXT,
    City TEXT,
    Height INT,
    Stories INT,
    Status TEXT
);

CREATE TABLE Companies (
    id INT,
    name TEXT,
    Headquarters TEXT,
    Industry TEXT,
    Sales_billion INT,
    Profits_billion INT,
    Assets_billion INT,
    Market_Value_billion TEXT
);

CREATE TABLE Office_locations (
    building_id INT,
    company_id INT,
    move_in_year INT
);"
tracking_software_problems,"Problem_Category_Codes : problem_category_code (text) , problem_category_description (text) | Problem_Log : problem_log_id (number) , assigned_to_staff_id (number) , problem_id (number) , problem_category_code (text) , problem_status_code (text) , log_entry_date (time) , log_entry_description (text) , log_entry_fix (text) , other_log_details (text) | Problem_Status_Codes : problem_status_code (text) , problem_status_description (text) | Product : product_id (number) , product_name (text) , product_details (text) | Staff : staff_id (number) , staff_first_name (text) , staff_last_name (text) , other_staff_details (text) | Problems : problem_id (number) , product_id (number) , closure_authorised_by_staff_id (number) , reported_by_staff_id (number) , date_problem_reported (time) , date_problem_closed (time) , problem_description (text) , other_problem_details (text)","CREATE TABLE Problem_Category_Codes (
    problem_category_code TEXT,
    problem_category_description TEXT
);

CREATE TABLE Problem_Log (
    problem_log_id INT,
    assigned_to_staff_id INT,
    problem_id INT,
    problem_category_code TEXT,
    problem_status_code TEXT,
    log_entry_date TIME,
    log_entry_description TEXT,
    log_entry_fix TEXT,
    other_log_details TEXT
);

CREATE TABLE Problem_Status_Codes (
    problem_status_code TEXT,
    problem_status_description TEXT
);

CREATE TABLE Product (
    product_id INT,
    product_name TEXT,
    product_details TEXT
);

CREATE TABLE Staff (
    staff_id INT,
    staff_first_name TEXT,
    staff_last_name TEXT,
    other_staff_details TEXT
);

CREATE TABLE Problems (
    problem_id INT,
    product_id INT,
    closure_authorised_by_staff_id INT,
    reported_by_staff_id INT,
    date_problem_reported TIME,
    date_problem_closed TIME,
    problem_description TEXT,
    other_problem_details TEXT
);"
products_gen_characteristics,"Ref_Characteristic_Types : characteristic_type_code (text) , characteristic_type_description (text) | Ref_Colors : color_code (text) , color_description (text) | Ref_Product_Categories : product_category_code (text) , product_category_description (text) , unit_of_measure (text) | Characteristics : characteristic_id (number) , characteristic_type_code (text) , characteristic_data_type (text) , characteristic_name (text) , other_characteristic_details (text) | Products : product_id (number) , color_code (text) , product_category_code (text) , product_name (text) , typical_buying_price (text) , typical_selling_price (text) , product_description (text) , other_product_details (text) | Product_Characteristics : product_id (number) , characteristic_id (number) , product_characteristic_value (text)","CREATE TABLE Ref_Characteristic_Types (
    characteristic_type_code TEXT,
    characteristic_type_description TEXT
);

CREATE TABLE Ref_Colors (
    color_code TEXT,
    color_description TEXT
);

CREATE TABLE Ref_Product_Categories (
    product_category_code TEXT,
    product_category_description TEXT,
    unit_of_measure TEXT
);

CREATE TABLE Characteristics (
    characteristic_id INT,
    characteristic_type_code TEXT,
    characteristic_data_type TEXT,
    characteristic_name TEXT,
    other_characteristic_details TEXT
);

CREATE TABLE Products (
    product_id INT,
    color_code TEXT,
    product_category_code TEXT,
    product_name TEXT,
    typical_buying_price TEXT,
    typical_selling_price TEXT,
    product_description TEXT,
    other_product_details TEXT
);

CREATE TABLE Product_Characteristics (
    product_id INT,
    characteristic_id INT,
    product_characteristic_value TEXT
);"
coffee_shop,"shop : Shop_ID (number) , Address (text) , Num_of_staff (text) , Score (number) , Open_Year (text) | member : Member_ID (number) , Name (text) , Membership_card (text) , Age (number) , Time_of_purchase (number) , Level_of_membership (number) , Address (text) | happy_hour : HH_ID (number) , Shop_ID (number) , Month (text) , Num_of_shaff_in_charge (number) | happy_hour_member : HH_ID (number) , Member_ID (number) , Total_amount (number)","CREATE TABLE shop (
    Shop_ID INT,
    Address TEXT,
    Num_of_staff TEXT,
    Score INT,
    Open_Year TEXT
);

CREATE TABLE member (
    Member_ID INT,
    Name TEXT,
    Membership_card TEXT,
    Age INT,
    Time_of_purchase INT,
    Level_of_membership INT,
    Address TEXT
);

CREATE TABLE happy_hour (
    HH_ID INT,
    Shop_ID INT,
    Month TEXT,
    Num_of_shaff_in_charge INT
);

CREATE TABLE happy_hour_member (
    HH_ID INT,
    Member_ID INT,
    Total_amount INT
);"
riding_club,"player : Player_ID (number) , Sponsor_name (text) , Player_name (text) , Gender (text) , Residence (text) , Occupation (text) , Votes (number) , Rank (text) | club : Club_ID (number) , Club_name (text) , Region (text) , Start_year (number) | coach : Coach_ID (number) , Coach_name (text) , Gender (text) , Club_ID (number) , Rank (number) | player_coach : Player_ID (number) , Coach_ID (number) , Starting_year (number) | match_result : Rank (number) , Club_ID (number) , Gold (number) , Big_Silver (number) , Small_Silver (number) , Bronze (number) , Points (number)","CREATE TABLE player (
    Player_ID INT,
    Sponsor_name TEXT,
    Player_name TEXT,
    Gender TEXT,
    Residence TEXT,
    Occupation TEXT,
    Votes INT,
    Rank TEXT
);

CREATE TABLE club (
    Club_ID INT,
    Club_name TEXT,
    Region TEXT,
    Start_year INT
);

CREATE TABLE coach (
    Coach_ID INT,
    Coach_name TEXT,
    Gender TEXT,
    Club_ID INT,
    Rank INT
);

CREATE TABLE player_coach (
    Player_ID INT,
    Coach_ID INT,
    Starting_year INT
);

CREATE TABLE match_result (
    Rank INT,
    Club_ID INT,
    Gold INT,
    Big_Silver INT,
    Small_Silver INT,
    Bronze INT,
    Points INT
);"
customers_card_transactions,"Accounts : account_id (number) , customer_id (number) , account_name (text) , other_account_details (text) | Customers : customer_id (number) , customer_first_name (text) , customer_last_name (text) , customer_address (text) , customer_phone (text) , customer_email (text) , other_customer_details (text) | Customers_Cards : card_id (number) , customer_id (number) , card_type_code (text) , card_number (text) , date_valid_from (time) , date_valid_to (time) , other_card_details (text) | Financial_Transactions : transaction_id (number) , previous_transaction_id (number) , account_id (number) , card_id (number) , transaction_type (text) , transaction_date (time) , transaction_amount (number) , transaction_comment (text) , other_transaction_details (text)","CREATE TABLE Accounts (
    account_id INT,
    customer_id INT,
    account_name TEXT,
    other_account_details TEXT
);

CREATE TABLE Customers (
    customer_id INT,
    customer_first_name TEXT,
    customer_last_name TEXT,
    customer_address TEXT,
    customer_phone TEXT,
    customer_email TEXT,
    other_customer_details TEXT
);

CREATE TABLE Customers_Cards (
    card_id INT,
    customer_id INT,
    card_type_code TEXT,
    card_number TEXT,
    date_valid_from TIME,
    date_valid_to TIME,
    other_card_details TEXT
);

CREATE TABLE Financial_Transactions (
    transaction_id INT,
    previous_transaction_id INT,
    account_id INT,
    card_id INT,
    transaction_type TEXT,
    transaction_date TIME,
    transaction_amount INT,
    transaction_comment TEXT,
    other_transaction_details TEXT
);"
county_public_safety,"county_public_safety : County_ID (number) , Name (text) , Population (number) , Police_officers (number) , Residents_per_officer (number) , Case_burden (number) , Crime_rate (number) , Police_force (text) , Location (text) | city : City_ID (number) , County_ID (number) , Name (text) , White (number) , Black (number) , Amerindian (number) , Asian (number) , Multiracial (number) , Hispanic (number)","CREATE TABLE county_public_safety (
    County_ID INT,
    Name TEXT,
    Population INT,
    Police_officers INT,
    Residents_per_officer INT,
    Case_burden INT,
    Crime_rate INT,
    Police_force TEXT,
    Location TEXT
);

CREATE TABLE city (
    City_ID INT,
    County_ID INT,
    Name TEXT,
    White INT,
    Black INT,
    Amerindian INT,
    Asian INT,
    Multiracial INT,
    Hispanic INT
);"
performance_attendance,"member : Member_ID (text) , Name (text) , Nationality (text) , Role (text) | performance : Performance_ID (number) , Date (text) , Host (text) , Location (text) , Attendance (number) | member_attendance : Member_ID (number) , Performance_ID (number) , Num_of_Pieces (number)","CREATE TABLE member (
    Member_ID TEXT,
    Name TEXT,
    Nationality TEXT,
    Role TEXT
);

CREATE TABLE performance (
    Performance_ID INT,
    Date TEXT,
    Host TEXT,
    Location TEXT,
    Attendance INT
);

CREATE TABLE member_attendance (
    Member_ID INT,
    Performance_ID INT,
    Num_of_Pieces INT
);"
club_1,"Student : StuID (number) , LName (text) , Fname (text) , Age (number) , Sex (text) , Major (number) , Advisor (number) , city_code (text) | Club : ClubID (number) , ClubName (text) , ClubDesc (text) , ClubLocation (text) | Member_of_club : StuID (number) , ClubID (number) , Position (text)","CREATE TABLE Student (
    StuID INT,
    LName TEXT,
    Fname TEXT,
    Age INT,
    Sex TEXT,
    Major INT,
    Advisor INT,
    city_code TEXT
);

CREATE TABLE Club (
    ClubID INT,
    ClubName TEXT,
    ClubDesc TEXT,
    ClubLocation TEXT
);

CREATE TABLE Member_of_club (
    StuID INT,
    ClubID INT,
    Position TEXT
);"
singer,"singer : Singer_ID (number) , Name (text) , Birth_Year (number) , Net_Worth_Millions (number) , Citizenship (text) | song : Song_ID (number) , Title (text) , Singer_ID (number) , Sales (number) , Highest_Position (number)","CREATE TABLE singer (
    Singer_ID INT,
    Name TEXT,
    Birth_Year INT,
    Net_Worth_Millions INT,
    Citizenship TEXT
);

CREATE TABLE song (
    Song_ID INT,
    Title TEXT,
    Singer_ID INT,
    Sales INT,
    Highest_Position INT
);"
culture_company,"book_club : book_club_id (number) , Year (number) , Author_or_Editor (text) , Book_Title (text) , Publisher (text) , Category (text) , Result (text) | movie : movie_id (number) , Title (text) , Year (number) , Director (text) , Budget_million (number) , Gross_worldwide (number) | culture_company : Company_name (text) , Type (text) , Incorporated_in (text) , Group_Equity_Shareholding (number) , book_club_id (text) , movie_id (text)","CREATE TABLE book_club (
    book_club_id INT,
    Year INT,
    Author_or_Editor TEXT,
    Book_Title TEXT,
    Publisher TEXT,
    Category TEXT,
    Result TEXT
);

CREATE TABLE movie (
    movie_id INT,
    Title TEXT,
    Year INT,
    Director TEXT,
    Budget_million INT,
    Gross_worldwide INT
);

CREATE TABLE culture_company (
    Company_name TEXT,
    Type TEXT,
    Incorporated_in TEXT,
    Group_Equity_Shareholding INT,
    book_club_id TEXT,
    movie_id TEXT
);"
cre_Doc_Template_Mgt,"Ref_Template_Types : Template_Type_Code (text) , Template_Type_Description (text) | Templates : Template_ID (number) , Version_Number (number) , Template_Type_Code (text) , Date_Effective_From (time) , Date_Effective_To (time) , Template_Details (text) | Documents : Document_ID (number) , Template_ID (number) , Document_Name (text) , Document_Description (text) , Other_Details (text) | Paragraphs : Paragraph_ID (number) , Document_ID (number) , Paragraph_Text (text) , Other_Details (text)","CREATE TABLE Ref_Template_Types (
    Template_Type_Code TEXT,
    Template_Type_Description TEXT
);

CREATE TABLE Templates (
    Template_ID INT,
    Version_Number INT,
    Template_Type_Code TEXT,
    Date_Effective_From TIME,
    Date_Effective_To TIME,
    Template_Details TEXT
);

CREATE TABLE Documents (
    Document_ID INT,
    Template_ID INT,
    Document_Name TEXT,
    Document_Description TEXT,
    Other_Details TEXT
);

CREATE TABLE Paragraphs (
    Paragraph_ID INT,
    Document_ID INT,
    Paragraph_Text TEXT,
    Other_Details TEXT
);"
musical,"musical : Musical_ID (number) , Name (text) , Year (number) , Award (text) , Category (text) , Nominee (text) , Result (text) | actor : Actor_ID (number) , Name (text) , Musical_ID (number) , Character (text) , Duration (text) , age (number)","CREATE TABLE musical (
    Musical_ID INT,
    Name TEXT,
    Year INT,
    Award TEXT,
    Category TEXT,
    Nominee TEXT,
    Result TEXT
);

CREATE TABLE actor (
    Actor_ID INT,
    Name TEXT,
    Musical_ID INT,
    Character TEXT,
    Duration TEXT,
    age INT
);"
world_1,"city : ID (number) , Name (text) , CountryCode (text) , District (text) , Population (number) | sqlite_sequence : name (text) , seq (text) | country : Code (text) , Name (text) , Continent (text) , Region (text) , SurfaceArea (number) , IndepYear (number) , Population (number) , LifeExpectancy (number) , GNP (number) , GNPOld (number) , LocalName (text) , GovernmentForm (text) , HeadOfState (text) , Capital (number) , Code2 (text) | countrylanguage : CountryCode (text) , Language (text) , IsOfficial (text) , Percentage (number)","CREATE TABLE city (
    ID INT,
    Name TEXT,
    CountryCode TEXT,
    District TEXT,
    Population INT
);

CREATE TABLE sqlite_sequence (
    name TEXT,
    seq TEXT
);

CREATE TABLE country (
    Code TEXT,
    Name TEXT,
    Continent TEXT,
    Region TEXT,
    SurfaceArea INT,
    IndepYear INT,
    Population INT,
    LifeExpectancy INT,
    GNP INT,
    GNPOld INT,
    LocalName TEXT,
    GovernmentForm TEXT,
    HeadOfState TEXT,
    Capital INT,
    Code2 TEXT
);

CREATE TABLE countrylanguage (
    CountryCode TEXT,
    Language TEXT,
    IsOfficial TEXT,
    Percentage INT
);"
device,"device : Device_ID (number) , Device (text) , Carrier (text) , Package_Version (text) , Applications (text) , Software_Platform (text) | shop : Shop_ID (number) , Shop_Name (text) , Location (text) , Open_Date (text) , Open_Year (number) | stock : Shop_ID (number) , Device_ID (number) , Quantity (number)","CREATE TABLE device (
    Device_ID INT,
    Device TEXT,
    Carrier TEXT,
    Package_Version TEXT,
    Applications TEXT,
    Software_Platform TEXT
);

CREATE TABLE shop (
    Shop_ID INT,
    Shop_Name TEXT,
    Location TEXT,
    Open_Date TEXT,
    Open_Year INT
);

CREATE TABLE stock (
    Shop_ID INT,
    Device_ID INT,
    Quantity INT
);"
tracking_grants_for_research,"Document_Types : document_type_code (text) , document_description (text) | Documents : document_id (number) , document_type_code (text) , grant_id (number) , sent_date (time) , response_received_date (time) , other_details (text) | Grants : grant_id (number) , organisation_id (number) , grant_amount (number) , grant_start_date (time) , grant_end_date (time) , other_details (text) | Organisation_Types : organisation_type (text) , organisation_type_description (text) | Organisations : organisation_id (number) , organisation_type (text) , organisation_details (text) | Project_Outcomes : project_id (number) , outcome_code (text) , outcome_details (text) | Project_Staff : staff_id (number) , project_id (number) , role_code (text) , date_from (time) , date_to (time) , other_details (text) | Projects : project_id (number) , organisation_id (number) , project_details (text) | Research_Outcomes : outcome_code (text) , outcome_description (text) | Research_Staff : staff_id (number) , employer_organisation_id (number) , staff_details (text) | Staff_Roles : role_code (text) , role_description (text) | Tasks : task_id (number) , project_id (number) , task_details (text) , eg Agree Objectives (text)","CREATE TABLE Document_Types (
    document_type_code TEXT,
    document_description TEXT
);

CREATE TABLE Documents (
    document_id INT,
    document_type_code TEXT,
    grant_id INT,
    sent_date TIME,
    response_received_date TIME,
    other_details TEXT
);

CREATE TABLE Grants (
    grant_id INT,
    organisation_id INT,
    grant_amount INT,
    grant_start_date TIME,
    grant_end_date TIME,
    other_details TEXT
);

CREATE TABLE Organisation_Types (
    organisation_type TEXT,
    organisation_type_description TEXT
);

CREATE TABLE Organisations (
    organisation_id INT,
    organisation_type TEXT,
    organisation_details TEXT
);

CREATE TABLE Project_Outcomes (
    project_id INT,
    outcome_code TEXT,
    outcome_details TEXT
);

CREATE TABLE Project_Staff (
    staff_id INT,
    project_id INT,
    role_code TEXT,
    date_from TIME,
    date_to TIME,
    other_details TEXT
);

CREATE TABLE Projects (
    project_id INT,
    organisation_id INT,
    project_details TEXT
);

CREATE TABLE Research_Outcomes (
    outcome_code TEXT,
    outcome_description TEXT
);

CREATE TABLE Research_Staff (
    staff_id INT,
    employer_organisation_id INT,
    staff_details TEXT
);

CREATE TABLE Staff_Roles (
    role_code TEXT,
    role_description TEXT
);

CREATE TABLE Tasks (
    task_id INT,
    project_id INT,
    task_details TEXT,
    eg Agree Objectives TEXT
);"
employee_hire_evaluation,"employee : Employee_ID (number) , Name (text) , Age (number) , City (text) | shop : Shop_ID (number) , Name (text) , Location (text) , District (text) , Number_products (number) , Manager_name (text) | hiring : Shop_ID (number) , Employee_ID (number) , Start_from (text) , Is_full_time (others) | evaluation : Employee_ID (text) , Year_awarded (text) , Bonus (number)","CREATE TABLE employee (
    Employee_ID INT,
    Name TEXT,
    Age INT,
    City TEXT
);

CREATE TABLE shop (
    Shop_ID INT,
    Name TEXT,
    Location TEXT,
    District TEXT,
    Number_products INT,
    Manager_name TEXT
);

CREATE TABLE hiring (
    Shop_ID INT,
    Employee_ID INT,
    Start_from TEXT,
    Is_full_time OTHERS
);

CREATE TABLE evaluation (
    Employee_ID TEXT,
    Year_awarded TEXT,
    Bonus INT
);"
movie_1,"Movie : mID (number) , title (text) , year (number) , director (text) | Reviewer : rID (number) , name (text) | Rating : rID (number) , mID (number) , stars (number) , ratingDate (time)","CREATE TABLE Movie (
    mID INT,
    title TEXT,
    year INT,
    director TEXT
);

CREATE TABLE Reviewer (
    rID INT,
    name TEXT
);

CREATE TABLE Rating (
    rID INT,
    mID INT,
    stars INT,
    ratingDate TIME
);"
network_1,"Highschooler : ID (number) , name (text) , grade (number) | Friend : student_id (number) , friend_id (number) | Likes : student_id (number) , liked_id (number)","CREATE TABLE Highschooler (
    ID INT,
    name TEXT,
    grade INT
);

CREATE TABLE Friend (
    student_id INT,
    friend_id INT
);

CREATE TABLE Likes (
    student_id INT,
    liked_id INT
);"
poker_player,"poker_player : Poker_Player_ID (number) , People_ID (number) , Final_Table_Made (number) , Best_Finish (number) , Money_Rank (number) , Earnings (number) | people : People_ID (number) , Nationality (text) , Name (text) , Birth_Date (text) , Height (number)","CREATE TABLE poker_player (
    Poker_Player_ID INT,
    People_ID INT,
    Final_Table_Made INT,
    Best_Finish INT,
    Money_Rank INT,
    Earnings INT
);

CREATE TABLE people (
    People_ID INT,
    Nationality TEXT,
    Name TEXT,
    Birth_Date TEXT,
    Height INT
);"
program_share,"program : Program_ID (number) , Name (text) , Origin (text) , Launch (number) , Owner (text) | channel : Channel_ID (number) , Name (text) , Owner (text) , Share_in_percent (number) , Rating_in_percent (number) | broadcast : Channel_ID (number) , Program_ID (number) , Time_of_day (text) | broadcast_share : Channel_ID (number) , Program_ID (number) , Date (text) , Share_in_percent (number)","CREATE TABLE program (
    Program_ID INT,
    Name TEXT,
    Origin TEXT,
    Launch INT,
    Owner TEXT
);

CREATE TABLE channel (
    Channel_ID INT,
    Name TEXT,
    Owner TEXT,
    Share_in_percent INT,
    Rating_in_percent INT
);

CREATE TABLE broadcast (
    Channel_ID INT,
    Program_ID INT,
    Time_of_day TEXT
);

CREATE TABLE broadcast_share (
    Channel_ID INT,
    Program_ID INT,
    Date TEXT,
    Share_in_percent INT
);"
aircraft,"pilot : Pilot_Id (number) , Name (text) , Age (number) | aircraft : Aircraft_ID (number) , Aircraft (text) , Description (text) , Max_Gross_Weight (text) , Total_disk_area (text) , Max_disk_Loading (text) | match : Round (number) , Location (text) , Country (text) , Date (text) , Fastest_Qualifying (text) , Winning_Pilot (text) , Winning_Aircraft (text) | airport : Airport_ID (number) , Airport_Name (text) , Total_Passengers (number) , %_Change_2007 (text) , International_Passengers (number) , Domestic_Passengers (number) , Transit_Passengers (number) , Aircraft_Movements (number) , Freight_Metric_Tonnes (number) | airport_aircraft : ID (number) , Airport_ID (number) , Aircraft_ID (number)","CREATE TABLE pilot (
    Pilot_Id INT,
    Name TEXT,
    Age INT
);

CREATE TABLE aircraft (
    Aircraft_ID INT,
    Aircraft TEXT,
    Description TEXT,
    Max_Gross_Weight TEXT,
    Total_disk_area TEXT,
    Max_disk_Loading TEXT
);

CREATE TABLE match (
    Round INT,
    Location TEXT,
    Country TEXT,
    Date TEXT,
    Fastest_Qualifying TEXT,
    Winning_Pilot TEXT,
    Winning_Aircraft TEXT
);

CREATE TABLE airport (
    Airport_ID INT,
    Airport_Name TEXT,
    Total_Passengers INT,
    %_Change_2007 TEXT,
    International_Passengers INT,
    Domestic_Passengers INT,
    Transit_Passengers INT,
    Aircraft_Movements INT,
    Freight_Metric_Tonnes INT
);

CREATE TABLE airport_aircraft (
    ID INT,
    Airport_ID INT,
    Aircraft_ID INT
);"
restaurant_1,"Student : StuID (number) , LName (text) , Fname (text) , Age (number) , Sex (text) , Major (number) , Advisor (number) , city_code (text) | Restaurant : ResID (number) , ResName (text) , Address (text) , Rating (number) | Type_Of_Restaurant : ResID (number) , ResTypeID (number) | Restaurant_Type : ResTypeID (number) , ResTypeName (text) , ResTypeDescription (text) | Visits_Restaurant : StuID (number) , ResID (number) , Time (time) , Spent (number)","CREATE TABLE Student (
    StuID INT,
    LName TEXT,
    Fname TEXT,
    Age INT,
    Sex TEXT,
    Major INT,
    Advisor INT,
    city_code TEXT
);

CREATE TABLE Restaurant (
    ResID INT,
    ResName TEXT,
    Address TEXT,
    Rating INT
);

CREATE TABLE Type_Of_Restaurant (
    ResID INT,
    ResTypeID INT
);

CREATE TABLE Restaurant_Type (
    ResTypeID INT,
    ResTypeName TEXT,
    ResTypeDescription TEXT
);

CREATE TABLE Visits_Restaurant (
    StuID INT,
    ResID INT,
    Time TIME,
    Spent INT
);"
customers_and_invoices,"Customers : customer_id (number) , customer_first_name (text) , customer_middle_initial (text) , customer_last_name (text) , gender (text) , email_address (text) , login_name (text) , login_password (text) , phone_number (text) , town_city (text) , state_county_province (text) , country (text) | Orders : order_id (number) , customer_id (number) , date_order_placed (time) , order_details (text) | Invoices : invoice_number (number) , order_id (number) , invoice_date (time) | Accounts : account_id (number) , customer_id (number) , date_account_opened (time) , account_name (text) , other_account_details (text) | Product_Categories : production_type_code (text) , product_type_description (text) , vat_rating (number) | Products : product_id (number) , parent_product_id (number) , production_type_code (text) , unit_price (number) , product_name (text) , product_color (text) , product_size (text) | Financial_Transactions : transaction_id (number) , account_id (number) , invoice_number (number) , transaction_type (text) , transaction_date (time) , transaction_amount (number) , transaction_comment (text) , other_transaction_details (text) | Order_Items : order_item_id (number) , order_id (number) , product_id (number) , product_quantity (text) , other_order_item_details (text) | Invoice_Line_Items : order_item_id (number) , invoice_number (number) , product_id (number) , product_title (text) , product_quantity (text) , product_price (number) , derived_product_cost (number) , derived_vat_payable (number) , derived_total_cost (number)","CREATE TABLE Customers (
    customer_id INT,
    customer_first_name TEXT,
    customer_middle_initial TEXT,
    customer_last_name TEXT,
    gender TEXT,
    email_address TEXT,
    login_name TEXT,
    login_password TEXT,
    phone_number TEXT,
    town_city TEXT,
    state_county_province TEXT,
    country TEXT
);

CREATE TABLE Orders (
    order_id INT,
    customer_id INT,
    date_order_placed TIME,
    order_details TEXT
);

CREATE TABLE Invoices (
    invoice_number INT,
    order_id INT,
    invoice_date TIME
);

CREATE TABLE Accounts (
    account_id INT,
    customer_id INT,
    date_account_opened TIME,
    account_name TEXT,
    other_account_details TEXT
);

CREATE TABLE Product_Categories (
    production_type_code TEXT,
    product_type_description TEXT,
    vat_rating INT
);

CREATE TABLE Products (
    product_id INT,
    parent_product_id INT,
    production_type_code TEXT,
    unit_price INT,
    product_name TEXT,
    product_color TEXT,
    product_size TEXT
);

CREATE TABLE Financial_Transactions (
    transaction_id INT,
    account_id INT,
    invoice_number INT,
    transaction_type TEXT,
    transaction_date TIME,
    transaction_amount INT,
    transaction_comment TEXT,
    other_transaction_details TEXT
);

CREATE TABLE Order_Items (
    order_item_id INT,
    order_id INT,
    product_id INT,
    product_quantity TEXT,
    other_order_item_details TEXT
);

CREATE TABLE Invoice_Line_Items (
    order_item_id INT,
    invoice_number INT,
    product_id INT,
    product_title TEXT,
    product_quantity TEXT,
    product_price INT,
    derived_product_cost INT,
    derived_vat_payable INT,
    derived_total_cost INT
);"
insurance_and_eClaims,"Customers : Customer_ID (number) , Customer_Details (text) | Staff : Staff_ID (number) , Staff_Details (text) | Policies : Policy_ID (number) , Customer_ID (number) , Policy_Type_Code (text) , Start_Date (time) , End_Date (time) | Claim_Headers : Claim_Header_ID (number) , Claim_Status_Code (text) , Claim_Type_Code (text) , Policy_ID (number) , Date_of_Claim (time) , Date_of_Settlement (time) , Amount_Claimed (number) , Amount_Piad (number) | Claims_Documents : Claim_ID (number) , Document_Type_Code (text) , Created_by_Staff_ID (number) , Created_Date (number) | Claims_Processing_Stages : Claim_Stage_ID (number) , Next_Claim_Stage_ID (number) , Claim_Status_Name (text) , Claim_Status_Description (text) | Claims_Processing : Claim_Processing_ID (number) , Claim_ID (number) , Claim_Outcome_Code (text) , Claim_Stage_ID (number) , Staff_ID (number)","CREATE TABLE Customers (
    Customer_ID INT,
    Customer_Details TEXT
);

CREATE TABLE Staff (
    Staff_ID INT,
    Staff_Details TEXT
);

CREATE TABLE Policies (
    Policy_ID INT,
    Customer_ID INT,
    Policy_Type_Code TEXT,
    Start_Date TIME,
    End_Date TIME
);

CREATE TABLE Claim_Headers (
    Claim_Header_ID INT,
    Claim_Status_Code TEXT,
    Claim_Type_Code TEXT,
    Policy_ID INT,
    Date_of_Claim TIME,
    Date_of_Settlement TIME,
    Amount_Claimed INT,
    Amount_Piad INT
);

CREATE TABLE Claims_Documents (
    Claim_ID INT,
    Document_Type_Code TEXT,
    Created_by_Staff_ID INT,
    Created_Date INT
);

CREATE TABLE Claims_Processing_Stages (
    Claim_Stage_ID INT,
    Next_Claim_Stage_ID INT,
    Claim_Status_Name TEXT,
    Claim_Status_Description TEXT
);

CREATE TABLE Claims_Processing (
    Claim_Processing_ID INT,
    Claim_ID INT,
    Claim_Outcome_Code TEXT,
    Claim_Stage_ID INT,
    Staff_ID INT
);"
college_1,"CLASS : CLASS_CODE (text) , CRS_CODE (text) , CLASS_SECTION (text) , CLASS_TIME (text) , CLASS_ROOM (text) , PROF_NUM (number) | COURSE : CRS_CODE (text) , DEPT_CODE (text) , CRS_DESCRIPTION (text) , CRS_CREDIT (number) | DEPARTMENT : DEPT_CODE (text) , DEPT_NAME (text) , SCHOOL_CODE (text) , EMP_NUM (number) , DEPT_ADDRESS (text) , DEPT_EXTENSION (text) | EMPLOYEE : EMP_NUM (number) , EMP_LNAME (text) , EMP_FNAME (text) , EMP_INITIAL (text) , EMP_JOBCODE (text) , EMP_HIREDATE (time) , EMP_DOB (time) | ENROLL : CLASS_CODE (text) , STU_NUM (number) , ENROLL_GRADE (text) | PROFESSOR : EMP_NUM (number) , DEPT_CODE (text) , PROF_OFFICE (text) , PROF_EXTENSION (text) , PROF_HIGH_DEGREE (text) | STUDENT : STU_NUM (number) , STU_LNAME (text) , STU_FNAME (text) , STU_INIT (text) , STU_DOB (time) , STU_HRS (number) , STU_CLASS (text) , STU_GPA (number) , STU_TRANSFER (number) , DEPT_CODE (text) , STU_PHONE (text) , PROF_NUM (number)","CREATE TABLE CLASS (
    CLASS_CODE TEXT,
    CRS_CODE TEXT,
    CLASS_SECTION TEXT,
    CLASS_TIME TEXT,
    CLASS_ROOM TEXT,
    PROF_NUM INT
);

CREATE TABLE COURSE (
    CRS_CODE TEXT,
    DEPT_CODE TEXT,
    CRS_DESCRIPTION TEXT,
    CRS_CREDIT INT
);

CREATE TABLE DEPARTMENT (
    DEPT_CODE TEXT,
    DEPT_NAME TEXT,
    SCHOOL_CODE TEXT,
    EMP_NUM INT,
    DEPT_ADDRESS TEXT,
    DEPT_EXTENSION TEXT
);

CREATE TABLE EMPLOYEE (
    EMP_NUM INT,
    EMP_LNAME TEXT,
    EMP_FNAME TEXT,
    EMP_INITIAL TEXT,
    EMP_JOBCODE TEXT,
    EMP_HIREDATE TIME,
    EMP_DOB TIME
);

CREATE TABLE ENROLL (
    CLASS_CODE TEXT,
    STU_NUM INT,
    ENROLL_GRADE TEXT
);

CREATE TABLE PROFESSOR (
    EMP_NUM INT,
    DEPT_CODE TEXT,
    PROF_OFFICE TEXT,
    PROF_EXTENSION TEXT,
    PROF_HIGH_DEGREE TEXT
);

CREATE TABLE STUDENT (
    STU_NUM INT,
    STU_LNAME TEXT,
    STU_FNAME TEXT,
    STU_INIT TEXT,
    STU_DOB TIME,
    STU_HRS INT,
    STU_CLASS TEXT,
    STU_GPA INT,
    STU_TRANSFER INT,
    DEPT_CODE TEXT,
    STU_PHONE TEXT,
    PROF_NUM INT
);"
local_govt_mdm,"Customer_Master_Index : master_customer_id (number) , cmi_details (text) | CMI_Cross_References : cmi_cross_ref_id (number) , master_customer_id (number) , source_system_code (text) | Council_Tax : council_tax_id (number) , cmi_cross_ref_id (number) | Business_Rates : business_rates_id (number) , cmi_cross_ref_id (number) | Benefits_Overpayments : council_tax_id (number) , cmi_cross_ref_id (number) | Parking_Fines : council_tax_id (number) , cmi_cross_ref_id (number) | Rent_Arrears : council_tax_id (number) , cmi_cross_ref_id (number) | Electoral_Register : electoral_register_id (number) , cmi_cross_ref_id (number)","CREATE TABLE Customer_Master_Index (
    master_customer_id INT,
    cmi_details TEXT
);

CREATE TABLE CMI_Cross_References (
    cmi_cross_ref_id INT,
    master_customer_id INT,
    source_system_code TEXT
);

CREATE TABLE Council_Tax (
    council_tax_id INT,
    cmi_cross_ref_id INT
);

CREATE TABLE Business_Rates (
    business_rates_id INT,
    cmi_cross_ref_id INT
);

CREATE TABLE Benefits_Overpayments (
    council_tax_id INT,
    cmi_cross_ref_id INT
);

CREATE TABLE Parking_Fines (
    council_tax_id INT,
    cmi_cross_ref_id INT
);

CREATE TABLE Rent_Arrears (
    council_tax_id INT,
    cmi_cross_ref_id INT
);

CREATE TABLE Electoral_Register (
    electoral_register_id INT,
    cmi_cross_ref_id INT
);"
book_2,"publication : Publication_ID (number) , Book_ID (number) , Publisher (text) , Publication_Date (text) , Price (number) | book : Book_ID (number) , Title (text) , Issues (number) , Writer (text)","CREATE TABLE publication (
    Publication_ID INT,
    Book_ID INT,
    Publisher TEXT,
    Publication_Date TEXT,
    Price INT
);

CREATE TABLE book (
    Book_ID INT,
    Title TEXT,
    Issues INT,
    Writer TEXT
);"
hr_1,"regions : REGION_ID (number) , REGION_NAME (text) | countries : COUNTRY_ID (text) , COUNTRY_NAME (text) , REGION_ID (number) | departments : DEPARTMENT_ID (number) , DEPARTMENT_NAME (text) , MANAGER_ID (number) , LOCATION_ID (number) | jobs : JOB_ID (text) , JOB_TITLE (text) , MIN_SALARY (number) , MAX_SALARY (number) | employees : EMPLOYEE_ID (number) , FIRST_NAME (text) , LAST_NAME (text) , EMAIL (text) , PHONE_NUMBER (text) , HIRE_DATE (time) , JOB_ID (text) , SALARY (number) , COMMISSION_PCT (number) , MANAGER_ID (number) , DEPARTMENT_ID (number) | job_history : EMPLOYEE_ID (number) , START_DATE (time) , END_DATE (time) , JOB_ID (text) , DEPARTMENT_ID (number) | locations : LOCATION_ID (number) , STREET_ADDRESS (text) , POSTAL_CODE (text) , CITY (text) , STATE_PROVINCE (text) , COUNTRY_ID (text)","CREATE TABLE regions (
    REGION_ID INT,
    REGION_NAME TEXT
);

CREATE TABLE countries (
    COUNTRY_ID TEXT,
    COUNTRY_NAME TEXT,
    REGION_ID INT
);

CREATE TABLE departments (
    DEPARTMENT_ID INT,
    DEPARTMENT_NAME TEXT,
    MANAGER_ID INT,
    LOCATION_ID INT
);

CREATE TABLE jobs (
    JOB_ID TEXT,
    JOB_TITLE TEXT,
    MIN_SALARY INT,
    MAX_SALARY INT
);

CREATE TABLE employees (
    EMPLOYEE_ID INT,
    FIRST_NAME TEXT,
    LAST_NAME TEXT,
    EMAIL TEXT,
    PHONE_NUMBER TEXT,
    HIRE_DATE TIME,
    JOB_ID TEXT,
    SALARY INT,
    COMMISSION_PCT INT,
    MANAGER_ID INT,
    DEPARTMENT_ID INT
);

CREATE TABLE job_history (
    EMPLOYEE_ID INT,
    START_DATE TIME,
    END_DATE TIME,
    JOB_ID TEXT,
    DEPARTMENT_ID INT
);

CREATE TABLE locations (
    LOCATION_ID INT,
    STREET_ADDRESS TEXT,
    POSTAL_CODE TEXT,
    CITY TEXT,
    STATE_PROVINCE TEXT,
    COUNTRY_ID TEXT
);"
soccer_1,"Player_Attributes : id (number) , player_fifa_api_id (number) , player_api_id (number) , date (text) , overall_rating (number) , potential (number) , preferred_foot (text) , attacking_work_rate (text) , defensive_work_rate (text) , crossing (number) , finishing (number) , heading_accuracy (number) , short_passing (number) , volleys (number) , dribbling (number) , curve (number) , free_kick_accuracy (number) , long_passing (number) , ball_control (number) , acceleration (number) , sprint_speed (number) , agility (number) , reactions (number) , balance (number) , shot_power (number) , jumping (number) , stamina (number) , strength (number) , long_shots (number) , aggression (number) , interceptions (number) , positioning (number) , vision (number) , penalties (number) , marking (number) , standing_tackle (number) , sliding_tackle (number) , gk_diving (number) , gk_handling (number) , gk_kicking (number) , gk_positioning (number) , gk_reflexes (number) | sqlite_sequence : name (text) , seq (text) | Player : id (number) , player_api_id (number) , player_name (text) , player_fifa_api_id (number) , birthday (text) , height (number) , weight (number) | League : id (number) , country_id (number) , name (text) | Country : id (number) , name (text) | Team : id (number) , team_api_id (number) , team_fifa_api_id (number) , team_long_name (text) , team_short_name (text) | Team_Attributes : id (number) , team_fifa_api_id (number) , team_api_id (number) , date (text) , buildUpPlaySpeed (number) , buildUpPlaySpeedClass (text) , buildUpPlayDribbling (number) , buildUpPlayDribblingClass (text) , buildUpPlayPassing (number) , buildUpPlayPassingClass (text) , buildUpPlayPositioningClass (text) , chanceCreationPassing (number) , chanceCreationPassingClass (text) , chanceCreationCrossing (number) , chanceCreationCrossingClass (text) , chanceCreationShooting (number) , chanceCreationShootingClass (text) , chanceCreationPositioningClass (text) , defencePressure (number) , defencePressureClass (text) , defenceAggression (number) , defenceAggressionClass (text) , defenceTeamWidth (number) , defenceTeamWidthClass (text) , defenceDefenderLineClass (text)","CREATE TABLE Player_Attributes (
    id INT,
    player_fifa_api_id INT,
    player_api_id INT,
    date TEXT,
    overall_rating INT,
    potential INT,
    preferred_foot TEXT,
    attacking_work_rate TEXT,
    defensive_work_rate TEXT,
    crossing INT,
    finishing INT,
    heading_accuracy INT,
    short_passing INT,
    volleys INT,
    dribbling INT,
    curve INT,
    free_kick_accuracy INT,
    long_passing INT,
    ball_control INT,
    acceleration INT,
    sprint_speed INT,
    agility INT,
    reactions INT,
    balance INT,
    shot_power INT,
    jumping INT,
    stamina INT,
    strength INT,
    long_shots INT,
    aggression INT,
    interceptions INT,
    positioning INT,
    vision INT,
    penalties INT,
    marking INT,
    standing_tackle INT,
    sliding_tackle INT,
    gk_diving INT,
    gk_handling INT,
    gk_kicking INT,
    gk_positioning INT,
    gk_reflexes INT
);

CREATE TABLE sqlite_sequence (
    name TEXT,
    seq TEXT
);

CREATE TABLE Player (
    id INT,
    player_api_id INT,
    player_name TEXT,
    player_fifa_api_id INT,
    birthday TEXT,
    height INT,
    weight INT
);

CREATE TABLE League (
    id INT,
    country_id INT,
    name TEXT
);

CREATE TABLE Country (
    id INT,
    name TEXT
);

CREATE TABLE Team (
    id INT,
    team_api_id INT,
    team_fifa_api_id INT,
    team_long_name TEXT,
    team_short_name TEXT
);

CREATE TABLE Team_Attributes (
    id INT,
    team_fifa_api_id INT,
    team_api_id INT,
    date TEXT,
    buildUpPlaySpeed INT,
    buildUpPlaySpeedClass TEXT,
    buildUpPlayDribbling INT,
    buildUpPlayDribblingClass TEXT,
    buildUpPlayPassing INT,
    buildUpPlayPassingClass TEXT,
    buildUpPlayPositioningClass TEXT,
    chanceCreationPassing INT,
    chanceCreationPassingClass TEXT,
    chanceCreationCrossing INT,
    chanceCreationCrossingClass TEXT,
    chanceCreationShooting INT,
    chanceCreationShootingClass TEXT,
    chanceCreationPositioningClass TEXT,
    defencePressure INT,
    defencePressureClass TEXT,
    defenceAggression INT,
    defenceAggressionClass TEXT,
    defenceTeamWidth INT,
    defenceTeamWidthClass TEXT,
    defenceDefenderLineClass TEXT
);"
sakila_1,"actor : actor_id (number) , first_name (text) , last_name (text) , last_update (time) | address : address_id (number) , address (text) , address2 (text) , district (text) , city_id (number) , postal_code (text) , phone (text) , last_update (time) | category : category_id (number) , name (text) , last_update (time) | city : city_id (number) , city (text) , country_id (number) , last_update (time) | country : country_id (number) , country (text) , last_update (time) | customer : customer_id (number) , store_id (number) , first_name (text) , last_name (text) , email (text) , address_id (number) , active (boolean) , create_date (time) , last_update (time) | film : film_id (number) , title (text) , description (text) , release_year (time) , language_id (number) , original_language_id (number) , rental_duration (number) , rental_rate (number) , length (number) , replacement_cost (number) , rating (text) , special_features (text) , last_update (time) | film_actor : actor_id (number) , film_id (number) , last_update (time) | film_category : film_id (number) , category_id (number) , last_update (time) | film_text : film_id (number) , title (text) , description (text) | inventory : inventory_id (number) , film_id (number) , store_id (number) , last_update (time) | language : language_id (number) , name (text) , last_update (time) | payment : payment_id (number) , customer_id (number) , staff_id (number) , rental_id (number) , amount (number) , payment_date (time) , last_update (time) | rental : rental_id (number) , rental_date (time) , inventory_id (number) , customer_id (number) , return_date (time) , staff_id (number) , last_update (time) | staff : staff_id (number) , first_name (text) , last_name (text) , address_id (number) , picture (others) , email (text) , store_id (number) , active (boolean) , username (text) , password (text) , last_update (time) | store : store_id (number) , manager_staff_id (number) , address_id (number) , last_update (time)","CREATE TABLE actor (
    actor_id INT,
    first_name TEXT,
    last_name TEXT,
    last_update TIME
);

CREATE TABLE address (
    address_id INT,
    address TEXT,
    address2 TEXT,
    district TEXT,
    city_id INT,
    postal_code TEXT,
    phone TEXT,
    last_update TIME
);

CREATE TABLE category (
    category_id INT,
    name TEXT,
    last_update TIME
);

CREATE TABLE city (
    city_id INT,
    city TEXT,
    country_id INT,
    last_update TIME
);

CREATE TABLE country (
    country_id INT,
    country TEXT,
    last_update TIME
);

CREATE TABLE customer (
    customer_id INT,
    store_id INT,
    first_name TEXT,
    last_name TEXT,
    email TEXT,
    address_id INT,
    active BOOLEAN,
    create_date TIME,
    last_update TIME
);

CREATE TABLE film (
    film_id INT,
    title TEXT,
    description TEXT,
    release_year TIME,
    language_id INT,
    original_language_id INT,
    rental_duration INT,
    rental_rate INT,
    length INT,
    replacement_cost INT,
    rating TEXT,
    special_features TEXT,
    last_update TIME
);

CREATE TABLE film_actor (
    actor_id INT,
    film_id INT,
    last_update TIME
);

CREATE TABLE film_category (
    film_id INT,
    category_id INT,
    last_update TIME
);

CREATE TABLE film_text (
    film_id INT,
    title TEXT,
    description TEXT
);

CREATE TABLE inventory (
    inventory_id INT,
    film_id INT,
    store_id INT,
    last_update TIME
);

CREATE TABLE language (
    language_id INT,
    name TEXT,
    last_update TIME
);

CREATE TABLE payment (
    payment_id INT,
    customer_id INT,
    staff_id INT,
    rental_id INT,
    amount INT,
    payment_date TIME,
    last_update TIME
);

CREATE TABLE rental (
    rental_id INT,
    rental_date TIME,
    inventory_id INT,
    customer_id INT,
    return_date TIME,
    staff_id INT,
    last_update TIME
);

CREATE TABLE staff (
    staff_id INT,
    first_name TEXT,
    last_name TEXT,
    address_id INT,
    picture OTHERS,
    email TEXT,
    store_id INT,
    active BOOLEAN,
    username TEXT,
    password TEXT,
    last_update TIME
);

CREATE TABLE store (
    store_id INT,
    manager_staff_id INT,
    address_id INT,
    last_update TIME
);"
real_estate_properties,"Ref_Feature_Types : feature_type_code (text) , feature_type_name (text) | Ref_Property_Types : property_type_code (text) , property_type_description (text) | Other_Available_Features : feature_id (number) , feature_type_code (text) , feature_name (text) , feature_description (text) | Properties : property_id (number) , property_type_code (text) , date_on_market (time) , date_sold (time) , property_name (text) , property_address (text) , room_count (number) , vendor_requested_price (number) , buyer_offered_price (number) , agreed_selling_price (number) , apt_feature_1 (text) , apt_feature_2 (text) , apt_feature_3 (text) , fld_feature_1 (text) , fld_feature_2 (text) , fld_feature_3 (text) , hse_feature_1 (text) , hse_feature_2 (text) , hse_feature_3 (text) , oth_feature_1 (text) , oth_feature_2 (text) , oth_feature_3 (text) , shp_feature_1 (text) , shp_feature_2 (text) , shp_feature_3 (text) , other_property_details (text) | Other_Property_Features : property_id (number) , feature_id (number) , property_feature_description (text)","CREATE TABLE Ref_Feature_Types (
    feature_type_code TEXT,
    feature_type_name TEXT
);

CREATE TABLE Ref_Property_Types (
    property_type_code TEXT,
    property_type_description TEXT
);

CREATE TABLE Other_Available_Features (
    feature_id INT,
    feature_type_code TEXT,
    feature_name TEXT,
    feature_description TEXT
);

CREATE TABLE Properties (
    property_id INT,
    property_type_code TEXT,
    date_on_market TIME,
    date_sold TIME,
    property_name TEXT,
    property_address TEXT,
    room_count INT,
    vendor_requested_price INT,
    buyer_offered_price INT,
    agreed_selling_price INT,
    apt_feature_1 TEXT,
    apt_feature_2 TEXT,
    apt_feature_3 TEXT,
    fld_feature_1 TEXT,
    fld_feature_2 TEXT,
    fld_feature_3 TEXT,
    hse_feature_1 TEXT,
    hse_feature_2 TEXT,
    hse_feature_3 TEXT,
    oth_feature_1 TEXT,
    oth_feature_2 TEXT,
    oth_feature_3 TEXT,
    shp_feature_1 TEXT,
    shp_feature_2 TEXT,
    shp_feature_3 TEXT,
    other_property_details TEXT
);

CREATE TABLE Other_Property_Features (
    property_id INT,
    feature_id INT,
    property_feature_description TEXT
);"
college_3,"Student : StuID (number) , LName (text) , Fname (text) , Age (number) , Sex (text) , Major (number) , Advisor (number) , city_code (text) | Faculty : FacID (number) , Lname (text) , Fname (text) , Rank (text) , Sex (text) , Phone (number) , Room (text) , Building (text) | Department : DNO (number) , Division (text) , DName (text) , Room (text) , Building (text) , DPhone (number) | Member_of : FacID (number) , DNO (number) , Appt_Type (text) | Course : CID (text) , CName (text) , Credits (number) , Instructor (number) , Days (text) , Hours (text) , DNO (number) | Minor_in : StuID (number) , DNO (number) | Enrolled_in : StuID (number) , CID (text) , Grade (text) | Gradeconversion : lettergrade (text) , gradepoint (number)","CREATE TABLE Student (
    StuID INT,
    LName TEXT,
    Fname TEXT,
    Age INT,
    Sex TEXT,
    Major INT,
    Advisor INT,
    city_code TEXT
);

CREATE TABLE Faculty (
    FacID INT,
    Lname TEXT,
    Fname TEXT,
    Rank TEXT,
    Sex TEXT,
    Phone INT,
    Room TEXT,
    Building TEXT
);

CREATE TABLE Department (
    DNO INT,
    Division TEXT,
    DName TEXT,
    Room TEXT,
    Building TEXT,
    DPhone INT
);

CREATE TABLE Member_of (
    FacID INT,
    DNO INT,
    Appt_Type TEXT
);

CREATE TABLE Course (
    CID TEXT,
    CName TEXT,
    Credits INT,
    Instructor INT,
    Days TEXT,
    Hours TEXT,
    DNO INT
);

CREATE TABLE Minor_in (
    StuID INT,
    DNO INT
);

CREATE TABLE Enrolled_in (
    StuID INT,
    CID TEXT,
    Grade TEXT
);

CREATE TABLE Gradeconversion (
    lettergrade TEXT,
    gradepoint INT
);"
course_teach,"course : Course_ID (number) , Staring_Date (text) , Course (text) | teacher : Teacher_ID (number) , Name (text) , Age (text) , Hometown (text) | course_arrange : Course_ID (number) , Teacher_ID (number) , Grade (number)","CREATE TABLE course (
    Course_ID INT,
    Staring_Date TEXT,
    Course TEXT
);

CREATE TABLE teacher (
    Teacher_ID INT,
    Name TEXT,
    Age TEXT,
    Hometown TEXT
);

CREATE TABLE course_arrange (
    Course_ID INT,
    Teacher_ID INT,
    Grade INT
);"
roller_coaster,"roller_coaster : Roller_Coaster_ID (number) , Name (text) , Park (text) , Country_ID (number) , Length (number) , Height (number) , Speed (text) , Opened (text) , Status (text) | country : Country_ID (number) , Name (text) , Population (number) , Area (number) , Languages (text)","CREATE TABLE roller_coaster (
    Roller_Coaster_ID INT,
    Name TEXT,
    Park TEXT,
    Country_ID INT,
    Length INT,
    Height INT,
    Speed TEXT,
    Opened TEXT,
    Status TEXT
);

CREATE TABLE country (
    Country_ID INT,
    Name TEXT,
    Population INT,
    Area INT,
    Languages TEXT
);"
customer_deliveries,"Products : product_id (number) , product_name (text) , product_price (number) , product_description (text) | Addresses : address_id (number) , address_details (text) , city (text) , zip_postcode (text) , state_province_county (text) , country (text) | Customers : customer_id (number) , payment_method (text) , customer_name (text) , customer_phone (text) , customer_email (text) , date_became_customer (time) | Regular_Orders : regular_order_id (number) , distributer_id (number) | Regular_Order_Products : regular_order_id (number) , product_id (number) | Actual_Orders : actual_order_id (number) , order_status_code (text) , regular_order_id (number) , actual_order_date (time) | Actual_Order_Products : actual_order_id (number) , product_id (number) | Customer_Addresses : customer_id (number) , address_id (number) , date_from (time) , address_type (text) , date_to (time) | Delivery_Routes : route_id (number) , route_name (text) , other_route_details (text) | Delivery_Route_Locations : location_code (text) , route_id (number) , location_address_id (number) , location_name (text) | Trucks : truck_id (number) , truck_licence_number (text) , truck_details (text) | Employees : employee_id (number) , employee_address_id (number) , employee_name (text) , employee_phone (text) | Order_Deliveries : location_code (text) , actual_order_id (number) , delivery_status_code (text) , driver_employee_id (number) , truck_id (number) , delivery_date (time)","CREATE TABLE Products (
    product_id INT,
    product_name TEXT,
    product_price INT,
    product_description TEXT
);

CREATE TABLE Addresses (
    address_id INT,
    address_details TEXT,
    city TEXT,
    zip_postcode TEXT,
    state_province_county TEXT,
    country TEXT
);

CREATE TABLE Customers (
    customer_id INT,
    payment_method TEXT,
    customer_name TEXT,
    customer_phone TEXT,
    customer_email TEXT,
    date_became_customer TIME
);

CREATE TABLE Regular_Orders (
    regular_order_id INT,
    distributer_id INT
);

CREATE TABLE Regular_Order_Products (
    regular_order_id INT,
    product_id INT
);

CREATE TABLE Actual_Orders (
    actual_order_id INT,
    order_status_code TEXT,
    regular_order_id INT,
    actual_order_date TIME
);

CREATE TABLE Actual_Order_Products (
    actual_order_id INT,
    product_id INT
);

CREATE TABLE Customer_Addresses (
    customer_id INT,
    address_id INT,
    date_from TIME,
    address_type TEXT,
    date_to TIME
);

CREATE TABLE Delivery_Routes (
    route_id INT,
    route_name TEXT,
    other_route_details TEXT
);

CREATE TABLE Delivery_Route_Locations (
    location_code TEXT,
    route_id INT,
    location_address_id INT,
    location_name TEXT
);

CREATE TABLE Trucks (
    truck_id INT,
    truck_licence_number TEXT,
    truck_details TEXT
);

CREATE TABLE Employees (
    employee_id INT,
    employee_address_id INT,
    employee_name TEXT,
    employee_phone TEXT
);

CREATE TABLE Order_Deliveries (
    location_code TEXT,
    actual_order_id INT,
    delivery_status_code TEXT,
    driver_employee_id INT,
    truck_id INT,
    delivery_date TIME
);"
game_injury,"stadium : id (number) , name (text) , Home_Games (number) , Average_Attendance (number) , Total_Attendance (number) , Capacity_Percentage (number) | game : stadium_id (number) , id (number) , Season (number) , Date (text) , Home_team (text) , Away_team (text) , Score (text) , Competition (text) | injury_accident : game_id (number) , id (number) , Player (text) , Injury (text) , Number_of_matches (text) , Source (text)","CREATE TABLE stadium (
    id INT,
    name TEXT,
    Home_Games INT,
    Average_Attendance INT,
    Total_Attendance INT,
    Capacity_Percentage INT
);

CREATE TABLE game (
    stadium_id INT,
    id INT,
    Season INT,
    Date TEXT,
    Home_team TEXT,
    Away_team TEXT,
    Score TEXT,
    Competition TEXT
);

CREATE TABLE injury_accident (
    game_id INT,
    id INT,
    Player TEXT,
    Injury TEXT,
    Number_of_matches TEXT,
    Source TEXT
);"
school_finance,"School : School_id (text) , School_name (text) , Location (text) , Mascot (text) , Enrollment (number) , IHSAA_Class (text) , IHSAA_Football_Class (text) , County (text) | budget : School_id (number) , Year (number) , Budgeted (number) , total_budget_percent_budgeted (number) , Invested (number) , total_budget_percent_invested (number) , Budget_invested_percent (text) | endowment : endowment_id (number) , School_id (number) , donator_name (text) , amount (number)","CREATE TABLE School (
    School_id TEXT,
    School_name TEXT,
    Location TEXT,
    Mascot TEXT,
    Enrollment INT,
    IHSAA_Class TEXT,
    IHSAA_Football_Class TEXT,
    County TEXT
);

CREATE TABLE budget (
    School_id INT,
    Year INT,
    Budgeted INT,
    total_budget_percent_budgeted INT,
    Invested INT,
    total_budget_percent_invested INT,
    Budget_invested_percent TEXT
);

CREATE TABLE endowment (
    endowment_id INT,
    School_id INT,
    donator_name TEXT,
    amount INT
);"
scholar,"venue : venueId (number) , venueName (text) | author : authorId (number) , authorName (text) | dataset : datasetId (number) , datasetName (text) | journal : journalId (number) , journalName (text) | keyphrase : keyphraseId (number) , keyphraseName (text) | paper : paperId (number) , title (text) , venueId (number) , year (number) , numCiting (number) , numCitedBy (number) , journalId (number) | cite : citingPaperId (number) , citedPaperId (number) | paperDataset : paperId (number) , datasetId (number) | paperKeyphrase : paperId (number) , keyphraseId (number) | writes : paperId (number) , authorId (number)","CREATE TABLE venue (
    venueId INT,
    venueName TEXT
);

CREATE TABLE author (
    authorId INT,
    authorName TEXT
);

CREATE TABLE dataset (
    datasetId INT,
    datasetName TEXT
);

CREATE TABLE journal (
    journalId INT,
    journalName TEXT
);

CREATE TABLE keyphrase (
    keyphraseId INT,
    keyphraseName TEXT
);

CREATE TABLE paper (
    paperId INT,
    title TEXT,
    venueId INT,
    year INT,
    numCiting INT,
    numCitedBy INT,
    journalId INT
);

CREATE TABLE cite (
    citingPaperId INT,
    citedPaperId INT
);

CREATE TABLE paperDataset (
    paperId INT,
    datasetId INT
);

CREATE TABLE paperKeyphrase (
    paperId INT,
    keyphraseId INT
);

CREATE TABLE writes (
    paperId INT,
    authorId INT
);"
voter_1,"AREA_CODE_STATE : area_code (number) , state (text) | CONTESTANTS : contestant_number (number) , contestant_name (text) | VOTES : vote_id (number) , phone_number (number) , state (text) , contestant_number (number) , created (time)","CREATE TABLE AREA_CODE_STATE (
    area_code INT,
    state TEXT
);

CREATE TABLE CONTESTANTS (
    contestant_number INT,
    contestant_name TEXT
);

CREATE TABLE VOTES (
    vote_id INT,
    phone_number INT,
    state TEXT,
    contestant_number INT,
    created TIME
);"
match_season,"country : Country_id (number) , Country_name (text) , Capital (text) , Official_native_language (text) | team : Team_id (number) , Name (text) | match_season : Season (number) , Player (text) , Position (text) , Country (number) , Team (number) , Draft_Pick_Number (number) , Draft_Class (text) , College (text) | player : Player_ID (number) , Player (text) , Years_Played (text) , Total_WL (text) , Singles_WL (text) , Doubles_WL (text) , Team (number)","CREATE TABLE country (
    Country_id INT,
    Country_name TEXT,
    Capital TEXT,
    Official_native_language TEXT
);

CREATE TABLE team (
    Team_id INT,
    Name TEXT
);

CREATE TABLE match_season (
    Season INT,
    Player TEXT,
    Position TEXT,
    Country INT,
    Team INT,
    Draft_Pick_Number INT,
    Draft_Class TEXT,
    College TEXT
);

CREATE TABLE player (
    Player_ID INT,
    Player TEXT,
    Years_Played TEXT,
    Total_WL TEXT,
    Singles_WL TEXT,
    Doubles_WL TEXT,
    Team INT
);"
small_bank_1,"ACCOUNTS : custid (number) , name (text) | SAVINGS : custid (number) , balance (number) | CHECKING : custid (number) , balance (number)","CREATE TABLE ACCOUNTS (
    custid INT,
    name TEXT
);

CREATE TABLE SAVINGS (
    custid INT,
    balance INT
);

CREATE TABLE CHECKING (
    custid INT,
    balance INT
);"
wta_1,"players : player_id (number) , first_name (text) , last_name (text) , hand (text) , birth_date (time) , country_code (text) | matches : best_of (number) , draw_size (number) , loser_age (number) , loser_entry (text) , loser_hand (text) , loser_ht (number) , loser_id (number) , loser_ioc (text) , loser_name (text) , loser_rank (number) , loser_rank_points (number) , loser_seed (number) , match_num (number) , minutes (number) , round (text) , score (text) , surface (text) , tourney_date (time) , tourney_id (text) , tourney_level (text) , tourney_name (text) , winner_age (number) , winner_entry (text) , winner_hand (text) , winner_ht (number) , winner_id (number) , winner_ioc (text) , winner_name (text) , winner_rank (number) , winner_rank_points (number) , winner_seed (number) , year (number) | rankings : ranking_date (time) , ranking (number) , player_id (number) , ranking_points (number) , tours (number)","CREATE TABLE players (
    player_id INT,
    first_name TEXT,
    last_name TEXT,
    hand TEXT,
    birth_date TIME,
    country_code TEXT
);

CREATE TABLE matches (
    best_of INT,
    draw_size INT,
    loser_age INT,
    loser_entry TEXT,
    loser_hand TEXT,
    loser_ht INT,
    loser_id INT,
    loser_ioc TEXT,
    loser_name TEXT,
    loser_rank INT,
    loser_rank_points INT,
    loser_seed INT,
    match_num INT,
    minutes INT,
    round TEXT,
    score TEXT,
    surface TEXT,
    tourney_date TIME,
    tourney_id TEXT,
    tourney_level TEXT,
    tourney_name TEXT,
    winner_age INT,
    winner_entry TEXT,
    winner_hand TEXT,
    winner_ht INT,
    winner_id INT,
    winner_ioc TEXT,
    winner_name TEXT,
    winner_rank INT,
    winner_rank_points INT,
    winner_seed INT,
    year INT
);

CREATE TABLE rankings (
    ranking_date TIME,
    ranking INT,
    player_id INT,
    ranking_points INT,
    tours INT
);"
yelp,"business : bid (number) , business_id (text) , name (text) , full_address (text) , city (text) , latitude (text) , longitude (text) , review_count (number) , is_open (number) , rating (number) , state (text) | category : id (number) , business_id (text) , category_name (text) | user : uid (number) , user_id (text) , name (text) | checkin : cid (number) , business_id (text) , count (number) , day (text) | neighbourhood : id (number) , business_id (text) , neighbourhood_name (text) | review : rid (number) , business_id (text) , user_id (text) , rating (number) , text (text) , year (number) , month (text) | tip : tip_id (number) , business_id (text) , text (text) , user_id (text) , likes (number) , year (number) , month (text)","CREATE TABLE business (
    bid INT,
    business_id TEXT,
    name TEXT,
    full_address TEXT,
    city TEXT,
    latitude TEXT,
    longitude TEXT,
    review_count INT,
    is_open INT,
    rating INT,
    state TEXT
);

CREATE TABLE category (
    id INT,
    business_id TEXT,
    category_name TEXT
);

CREATE TABLE user (
    uid INT,
    user_id TEXT,
    name TEXT
);

CREATE TABLE checkin (
    cid INT,
    business_id TEXT,
    count INT,
    day TEXT
);

CREATE TABLE neighbourhood (
    id INT,
    business_id TEXT,
    neighbourhood_name TEXT
);

CREATE TABLE review (
    rid INT,
    business_id TEXT,
    user_id TEXT,
    rating INT,
    text TEXT,
    year INT,
    month TEXT
);

CREATE TABLE tip (
    tip_id INT,
    business_id TEXT,
    text TEXT,
    user_id TEXT,
    likes INT,
    year INT,
    month TEXT
);"
student_1,"list : LastName (text) , FirstName (text) , Grade (number) , Classroom (number) | teachers : LastName (text) , FirstName (text) , Classroom (number)","CREATE TABLE list (
    LastName TEXT,
    FirstName TEXT,
    Grade INT,
    Classroom INT
);

CREATE TABLE teachers (
    LastName TEXT,
    FirstName TEXT,
    Classroom INT
);"
manufacturer,"manufacturer : Manufacturer_ID (number) , Open_Year (number) , Name (text) , Num_of_Factories (number) , Num_of_Shops (number) | furniture : Furniture_ID (number) , Name (text) , Num_of_Component (number) , Market_Rate (number) | furniture_manufacte : Manufacturer_ID (number) , Furniture_ID (number) , Price_in_Dollar (number)","CREATE TABLE manufacturer (
    Manufacturer_ID INT,
    Open_Year INT,
    Name TEXT,
    Num_of_Factories INT,
    Num_of_Shops INT
);

CREATE TABLE furniture (
    Furniture_ID INT,
    Name TEXT,
    Num_of_Component INT,
    Market_Rate INT
);

CREATE TABLE furniture_manufacte (
    Manufacturer_ID INT,
    Furniture_ID INT,
    Price_in_Dollar INT
);"
store_1,"artists : id (number) , name (text) | sqlite_sequence : name (text) , seq (text) | albums : id (number) , title (text) , artist_id (number) | employees : id (number) , last_name (text) , first_name (text) , title (text) , reports_to (number) , birth_date (time) , hire_date (time) , address (text) , city (text) , state (text) , country (text) , postal_code (text) , phone (text) , fax (text) , email (text) | customers : id (number) , first_name (text) , last_name (text) , company (text) , address (text) , city (text) , state (text) , country (text) , postal_code (text) , phone (text) , fax (text) , email (text) , support_rep_id (number) | genres : id (number) , name (text) | invoices : id (number) , customer_id (number) , invoice_date (time) , billing_address (text) , billing_city (text) , billing_state (text) , billing_country (text) , billing_postal_code (text) , total (number) | media_types : id (number) , name (text) | tracks : id (number) , name (text) , album_id (number) , media_type_id (number) , genre_id (number) , composer (text) , milliseconds (number) , bytes (number) , unit_price (number) | invoice_lines : id (number) , invoice_id (number) , track_id (number) , unit_price (number) , quantity (number) | playlists : id (number) , name (text) | playlist_tracks : playlist_id (number) , track_id (number)","CREATE TABLE artists (
    id INT,
    name TEXT
);

CREATE TABLE sqlite_sequence (
    name TEXT,
    seq TEXT
);

CREATE TABLE albums (
    id INT,
    title TEXT,
    artist_id INT
);

CREATE TABLE employees (
    id INT,
    last_name TEXT,
    first_name TEXT,
    title TEXT,
    reports_to INT,
    birth_date TIME,
    hire_date TIME,
    address TEXT,
    city TEXT,
    state TEXT,
    country TEXT,
    postal_code TEXT,
    phone TEXT,
    fax TEXT,
    email TEXT
);

CREATE TABLE customers (
    id INT,
    first_name TEXT,
    last_name TEXT,
    company TEXT,
    address TEXT,
    city TEXT,
    state TEXT,
    country TEXT,
    postal_code TEXT,
    phone TEXT,
    fax TEXT,
    email TEXT,
    support_rep_id INT
);

CREATE TABLE genres (
    id INT,
    name TEXT
);

CREATE TABLE invoices (
    id INT,
    customer_id INT,
    invoice_date TIME,
    billing_address TEXT,
    billing_city TEXT,
    billing_state TEXT,
    billing_country TEXT,
    billing_postal_code TEXT,
    total INT
);

CREATE TABLE media_types (
    id INT,
    name TEXT
);

CREATE TABLE tracks (
    id INT,
    name TEXT,
    album_id INT,
    media_type_id INT,
    genre_id INT,
    composer TEXT,
    milliseconds INT,
    bytes INT,
    unit_price INT
);

CREATE TABLE invoice_lines (
    id INT,
    invoice_id INT,
    track_id INT,
    unit_price INT,
    quantity INT
);

CREATE TABLE playlists (
    id INT,
    name TEXT
);

CREATE TABLE playlist_tracks (
    playlist_id INT,
    track_id INT
);"
train_station,"station : Station_ID (number) , Name (text) , Annual_entry_exit (number) , Annual_interchanges (number) , Total_Passengers (number) , Location (text) , Main_Services (text) , Number_of_Platforms (number) | train : Train_ID (number) , Name (text) , Time (text) , Service (text) | train_station : Train_ID (number) , Station_ID (number)","CREATE TABLE station (
    Station_ID INT,
    Name TEXT,
    Annual_entry_exit INT,
    Annual_interchanges INT,
    Total_Passengers INT,
    Location TEXT,
    Main_Services TEXT,
    Number_of_Platforms INT
);

CREATE TABLE train (
    Train_ID INT,
    Name TEXT,
    Time TEXT,
    Service TEXT
);

CREATE TABLE train_station (
    Train_ID INT,
    Station_ID INT
);"
document_management,"Roles : role_code (text) , role_description (text) | Users : user_id (number) , role_code (text) , user_name (text) , user_login (text) , password (text) | Document_Structures : document_structure_code (text) , parent_document_structure_code (text) , document_structure_description (text) | Functional_Areas : functional_area_code (text) , parent_functional_area_code (text) , functional_area_description (text) | Images : image_id (number) , image_alt_text (text) , image_name (text) , image_url (text) | Documents : document_code (text) , document_structure_code (text) , document_type_code (text) , access_count (number) , document_name (text) | Document_Functional_Areas : document_code (text) , functional_area_code (text) | Document_Sections : section_id (number) , document_code (text) , section_sequence (number) , section_code (text) , section_title (text) | Document_Sections_Images : section_id (number) , image_id (number)","CREATE TABLE Roles (
    role_code TEXT,
    role_description TEXT
);

CREATE TABLE Users (
    user_id INT,
    role_code TEXT,
    user_name TEXT,
    user_login TEXT,
    password TEXT
);

CREATE TABLE Document_Structures (
    document_structure_code TEXT,
    parent_document_structure_code TEXT,
    document_structure_description TEXT
);

CREATE TABLE Functional_Areas (
    functional_area_code TEXT,
    parent_functional_area_code TEXT,
    functional_area_description TEXT
);

CREATE TABLE Images (
    image_id INT,
    image_alt_text TEXT,
    image_name TEXT,
    image_url TEXT
);

CREATE TABLE Documents (
    document_code TEXT,
    document_structure_code TEXT,
    document_type_code TEXT,
    access_count INT,
    document_name TEXT
);

CREATE TABLE Document_Functional_Areas (
    document_code TEXT,
    functional_area_code TEXT
);

CREATE TABLE Document_Sections (
    section_id INT,
    document_code TEXT,
    section_sequence INT,
    section_code TEXT,
    section_title TEXT
);

CREATE TABLE Document_Sections_Images (
    section_id INT,
    image_id INT
);"
formula_1,"circuits : circuitId (number) , circuitRef (text) , name (text) , location (text) , country (text) , lat (number) , lng (number) , alt (number) , url (text) | races : raceId (number) , year (number) , round (number) , circuitId (number) , name (text) , date (text) , time (text) , url (text) | drivers : driverId (number) , driverRef (text) , number (number) , code (text) , forename (text) , surname (text) , dob (text) , nationality (text) , url (text) | status : statusId (number) , status (text) | seasons : year (number) , url (text) | constructors : constructorId (number) , constructorRef (text) , name (text) , nationality (text) , url (text) | constructorStandings : constructorStandingsId (number) , raceId (number) , constructorId (number) , points (number) , position (number) , positionText (text) , wins (number) | results : resultId (number) , raceId (number) , driverId (number) , constructorId (number) , number (number) , grid (number) , position (number) , positionText (text) , positionOrder (number) , points (number) , laps (number) , time (text) , milliseconds (number) , fastestLap (number) , rank (number) , fastestLapTime (text) , fastestLapSpeed (text) , statusId (number) | driverStandings : driverStandingsId (number) , raceId (number) , driverId (number) , points (number) , position (number) , positionText (text) , wins (number) | constructorResults : constructorResultsId (number) , raceId (number) , constructorId (number) , points (number) , status (number) | qualifying : qualifyId (number) , raceId (number) , driverId (number) , constructorId (number) , number (number) , position (number) , q1 (text) , q2 (text) , q3 (text) | pitStops : raceId (number) , driverId (number) , stop (number) , lap (number) , time (text) , duration (text) , milliseconds (number) | lapTimes : raceId (number) , driverId (number) , lap (number) , position (number) , time (text) , milliseconds (number)","CREATE TABLE circuits (
    circuitId INT,
    circuitRef TEXT,
    name TEXT,
    location TEXT,
    country TEXT,
    lat INT,
    lng INT,
    alt INT,
    url TEXT
);

CREATE TABLE races (
    raceId INT,
    year INT,
    round INT,
    circuitId INT,
    name TEXT,
    date TEXT,
    time TEXT,
    url TEXT
);

CREATE TABLE drivers (
    driverId INT,
    driverRef TEXT,
    number INT,
    code TEXT,
    forename TEXT,
    surname TEXT,
    dob TEXT,
    nationality TEXT,
    url TEXT
);

CREATE TABLE status (
    statusId INT,
    status TEXT
);

CREATE TABLE seasons (
    year INT,
    url TEXT
);

CREATE TABLE constructors (
    constructorId INT,
    constructorRef TEXT,
    name TEXT,
    nationality TEXT,
    url TEXT
);

CREATE TABLE constructorStandings (
    constructorStandingsId INT,
    raceId INT,
    constructorId INT,
    points INT,
    position INT,
    positionText TEXT,
    wins INT
);

CREATE TABLE results (
    resultId INT,
    raceId INT,
    driverId INT,
    constructorId INT,
    number INT,
    grid INT,
    position INT,
    positionText TEXT,
    positionOrder INT,
    points INT,
    laps INT,
    time TEXT,
    milliseconds INT,
    fastestLap INT,
    rank INT,
    fastestLapTime TEXT,
    fastestLapSpeed TEXT,
    statusId INT
);

CREATE TABLE driverStandings (
    driverStandingsId INT,
    raceId INT,
    driverId INT,
    points INT,
    position INT,
    positionText TEXT,
    wins INT
);

CREATE TABLE constructorResults (
    constructorResultsId INT,
    raceId INT,
    constructorId INT,
    points INT,
    status INT
);

CREATE TABLE qualifying (
    qualifyId INT,
    raceId INT,
    driverId INT,
    constructorId INT,
    number INT,
    position INT,
    q1 TEXT,
    q2 TEXT,
    q3 TEXT
);

CREATE TABLE pitStops (
    raceId INT,
    driverId INT,
    stop INT,
    lap INT,
    time TEXT,
    duration TEXT,
    milliseconds INT
);

CREATE TABLE lapTimes (
    raceId INT,
    driverId INT,
    lap INT,
    position INT,
    time TEXT,
    milliseconds INT
);"
game_1,"Student : StuID (number) , LName (text) , Fname (text) , Age (number) , Sex (text) , Major (number) , Advisor (number) , city_code (text) | Video_Games : GameID (number) , GName (text) , GType (text) | Plays_Games : StuID (number) , GameID (number) , Hours_Played (number) | SportsInfo : StuID (number) , SportName (text) , HoursPerWeek (number) , GamesPlayed (number) , OnScholarship (text)","CREATE TABLE Student (
    StuID INT,
    LName TEXT,
    Fname TEXT,
    Age INT,
    Sex TEXT,
    Major INT,
    Advisor INT,
    city_code TEXT
);

CREATE TABLE Video_Games (
    GameID INT,
    GName TEXT,
    GType TEXT
);

CREATE TABLE Plays_Games (
    StuID INT,
    GameID INT,
    Hours_Played INT
);

CREATE TABLE SportsInfo (
    StuID INT,
    SportName TEXT,
    HoursPerWeek INT,
    GamesPlayed INT,
    OnScholarship TEXT
);"
loan_1,"bank : branch_ID (number) , bname (text) , no_of_customers (number) , city (text) , state (text) | customer : cust_ID (text) , cust_name (text) , acc_type (text) , acc_bal (number) , no_of_loans (number) , credit_score (number) , branch_ID (number) , state (text) | loan : loan_ID (text) , loan_type (text) , cust_ID (text) , branch_ID (text) , amount (number)","CREATE TABLE bank (
    branch_ID INT,
    bname TEXT,
    no_of_customers INT,
    city TEXT,
    state TEXT
);

CREATE TABLE customer (
    cust_ID TEXT,
    cust_name TEXT,
    acc_type TEXT,
    acc_bal INT,
    no_of_loans INT,
    credit_score INT,
    branch_ID INT,
    state TEXT
);

CREATE TABLE loan (
    loan_ID TEXT,
    loan_type TEXT,
    cust_ID TEXT,
    branch_ID TEXT,
    amount INT
);"
bike_1,"station : id (number) , name (text) , lat (number) , long (number) , dock_count (number) , city (text) , installation_date (text) | status : station_id (number) , bikes_available (number) , docks_available (number) , time (text) | trip : id (number) , duration (number) , start_date (text) , start_station_name (text) , start_station_id (number) , end_date (text) , end_station_name (text) , end_station_id (number) , bike_id (number) , subscription_type (text) , zip_code (number) | weather : date (text) , max_temperature_f (number) , mean_temperature_f (number) , min_temperature_f (number) , max_dew_point_f (number) , mean_dew_point_f (number) , min_dew_point_f (number) , max_humidity (number) , mean_humidity (number) , min_humidity (number) , max_sea_level_pressure_inches (number) , mean_sea_level_pressure_inches (number) , min_sea_level_pressure_inches (number) , max_visibility_miles (number) , mean_visibility_miles (number) , min_visibility_miles (number) , max_wind_Speed_mph (number) , mean_wind_speed_mph (number) , max_gust_speed_mph (number) , precipitation_inches (number) , cloud_cover (number) , events (text) , wind_dir_degrees (number) , zip_code (number)","CREATE TABLE station (
    id INT,
    name TEXT,
    lat INT,
    long INT,
    dock_count INT,
    city TEXT,
    installation_date TEXT
);

CREATE TABLE status (
    station_id INT,
    bikes_available INT,
    docks_available INT,
    time TEXT
);

CREATE TABLE trip (
    id INT,
    duration INT,
    start_date TEXT,
    start_station_name TEXT,
    start_station_id INT,
    end_date TEXT,
    end_station_name TEXT,
    end_station_id INT,
    bike_id INT,
    subscription_type TEXT,
    zip_code INT
);

CREATE TABLE weather (
    date TEXT,
    max_temperature_f INT,
    mean_temperature_f INT,
    min_temperature_f INT,
    max_dew_point_f INT,
    mean_dew_point_f INT,
    min_dew_point_f INT,
    max_humidity INT,
    mean_humidity INT,
    min_humidity INT,
    max_sea_level_pressure_inches INT,
    mean_sea_level_pressure_inches INT,
    min_sea_level_pressure_inches INT,
    max_visibility_miles INT,
    mean_visibility_miles INT,
    min_visibility_miles INT,
    max_wind_Speed_mph INT,
    mean_wind_speed_mph INT,
    max_gust_speed_mph INT,
    precipitation_inches INT,
    cloud_cover INT,
    events TEXT,
    wind_dir_degrees INT,
    zip_code INT
);"
entrepreneur,"entrepreneur : Entrepreneur_ID (number) , People_ID (number) , Company (text) , Money_Requested (number) , Investor (text) | people : People_ID (number) , Name (text) , Height (number) , Weight (number) , Date_of_Birth (text)","CREATE TABLE entrepreneur (
    Entrepreneur_ID INT,
    People_ID INT,
    Company TEXT,
    Money_Requested INT,
    Investor TEXT
);

CREATE TABLE people (
    People_ID INT,
    Name TEXT,
    Height INT,
    Weight INT,
    Date_of_Birth TEXT
);"
orchestra,"conductor : Conductor_ID (number) , Name (text) , Age (number) , Nationality (text) , Year_of_Work (number) | orchestra : Orchestra_ID (number) , Orchestra (text) , Conductor_ID (number) , Record_Company (text) , Year_of_Founded (number) , Major_Record_Format (text) | performance : Performance_ID (number) , Orchestra_ID (number) , Type (text) , Date (text) , Official_ratings_(millions) (number) , Weekly_rank (text) , Share (text) | show : Show_ID (number) , Performance_ID (number) , If_first_show (others) , Result (text) , Attendance (number)","CREATE TABLE conductor (
    Conductor_ID INT,
    Name TEXT,
    Age INT,
    Nationality TEXT,
    Year_of_Work INT
);

CREATE TABLE orchestra (
    Orchestra_ID INT,
    Orchestra TEXT,
    Conductor_ID INT,
    Record_Company TEXT,
    Year_of_Founded INT,
    Major_Record_Format TEXT
);

CREATE TABLE performance (
    Performance_ID INT,
    Orchestra_ID INT,
    Type TEXT,
    Date TEXT,
    Official_ratings_(millions) INT,
    Weekly_rank TEXT,
    Share TEXT
);

CREATE TABLE show (
    Show_ID INT,
    Performance_ID INT,
    If_first_show OTHERS,
    Result TEXT,
    Attendance INT
);"
cre_Drama_Workshop_Groups,"Ref_Payment_Methods : payment_method_code (text) , payment_method_description (text) | Ref_Service_Types : Service_Type_Code (text) , Parent_Service_Type_Code (text) , Service_Type_Description (text) | Addresses : Address_ID (text) , Line_1 (text) , Line_2 (text) , City_Town (text) , State_County (text) , Other_Details (text) | Products : Product_ID (text) , Product_Name (text) , Product_Price (number) , Product_Description (text) , Other_Product_Service_Details (text) | Marketing_Regions : Marketing_Region_Code (text) , Marketing_Region_Name (text) , Marketing_Region_Descriptrion (text) , Other_Details (text) | Clients : Client_ID (number) , Address_ID (number) , Customer_Email_Address (text) , Customer_Name (text) , Customer_Phone (text) , Other_Details (text) | Drama_Workshop_Groups : Workshop_Group_ID (number) , Address_ID (number) , Currency_Code (text) , Marketing_Region_Code (text) , Store_Name (text) , Store_Phone (text) , Store_Email_Address (text) , Other_Details (text) | Performers : Performer_ID (number) , Address_ID (number) , Customer_Name (text) , Customer_Phone (text) , Customer_Email_Address (text) , Other_Details (text) | Customers : Customer_ID (text) , Address_ID (number) , Customer_Name (text) , Customer_Phone (text) , Customer_Email_Address (text) , Other_Details (text) | Stores : Store_ID (text) , Address_ID (number) , Marketing_Region_Code (text) , Store_Name (text) , Store_Phone (text) , Store_Email_Address (text) , Other_Details (text) | Bookings : Booking_ID (number) , Customer_ID (number) , Workshop_Group_ID (text) , Status_Code (text) , Store_ID (number) , Order_Date (time) , Planned_Delivery_Date (time) , Actual_Delivery_Date (time) , Other_Order_Details (text) | Performers_in_Bookings : Order_ID (number) , Performer_ID (number) | Customer_Orders : Order_ID (number) , Customer_ID (number) , Store_ID (number) , Order_Date (time) , Planned_Delivery_Date (time) , Actual_Delivery_Date (time) , Other_Order_Details (text) | Order_Items : Order_Item_ID (number) , Order_ID (number) , Product_ID (number) , Order_Quantity (text) , Other_Item_Details (text) | Invoices : Invoice_ID (number) , Order_ID (number) , payment_method_code (text) , Product_ID (number) , Order_Quantity (text) , Other_Item_Details (text) , Order_Item_ID (number) | Services : Service_ID (number) , Service_Type_Code (text) , Workshop_Group_ID (number) , Product_Description (text) , Product_Name (text) , Product_Price (number) , Other_Product_Service_Details (text) | Bookings_Services : Order_ID (number) , Product_ID (number) | Invoice_Items : Invoice_Item_ID (number) , Invoice_ID (number) , Order_ID (number) , Order_Item_ID (number) , Product_ID (number) , Order_Quantity (number) , Other_Item_Details (text)","CREATE TABLE Ref_Payment_Methods (
    payment_method_code TEXT,
    payment_method_description TEXT
);

CREATE TABLE Ref_Service_Types (
    Service_Type_Code TEXT,
    Parent_Service_Type_Code TEXT,
    Service_Type_Description TEXT
);

CREATE TABLE Addresses (
    Address_ID TEXT,
    Line_1 TEXT,
    Line_2 TEXT,
    City_Town TEXT,
    State_County TEXT,
    Other_Details TEXT
);

CREATE TABLE Products (
    Product_ID TEXT,
    Product_Name TEXT,
    Product_Price INT,
    Product_Description TEXT,
    Other_Product_Service_Details TEXT
);

CREATE TABLE Marketing_Regions (
    Marketing_Region_Code TEXT,
    Marketing_Region_Name TEXT,
    Marketing_Region_Descriptrion TEXT,
    Other_Details TEXT
);

CREATE TABLE Clients (
    Client_ID INT,
    Address_ID INT,
    Customer_Email_Address TEXT,
    Customer_Name TEXT,
    Customer_Phone TEXT,
    Other_Details TEXT
);

CREATE TABLE Drama_Workshop_Groups (
    Workshop_Group_ID INT,
    Address_ID INT,
    Currency_Code TEXT,
    Marketing_Region_Code TEXT,
    Store_Name TEXT,
    Store_Phone TEXT,
    Store_Email_Address TEXT,
    Other_Details TEXT
);

CREATE TABLE Performers (
    Performer_ID INT,
    Address_ID INT,
    Customer_Name TEXT,
    Customer_Phone TEXT,
    Customer_Email_Address TEXT,
    Other_Details TEXT
);

CREATE TABLE Customers (
    Customer_ID TEXT,
    Address_ID INT,
    Customer_Name TEXT,
    Customer_Phone TEXT,
    Customer_Email_Address TEXT,
    Other_Details TEXT
);

CREATE TABLE Stores (
    Store_ID TEXT,
    Address_ID INT,
    Marketing_Region_Code TEXT,
    Store_Name TEXT,
    Store_Phone TEXT,
    Store_Email_Address TEXT,
    Other_Details TEXT
);

CREATE TABLE Bookings (
    Booking_ID INT,
    Customer_ID INT,
    Workshop_Group_ID TEXT,
    Status_Code TEXT,
    Store_ID INT,
    Order_Date TIME,
    Planned_Delivery_Date TIME,
    Actual_Delivery_Date TIME,
    Other_Order_Details TEXT
);

CREATE TABLE Performers_in_Bookings (
    Order_ID INT,
    Performer_ID INT
);

CREATE TABLE Customer_Orders (
    Order_ID INT,
    Customer_ID INT,
    Store_ID INT,
    Order_Date TIME,
    Planned_Delivery_Date TIME,
    Actual_Delivery_Date TIME,
    Other_Order_Details TEXT
);

CREATE TABLE Order_Items (
    Order_Item_ID INT,
    Order_ID INT,
    Product_ID INT,
    Order_Quantity TEXT,
    Other_Item_Details TEXT
);

CREATE TABLE Invoices (
    Invoice_ID INT,
    Order_ID INT,
    payment_method_code TEXT,
    Product_ID INT,
    Order_Quantity TEXT,
    Other_Item_Details TEXT,
    Order_Item_ID INT
);

CREATE TABLE Services (
    Service_ID INT,
    Service_Type_Code TEXT,
    Workshop_Group_ID INT,
    Product_Description TEXT,
    Product_Name TEXT,
    Product_Price INT,
    Other_Product_Service_Details TEXT
);

CREATE TABLE Bookings_Services (
    Order_ID INT,
    Product_ID INT
);

CREATE TABLE Invoice_Items (
    Invoice_Item_ID INT,
    Invoice_ID INT,
    Order_ID INT,
    Order_Item_ID INT,
    Product_ID INT,
    Order_Quantity INT,
    Other_Item_Details TEXT
);"
car_1,"continents : ContId (number) , Continent (text) | countries : CountryId (number) , CountryName (text) , Continent (number) | car_makers : Id (number) , Maker (text) , FullName (text) , Country (text) | model_list : ModelId (number) , Maker (number) , Model (text) | car_names : MakeId (number) , Model (text) , Make (text) | cars_data : Id (number) , MPG (text) , Cylinders (number) , Edispl (number) , Horsepower (text) , Weight (number) , Accelerate (number) , Year (number)","CREATE TABLE continents (
    ContId INT,
    Continent TEXT
);

CREATE TABLE countries (
    CountryId INT,
    CountryName TEXT,
    Continent INT
);

CREATE TABLE car_makers (
    Id INT,
    Maker TEXT,
    FullName TEXT,
    Country TEXT
);

CREATE TABLE model_list (
    ModelId INT,
    Maker INT,
    Model TEXT
);

CREATE TABLE car_names (
    MakeId INT,
    Model TEXT,
    Make TEXT
);

CREATE TABLE cars_data (
    Id INT,
    MPG TEXT,
    Cylinders INT,
    Edispl INT,
    Horsepower TEXT,
    Weight INT,
    Accelerate INT,
    Year INT
);"
geo,"state : state_name (text) , population (number) , area (number) , country_name (text) , capital (text) , density (number) | city : city_name (text) , population (number) , country_name (text) , state_name (text) | border_info : state_name (text) , border (text) | highlow : state_name (text) , highest_elevation (text) , lowest_point (text) , highest_point (text) , lowest_elevation (text) | lake : lake_name (text) , area (number) , country_name (text) , state_name (text) | mountain : mountain_name (text) , mountain_altitude (number) , country_name (text) , state_name (text) | river : river_name (text) , length (number) , country_name (text) , traverse (text)","CREATE TABLE state (
    state_name TEXT,
    population INT,
    area INT,
    country_name TEXT,
    capital TEXT,
    density INT
);

CREATE TABLE city (
    city_name TEXT,
    population INT,
    country_name TEXT,
    state_name TEXT
);

CREATE TABLE border_info (
    state_name TEXT,
    border TEXT
);

CREATE TABLE highlow (
    state_name TEXT,
    highest_elevation TEXT,
    lowest_point TEXT,
    highest_point TEXT,
    lowest_elevation TEXT
);

CREATE TABLE lake (
    lake_name TEXT,
    area INT,
    country_name TEXT,
    state_name TEXT
);

CREATE TABLE mountain (
    mountain_name TEXT,
    mountain_altitude INT,
    country_name TEXT,
    state_name TEXT
);

CREATE TABLE river (
    river_name TEXT,
    length INT,
    country_name TEXT,
    traverse TEXT
);"
behavior_monitoring,"Ref_Address_Types : address_type_code (text) , address_type_description (text) | Ref_Detention_Type : detention_type_code (text) , detention_type_description (text) | Ref_Incident_Type : incident_type_code (text) , incident_type_description (text) | Addresses : address_id (number) , line_1 (text) , line_2 (text) , line_3 (text) , city (text) , zip_postcode (text) , state_province_county (text) , country (text) , other_address_details (text) | Students : student_id (number) , address_id (number) , first_name (text) , middle_name (text) , last_name (text) , cell_mobile_number (text) , email_address (text) , date_first_rental (time) , date_left_university (time) , other_student_details (text) | Teachers : teacher_id (number) , address_id (number) , first_name (text) , middle_name (text) , last_name (text) , gender (text) , cell_mobile_number (text) , email_address (text) , other_details (text) | Assessment_Notes : notes_id (number) , student_id (number) , teacher_id (number) , date_of_notes (time) , text_of_notes (text) , other_details (text) | Behavior_Incident : incident_id (number) , incident_type_code (text) , student_id (number) , date_incident_start (time) , date_incident_end (time) , incident_summary (text) , recommendations (text) , other_details (text) | Detention : detention_id (number) , detention_type_code (text) , teacher_id (number) , datetime_detention_start (time) , datetime_detention_end (time) , detention_summary (text) , other_details (text) | Student_Addresses : student_id (number) , address_id (number) , date_address_from (time) , date_address_to (time) , monthly_rental (number) , other_details (text) | Students_in_Detention : student_id (number) , detention_id (number) , incident_id (number)","CREATE TABLE Ref_Address_Types (
    address_type_code TEXT,
    address_type_description TEXT
);

CREATE TABLE Ref_Detention_Type (
    detention_type_code TEXT,
    detention_type_description TEXT
);

CREATE TABLE Ref_Incident_Type (
    incident_type_code TEXT,
    incident_type_description TEXT
);

CREATE TABLE Addresses (
    address_id INT,
    line_1 TEXT,
    line_2 TEXT,
    line_3 TEXT,
    city TEXT,
    zip_postcode TEXT,
    state_province_county TEXT,
    country TEXT,
    other_address_details TEXT
);

CREATE TABLE Students (
    student_id INT,
    address_id INT,
    first_name TEXT,
    middle_name TEXT,
    last_name TEXT,
    cell_mobile_number TEXT,
    email_address TEXT,
    date_first_rental TIME,
    date_left_university TIME,
    other_student_details TEXT
);

CREATE TABLE Teachers (
    teacher_id INT,
    address_id INT,
    first_name TEXT,
    middle_name TEXT,
    last_name TEXT,
    gender TEXT,
    cell_mobile_number TEXT,
    email_address TEXT,
    other_details TEXT
);

CREATE TABLE Assessment_Notes (
    notes_id INT,
    student_id INT,
    teacher_id INT,
    date_of_notes TIME,
    text_of_notes TEXT,
    other_details TEXT
);

CREATE TABLE Behavior_Incident (
    incident_id INT,
    incident_type_code TEXT,
    student_id INT,
    date_incident_start TIME,
    date_incident_end TIME,
    incident_summary TEXT,
    recommendations TEXT,
    other_details TEXT
);

CREATE TABLE Detention (
    detention_id INT,
    detention_type_code TEXT,
    teacher_id INT,
    datetime_detention_start TIME,
    datetime_detention_end TIME,
    detention_summary TEXT,
    other_details TEXT
);

CREATE TABLE Student_Addresses (
    student_id INT,
    address_id INT,
    date_address_from TIME,
    date_address_to TIME,
    monthly_rental INT,
    other_details TEXT
);

CREATE TABLE Students_in_Detention (
    student_id INT,
    detention_id INT,
    incident_id INT
);"
cre_Doc_Tracking_DB,"Ref_Document_Types : Document_Type_Code (text) , Document_Type_Name (text) , Document_Type_Description (text) | Ref_Calendar : Calendar_Date (time) , Day_Number (number) | Ref_Locations : Location_Code (text) , Location_Name (text) , Location_Description (text) | Roles : Role_Code (text) , Role_Name (text) , Role_Description (text) | All_Documents : Document_ID (number) , Date_Stored (time) , Document_Type_Code (text) , Document_Name (text) , Document_Description (text) , Other_Details (text) | Employees : Employee_ID (number) , Role_Code (text) , Employee_Name (text) , Gender_MFU (text) , Date_of_Birth (time) , Other_Details (text) | Document_Locations : Document_ID (number) , Location_Code (text) , Date_in_Location_From (time) , Date_in_Locaton_To (time) | Documents_to_be_Destroyed : Document_ID (number) , Destruction_Authorised_by_Employee_ID (number) , Destroyed_by_Employee_ID (number) , Planned_Destruction_Date (time) , Actual_Destruction_Date (time) , Other_Details (text)","CREATE TABLE Ref_Document_Types (
    Document_Type_Code TEXT,
    Document_Type_Name TEXT,
    Document_Type_Description TEXT
);

CREATE TABLE Ref_Calendar (
    Calendar_Date TIME,
    Day_Number INT
);

CREATE TABLE Ref_Locations (
    Location_Code TEXT,
    Location_Name TEXT,
    Location_Description TEXT
);

CREATE TABLE Roles (
    Role_Code TEXT,
    Role_Name TEXT,
    Role_Description TEXT
);

CREATE TABLE All_Documents (
    Document_ID INT,
    Date_Stored TIME,
    Document_Type_Code TEXT,
    Document_Name TEXT,
    Document_Description TEXT,
    Other_Details TEXT
);

CREATE TABLE Employees (
    Employee_ID INT,
    Role_Code TEXT,
    Employee_Name TEXT,
    Gender_MFU TEXT,
    Date_of_Birth TIME,
    Other_Details TEXT
);

CREATE TABLE Document_Locations (
    Document_ID INT,
    Location_Code TEXT,
    Date_in_Location_From TIME,
    Date_in_Locaton_To TIME
);

CREATE TABLE Documents_to_be_Destroyed (
    Document_ID INT,
    Destruction_Authorised_by_Employee_ID INT,
    Destroyed_by_Employee_ID INT,
    Planned_Destruction_Date TIME,
    Actual_Destruction_Date TIME,
    Other_Details TEXT
);"
university_basketball,"basketball_match : Team_ID (number) , School_ID (number) , Team_Name (text) , ACC_Regular_Season (text) , ACC_Percent (text) , ACC_Home (text) , ACC_Road (text) , All_Games (text) , All_Games_Percent (number) , All_Home (text) , All_Road (text) , All_Neutral (text) | university : School_ID (number) , School (text) , Location (text) , Founded (number) , Affiliation (text) , Enrollment (number) , Nickname (text) , Primary_conference (text)","CREATE TABLE basketball_match (
    Team_ID INT,
    School_ID INT,
    Team_Name TEXT,
    ACC_Regular_Season TEXT,
    ACC_Percent TEXT,
    ACC_Home TEXT,
    ACC_Road TEXT,
    All_Games TEXT,
    All_Games_Percent INT,
    All_Home TEXT,
    All_Road TEXT,
    All_Neutral TEXT
);

CREATE TABLE university (
    School_ID INT,
    School TEXT,
    Location TEXT,
    Founded INT,
    Affiliation TEXT,
    Enrollment INT,
    Nickname TEXT,
    Primary_conference TEXT
);"
soccer_2,"College : cName (text) , state (text) , enr (number) | Player : pID (number) , pName (text) , yCard (text) , HS (number) | Tryout : pID (number) , cName (text) , pPos (text) , decision (text)","CREATE TABLE College (
    cName TEXT,
    state TEXT,
    enr INT
);

CREATE TABLE Player (
    pID INT,
    pName TEXT,
    yCard TEXT,
    HS INT
);

CREATE TABLE Tryout (
    pID INT,
    cName TEXT,
    pPos TEXT,
    decision TEXT
);"
activity_1,"Activity : actid (number) , activity_name (text) | Participates_in : stuid (number) , actid (number) | Faculty_Participates_in : FacID (number) , actid (number) | Student : StuID (number) , LName (text) , Fname (text) , Age (number) , Sex (text) , Major (number) , Advisor (number) , city_code (text) | Faculty : FacID (number) , Lname (text) , Fname (text) , Rank (text) , Sex (text) , Phone (number) , Room (text) , Building (text)","CREATE TABLE Activity (
    actid INT,
    activity_name TEXT
);

CREATE TABLE Participates_in (
    stuid INT,
    actid INT
);

CREATE TABLE Faculty_Participates_in (
    FacID INT,
    actid INT
);

CREATE TABLE Student (
    StuID INT,
    LName TEXT,
    Fname TEXT,
    Age INT,
    Sex TEXT,
    Major INT,
    Advisor INT,
    city_code TEXT
);

CREATE TABLE Faculty (
    FacID INT,
    Lname TEXT,
    Fname TEXT,
    Rank TEXT,
    Sex TEXT,
    Phone INT,
    Room TEXT,
    Building TEXT
);"
cre_Theme_park,"Ref_Hotel_Star_Ratings : star_rating_code (text) , star_rating_description (text) | Locations : Location_ID (number) , Location_Name (text) , Address (text) , Other_Details (text) | Ref_Attraction_Types : Attraction_Type_Code (text) , Attraction_Type_Description (text) | Visitors : Tourist_ID (number) , Tourist_Details (text) | Features : Feature_ID (number) , Feature_Details (text) | Hotels : hotel_id (number) , star_rating_code (text) , pets_allowed_yn (text) , price_range (number) , other_hotel_details (text) | Tourist_Attractions : Tourist_Attraction_ID (number) , Attraction_Type_Code (text) , Location_ID (number) , How_to_Get_There (text) , Name (text) , Description (text) , Opening_Hours (text) , Other_Details (text) | Street_Markets : Market_ID (number) , Market_Details (text) | Shops : Shop_ID (number) , Shop_Details (text) | Museums : Museum_ID (number) , Museum_Details (text) | Royal_Family : Royal_Family_ID (number) , Royal_Family_Details (text) | Theme_Parks : Theme_Park_ID (number) , Theme_Park_Details (text) | Visits : Visit_ID (number) , Tourist_Attraction_ID (number) , Tourist_ID (number) , Visit_Date (time) , Visit_Details (text) | Photos : Photo_ID (number) , Tourist_Attraction_ID (number) , Name (text) , Description (text) , Filename (text) , Other_Details (text) | Staff : Staff_ID (number) , Tourist_Attraction_ID (number) , Name (text) , Other_Details (text) | Tourist_Attraction_Features : Tourist_Attraction_ID (number) , Feature_ID (number)","CREATE TABLE Ref_Hotel_Star_Ratings (
    star_rating_code TEXT,
    star_rating_description TEXT
);

CREATE TABLE Locations (
    Location_ID INT,
    Location_Name TEXT,
    Address TEXT,
    Other_Details TEXT
);

CREATE TABLE Ref_Attraction_Types (
    Attraction_Type_Code TEXT,
    Attraction_Type_Description TEXT
);

CREATE TABLE Visitors (
    Tourist_ID INT,
    Tourist_Details TEXT
);

CREATE TABLE Features (
    Feature_ID INT,
    Feature_Details TEXT
);

CREATE TABLE Hotels (
    hotel_id INT,
    star_rating_code TEXT,
    pets_allowed_yn TEXT,
    price_range INT,
    other_hotel_details TEXT
);

CREATE TABLE Tourist_Attractions (
    Tourist_Attraction_ID INT,
    Attraction_Type_Code TEXT,
    Location_ID INT,
    How_to_Get_There TEXT,
    Name TEXT,
    Description TEXT,
    Opening_Hours TEXT,
    Other_Details TEXT
);

CREATE TABLE Street_Markets (
    Market_ID INT,
    Market_Details TEXT
);

CREATE TABLE Shops (
    Shop_ID INT,
    Shop_Details TEXT
);

CREATE TABLE Museums (
    Museum_ID INT,
    Museum_Details TEXT
);

CREATE TABLE Royal_Family (
    Royal_Family_ID INT,
    Royal_Family_Details TEXT
);

CREATE TABLE Theme_Parks (
    Theme_Park_ID INT,
    Theme_Park_Details TEXT
);

CREATE TABLE Visits (
    Visit_ID INT,
    Tourist_Attraction_ID INT,
    Tourist_ID INT,
    Visit_Date TIME,
    Visit_Details TEXT
);

CREATE TABLE Photos (
    Photo_ID INT,
    Tourist_Attraction_ID INT,
    Name TEXT,
    Description TEXT,
    Filename TEXT,
    Other_Details TEXT
);

CREATE TABLE Staff (
    Staff_ID INT,
    Tourist_Attraction_ID INT,
    Name TEXT,
    Other_Details TEXT
);

CREATE TABLE Tourist_Attraction_Features (
    Tourist_Attraction_ID INT,
    Feature_ID INT
);"
twitter_1,"follows : f1 (number) , f2 (number) | tweets : id (number) , uid (number) , text (text) , createdate (time) | user_profiles : uid (number) , name (text) , email (text) , partitionid (number) , followers (number)","CREATE TABLE follows (
    f1 INT,
    f2 INT
);

CREATE TABLE tweets (
    id INT,
    uid INT,
    text TEXT,
    createdate TIME
);

CREATE TABLE user_profiles (
    uid INT,
    name TEXT,
    email TEXT,
    partitionid INT,
    followers INT
);"
election_representative,"election : Election_ID (number) , Representative_ID (number) , Date (text) , Votes (number) , Vote_Percent (number) , Seats (number) , Place (number) | representative : Representative_ID (number) , Name (text) , State (text) , Party (text) , Lifespan (text)","CREATE TABLE election (
    Election_ID INT,
    Representative_ID INT,
    Date TEXT,
    Votes INT,
    Vote_Percent INT,
    Seats INT,
    Place INT
);

CREATE TABLE representative (
    Representative_ID INT,
    Name TEXT,
    State TEXT,
    Party TEXT,
    Lifespan TEXT
);"
voter_2,"Student : StuID (number) , LName (text) , Fname (text) , Age (number) , Sex (text) , Major (number) , Advisor (number) , city_code (text) | Voting_record : StuID (number) , Registration_Date (text) , Election_Cycle (text) , President_Vote (number) , Vice_President_Vote (number) , Secretary_Vote (number) , Treasurer_Vote (number) , Class_President_Vote (number) , Class_Senator_Vote (number)","CREATE TABLE Student (
    StuID INT,
    LName TEXT,
    Fname TEXT,
    Age INT,
    Sex TEXT,
    Major INT,
    Advisor INT,
    city_code TEXT
);

CREATE TABLE Voting_record (
    StuID INT,
    Registration_Date TEXT,
    Election_Cycle TEXT,
    President_Vote INT,
    Vice_President_Vote INT,
    Secretary_Vote INT,
    Treasurer_Vote INT,
    Class_President_Vote INT,
    Class_Senator_Vote INT
);"
wedding,"people : People_ID (number) , Name (text) , Country (text) , Is_Male (text) , Age (number) | church : Church_ID (number) , Name (text) , Organized_by (text) , Open_Date (number) , Continuation_of (text) | wedding : Church_ID (number) , Male_ID (number) , Female_ID (number) , Year (number)","CREATE TABLE people (
    People_ID INT,
    Name TEXT,
    Country TEXT,
    Is_Male TEXT,
    Age INT
);

CREATE TABLE church (
    Church_ID INT,
    Name TEXT,
    Organized_by TEXT,
    Open_Date INT,
    Continuation_of TEXT
);

CREATE TABLE wedding (
    Church_ID INT,
    Male_ID INT,
    Female_ID INT,
    Year INT
);"
news_report,"event : Event_ID (number) , Date (text) , Venue (text) , Name (text) , Event_Attendance (number) | journalist : journalist_ID (number) , Name (text) , Nationality (text) , Age (text) , Years_working (number) | news_report : journalist_ID (number) , Event_ID (number) , Work_Type (text)","CREATE TABLE event (
    Event_ID INT,
    Date TEXT,
    Venue TEXT,
    Name TEXT,
    Event_Attendance INT
);

CREATE TABLE journalist (
    journalist_ID INT,
    Name TEXT,
    Nationality TEXT,
    Age TEXT,
    Years_working INT
);

CREATE TABLE news_report (
    journalist_ID INT,
    Event_ID INT,
    Work_Type TEXT
);"
wine_1,"grapes : ID (number) , Grape (text) , Color (text) | appellations : No (number) , Appelation (text) , County (text) , State (text) , Area (text) , isAVA (text) | wine : No (number) , Grape (text) , Winery (text) , Appelation (text) , State (text) , Name (text) , Year (number) , Price (number) , Score (number) , Cases (number) , Drink (text)","CREATE TABLE grapes (
    ID INT,
    Grape TEXT,
    Color TEXT
);

CREATE TABLE appellations (
    No INT,
    Appelation TEXT,
    County TEXT,
    State TEXT,
    Area TEXT,
    isAVA TEXT
);

CREATE TABLE wine (
    No INT,
    Grape TEXT,
    Winery TEXT,
    Appelation TEXT,
    State TEXT,
    Name TEXT,
    Year INT,
    Price INT,
    Score INT,
    Cases INT,
    Drink TEXT
);"
customers_and_addresses,"Addresses : address_id (number) , address_content (text) , city (text) , zip_postcode (text) , state_province_county (text) , country (text) , other_address_details (text) | Products : product_id (number) , product_details (text) | Customers : customer_id (number) , payment_method (text) , customer_name (text) , date_became_customer (time) , other_customer_details (text) | Customer_Addresses : customer_id (number) , address_id (number) , date_address_from (time) , address_type (text) , date_address_to (time) | Customer_Contact_Channels : customer_id (number) , channel_code (text) , active_from_date (time) , active_to_date (time) , contact_number (text) | Customer_Orders : order_id (number) , customer_id (number) , order_status (text) , order_date (time) , order_details (text) | Order_Items : order_id (number) , product_id (number) , order_quantity (text)","CREATE TABLE Addresses (
    address_id INT,
    address_content TEXT,
    city TEXT,
    zip_postcode TEXT,
    state_province_county TEXT,
    country TEXT,
    other_address_details TEXT
);

CREATE TABLE Products (
    product_id INT,
    product_details TEXT
);

CREATE TABLE Customers (
    customer_id INT,
    payment_method TEXT,
    customer_name TEXT,
    date_became_customer TIME,
    other_customer_details TEXT
);

CREATE TABLE Customer_Addresses (
    customer_id INT,
    address_id INT,
    date_address_from TIME,
    address_type TEXT,
    date_address_to TIME
);

CREATE TABLE Customer_Contact_Channels (
    customer_id INT,
    channel_code TEXT,
    active_from_date TIME,
    active_to_date TIME,
    contact_number TEXT
);

CREATE TABLE Customer_Orders (
    order_id INT,
    customer_id INT,
    order_status TEXT,
    order_date TIME,
    order_details TEXT
);

CREATE TABLE Order_Items (
    order_id INT,
    product_id INT,
    order_quantity TEXT
);"
protein_institute,"building : building_id (text) , Name (text) , Street_address (text) , Years_as_tallest (text) , Height_feet (number) , Floors (number) | Institution : Institution_id (text) , Institution (text) , Location (text) , Founded (number) , Type (text) , Enrollment (number) , Team (text) , Primary_Conference (text) , building_id (text) | protein : common_name (text) , protein_name (text) , divergence_from_human_lineage (number) , accession_number (text) , sequence_length (number) , sequence_identity_to_human_protein (text) , Institution_id (text)","CREATE TABLE building (
    building_id TEXT,
    Name TEXT,
    Street_address TEXT,
    Years_as_tallest TEXT,
    Height_feet INT,
    Floors INT
);

CREATE TABLE Institution (
    Institution_id TEXT,
    Institution TEXT,
    Location TEXT,
    Founded INT,
    Type TEXT,
    Enrollment INT,
    Team TEXT,
    Primary_Conference TEXT,
    building_id TEXT
);

CREATE TABLE protein (
    common_name TEXT,
    protein_name TEXT,
    divergence_from_human_lineage INT,
    accession_number TEXT,
    sequence_length INT,
    sequence_identity_to_human_protein TEXT,
    Institution_id TEXT
);"
school_player,"school : School_ID (number) , School (text) , Location (text) , Enrollment (number) , Founded (number) , Denomination (text) , Boys_or_Girls (text) , Day_or_Boarding (text) , Year_Entered_Competition (number) , School_Colors (text) | school_details : School_ID (number) , Nickname (text) , Colors (text) , League (text) , Class (text) , Division (text) | school_performance : School_Id (number) , School_Year (text) , Class_A (text) , Class_AA (text) | player : Player_ID (number) , Player (text) , Team (text) , Age (number) , Position (text) , School_ID (number)","CREATE TABLE school (
    School_ID INT,
    School TEXT,
    Location TEXT,
    Enrollment INT,
    Founded INT,
    Denomination TEXT,
    Boys_or_Girls TEXT,
    Day_or_Boarding TEXT,
    Year_Entered_Competition INT,
    School_Colors TEXT
);

CREATE TABLE school_details (
    School_ID INT,
    Nickname TEXT,
    Colors TEXT,
    League TEXT,
    Class TEXT,
    Division TEXT
);

CREATE TABLE school_performance (
    School_Id INT,
    School_Year TEXT,
    Class_A TEXT,
    Class_AA TEXT
);

CREATE TABLE player (
    Player_ID INT,
    Player TEXT,
    Team TEXT,
    Age INT,
    Position TEXT,
    School_ID INT
);"
phone_1,"chip_model : Model_name (text) , Launch_year (number) , RAM_MiB (number) , ROM_MiB (number) , Slots (text) , WiFi (text) , Bluetooth (text) | screen_mode : Graphics_mode (number) , Char_cells (text) , Pixels (text) , Hardware_colours (number) , used_kb (number) , map (text) , Type (text) | phone : Company_name (text) , Hardware_Model_name (text) , Accreditation_type (text) , Accreditation_level (text) , Date (text) , chip_model (text) , screen_mode (text)","CREATE TABLE chip_model (
    Model_name TEXT,
    Launch_year INT,
    RAM_MiB INT,
    ROM_MiB INT,
    Slots TEXT,
    WiFi TEXT,
    Bluetooth TEXT
);

CREATE TABLE screen_mode (
    Graphics_mode INT,
    Char_cells TEXT,
    Pixels TEXT,
    Hardware_colours INT,
    used_kb INT,
    map TEXT,
    Type TEXT
);

CREATE TABLE phone (
    Company_name TEXT,
    Hardware_Model_name TEXT,
    Accreditation_type TEXT,
    Accreditation_level TEXT,
    Date TEXT,
    chip_model TEXT,
    screen_mode TEXT
);"
tvshow,"TV_Channel : id (text) , series_name (text) , Country (text) , Language (text) , Content (text) , Pixel_aspect_ratio_PAR (text) , Hight_definition_TV (text) , Pay_per_view_PPV (text) , Package_Option (text) | TV_series : id (number) , Episode (text) , Air_Date (text) , Rating (text) , Share (number) , 18_49_Rating_Share (text) , Viewers_m (text) , Weekly_Rank (number) , Channel (text) | Cartoon : id (number) , Title (text) , Directed_by (text) , Written_by (text) , Original_air_date (text) , Production_code (number) , Channel (text)","CREATE TABLE TV_Channel (
    id TEXT,
    series_name TEXT,
    Country TEXT,
    Language TEXT,
    Content TEXT,
    Pixel_aspect_ratio_PAR TEXT,
    Hight_definition_TV TEXT,
    Pay_per_view_PPV TEXT,
    Package_Option TEXT
);

CREATE TABLE TV_series (
    id INT,
    Episode TEXT,
    Air_Date TEXT,
    Rating TEXT,
    Share INT,
    18_49_Rating_Share TEXT,
    Viewers_m TEXT,
    Weekly_Rank INT,
    Channel TEXT
);

CREATE TABLE Cartoon (
    id INT,
    Title TEXT,
    Directed_by TEXT,
    Written_by TEXT,
    Original_air_date TEXT,
    Production_code INT,
    Channel TEXT
);"
wrestler,"wrestler : Wrestler_ID (number) , Name (text) , Reign (text) , Days_held (text) , Location (text) , Event (text) | Elimination : Elimination_ID (text) , Wrestler_ID (text) , Team (text) , Eliminated_By (text) , Elimination_Move (text) , Time (text)","CREATE TABLE wrestler (
    Wrestler_ID INT,
    Name TEXT,
    Reign TEXT,
    Days_held TEXT,
    Location TEXT,
    Event TEXT
);

CREATE TABLE Elimination (
    Elimination_ID TEXT,
    Wrestler_ID TEXT,
    Team TEXT,
    Eliminated_By TEXT,
    Elimination_Move TEXT,
    Time TEXT
);"
customer_complaints,"Staff : staff_id (number) , gender (text) , first_name (text) , last_name (text) , email_address (text) , phone_number (text) | Customers : customer_id (number) , customer_type_code (text) , address_line_1 (text) , address_line_2 (text) , town_city (text) , state (text) , email_address (text) , phone_number (text) | Products : product_id (number) , parent_product_id (number) , product_category_code (text) , date_product_first_available (time) , date_product_discontinued (time) , product_name (text) , product_description (text) , product_price (number) | Complaints : complaint_id (number) , product_id (number) , customer_id (number) , complaint_outcome_code (text) , complaint_status_code (text) , complaint_type_code (text) , date_complaint_raised (time) , date_complaint_closed (time) , staff_id (number)","CREATE TABLE Staff (
    staff_id INT,
    gender TEXT,
    first_name TEXT,
    last_name TEXT,
    email_address TEXT,
    phone_number TEXT
);

CREATE TABLE Customers (
    customer_id INT,
    customer_type_code TEXT,
    address_line_1 TEXT,
    address_line_2 TEXT,
    town_city TEXT,
    state TEXT,
    email_address TEXT,
    phone_number TEXT
);

CREATE TABLE Products (
    product_id INT,
    parent_product_id INT,
    product_category_code TEXT,
    date_product_first_available TIME,
    date_product_discontinued TIME,
    product_name TEXT,
    product_description TEXT,
    product_price INT
);

CREATE TABLE Complaints (
    complaint_id INT,
    product_id INT,
    customer_id INT,
    complaint_outcome_code TEXT,
    complaint_status_code TEXT,
    complaint_type_code TEXT,
    date_complaint_raised TIME,
    date_complaint_closed TIME,
    staff_id INT
);"
department_management,"department : Department_ID (number) , Name (text) , Creation (text) , Ranking (number) , Budget_in_Billions (number) , Num_Employees (number) | head : head_ID (number) , name (text) , born_state (text) , age (number) | management : department_ID (number) , head_ID (number) , temporary_acting (text)","CREATE TABLE department (
    Department_ID INT,
    Name TEXT,
    Creation TEXT,
    Ranking INT,
    Budget_in_Billions INT,
    Num_Employees INT
);

CREATE TABLE head (
    head_ID INT,
    name TEXT,
    born_state TEXT,
    age INT
);

CREATE TABLE management (
    department_ID INT,
    head_ID INT,
    temporary_acting TEXT
);"
customers_and_products_contacts,"Addresses : address_id (number) , line_1_number_building (text) , city (text) , zip_postcode (text) , state_province_county (text) , country (text) | Products : product_id (number) , product_type_code (text) , product_name (text) , product_price (number) | Customers : customer_id (number) , payment_method_code (text) , customer_number (text) , customer_name (text) , customer_address (text) , customer_phone (text) , customer_email (text) | Contacts : contact_id (number) , customer_id (number) , gender (text) , first_name (text) , last_name (text) , contact_phone (text) | Customer_Address_History : customer_id (number) , address_id (number) , date_from (time) , date_to (time) | Customer_Orders : order_id (number) , customer_id (number) , order_date (time) , order_status_code (text) | Order_Items : order_item_id (number) , order_id (number) , product_id (number) , order_quantity (text)","CREATE TABLE Addresses (
    address_id INT,
    line_1_number_building TEXT,
    city TEXT,
    zip_postcode TEXT,
    state_province_county TEXT,
    country TEXT
);

CREATE TABLE Products (
    product_id INT,
    product_type_code TEXT,
    product_name TEXT,
    product_price INT
);

CREATE TABLE Customers (
    customer_id INT,
    payment_method_code TEXT,
    customer_number TEXT,
    customer_name TEXT,
    customer_address TEXT,
    customer_phone TEXT,
    customer_email TEXT
);

CREATE TABLE Contacts (
    contact_id INT,
    customer_id INT,
    gender TEXT,
    first_name TEXT,
    last_name TEXT,
    contact_phone TEXT
);

CREATE TABLE Customer_Address_History (
    customer_id INT,
    address_id INT,
    date_from TIME,
    date_to TIME
);

CREATE TABLE Customer_Orders (
    order_id INT,
    customer_id INT,
    order_date TIME,
    order_status_code TEXT
);

CREATE TABLE Order_Items (
    order_item_id INT,
    order_id INT,
    product_id INT,
    order_quantity TEXT
);"
company_1,"works_on : Essn (number) , Pno (number) , Hours (number) | employee : Fname (text) , Minit (text) , Lname (text) , Ssn (number) , Bdate (text) , Address (text) , Sex (text) , Salary (number) , Super_ssn (number) , Dno (number) | department : Dname (text) , Dnumber (number) , Mgr_ssn (number) , Mgr_start_date (text) | project : Pname (text) , Pnumber (number) , Plocation (text) , Dnum (number) | dependent : Essn (number) , Dependent_name (text) , Sex (text) , Bdate (text) , Relationship (text) | dept_locations : Dnumber (number) , Dlocation (text)","CREATE TABLE works_on (
    Essn INT,
    Pno INT,
    Hours INT
);

CREATE TABLE employee (
    Fname TEXT,
    Minit TEXT,
    Lname TEXT,
    Ssn INT,
    Bdate TEXT,
    Address TEXT,
    Sex TEXT,
    Salary INT,
    Super_ssn INT,
    Dno INT
);

CREATE TABLE department (
    Dname TEXT,
    Dnumber INT,
    Mgr_ssn INT,
    Mgr_start_date TEXT
);

CREATE TABLE project (
    Pname TEXT,
    Pnumber INT,
    Plocation TEXT,
    Dnum INT
);

CREATE TABLE dependent (
    Essn INT,
    Dependent_name TEXT,
    Sex TEXT,
    Bdate TEXT,
    Relationship TEXT
);

CREATE TABLE dept_locations (
    Dnumber INT,
    Dlocation TEXT
);"
workshop_paper,"workshop : Workshop_ID (number) , Date (text) , Venue (text) , Name (text) | submission : Submission_ID (number) , Scores (number) , Author (text) , College (text) | Acceptance : Submission_ID (number) , Workshop_ID (number) , Result (text)","CREATE TABLE workshop (
    Workshop_ID INT,
    Date TEXT,
    Venue TEXT,
    Name TEXT
);

CREATE TABLE submission (
    Submission_ID INT,
    Scores INT,
    Author TEXT,
    College TEXT
);

CREATE TABLE Acceptance (
    Submission_ID INT,
    Workshop_ID INT,
    Result TEXT
);"
epinions_1,"item : i_id (number) , title (text) | review : a_id (number) , u_id (number) , i_id (number) , rating (number) , rank (number) | useracct : u_id (number) , name (text) | trust : source_u_id (number) , target_u_id (number) , trust (number)","CREATE TABLE item (
    i_id INT,
    title TEXT
);

CREATE TABLE review (
    a_id INT,
    u_id INT,
    i_id INT,
    rating INT,
    rank INT
);

CREATE TABLE useracct (
    u_id INT,
    name TEXT
);

CREATE TABLE trust (
    source_u_id INT,
    target_u_id INT,
    trust INT
);"
party_host,"party : Party_ID (number) , Party_Theme (text) , Location (text) , First_year (text) , Last_year (text) , Number_of_hosts (number) | host : Host_ID (number) , Name (text) , Nationality (text) , Age (text) | party_host : Party_ID (number) , Host_ID (number) , Is_Main_in_Charge (others)","CREATE TABLE party (
    Party_ID INT,
    Party_Theme TEXT,
    Location TEXT,
    First_year TEXT,
    Last_year TEXT,
    Number_of_hosts INT
);

CREATE TABLE host (
    Host_ID INT,
    Name TEXT,
    Nationality TEXT,
    Age TEXT
);

CREATE TABLE party_host (
    Party_ID INT,
    Host_ID INT,
    Is_Main_in_Charge OTHERS
);"
product_catalog,"Attribute_Definitions : attribute_id (number) , attribute_name (text) , attribute_data_type (text) | Catalogs : catalog_id (number) , catalog_name (text) , catalog_publisher (text) , date_of_publication (time) , date_of_latest_revision (time) | Catalog_Structure : catalog_level_number (number) , catalog_id (number) , catalog_level_name (text) | Catalog_Contents : catalog_entry_id (number) , catalog_level_number (number) , parent_entry_id (number) , previous_entry_id (number) , next_entry_id (number) , catalog_entry_name (text) , product_stock_number (text) , price_in_dollars (number) , price_in_euros (number) , price_in_pounds (number) , capacity (text) , length (text) , height (text) , width (text) | Catalog_Contents_Additional_Attributes : catalog_entry_id (number) , catalog_level_number (number) , attribute_id (number) , attribute_value (text)","CREATE TABLE Attribute_Definitions (
    attribute_id INT,
    attribute_name TEXT,
    attribute_data_type TEXT
);

CREATE TABLE Catalogs (
    catalog_id INT,
    catalog_name TEXT,
    catalog_publisher TEXT,
    date_of_publication TIME,
    date_of_latest_revision TIME
);

CREATE TABLE Catalog_Structure (
    catalog_level_number INT,
    catalog_id INT,
    catalog_level_name TEXT
);

CREATE TABLE Catalog_Contents (
    catalog_entry_id INT,
    catalog_level_number INT,
    parent_entry_id INT,
    previous_entry_id INT,
    next_entry_id INT,
    catalog_entry_name TEXT,
    product_stock_number TEXT,
    price_in_dollars INT,
    price_in_euros INT,
    price_in_pounds INT,
    capacity TEXT,
    length TEXT,
    height TEXT,
    width TEXT
);

CREATE TABLE Catalog_Contents_Additional_Attributes (
    catalog_entry_id INT,
    catalog_level_number INT,
    attribute_id INT,
    attribute_value TEXT
);"
